dynam semant for agent commun languag michael rovatso school of informat the univers of edinburgh edinburgh eh8 9le unit kingdom mrovatso@inf.ed.ac.uk abstract thi paper propos dynam semant for agent  commun languag (acl) as a method for tackl some of the fundament problem associ with agent  commun in open multiag system. base on the idea of provid altern semant variant for speech act and transit rule between them that ar conting on previou agent behaviour, our framework provid an  improv notion of ground semant in ongo interact, a simpl mechan for distinguish between compliant and expect behaviour, and a wai to specifi sanction and reward mechan as part of the acl itself. we extend a common framework for commit-base acl semant to obtain these properti, discuss desiderata for the design of concret dynam semant togeth with exampl, and analys their properti. categori and subject descriptor i.2.11 [artifici intellig]: distribut artifici  intellig-multiag system 1. introduct the field of agent commun languag (acl)  research ha long been plagu by problem of verifi and ground [10, 13, 17]. earli mentalist semant that specifi the semant of speech act in term of  preand post-condit conting on mental state of the  particip (e.g. [3, 4, 12, 15]) lack verifi regard  complianc of agent with the intend semant (as the  mental state of agent cannot be observ in open multiag system (mass)). unabl to safeguard themselv against abus by malici, decept or malfunct agent, mentalist semant ar inher unreli and  inappropri for us in open ma in which agent with potenti conflict object might deliber exploit their  adversari" concept of messag semant to provok a certain behaviour. commit-base semant [6, 8, 14], on the other hand, defin the mean of messag exchang among agent in term of publicli observ commit, i.e. pledg to bring about a state of affair or to perform  certain action. such semant solv the verifi problem as thei allow for trace the statu of exist commit at ani point in time given observ messag and action so that ani observ can, for exampl, establish whether an agent ha perform a promis action. howev, thi can onli be done a posteriori, and thi creat a ground  problem as no expect regard what will happen in the futur can be form at the time of utter or receiv a messag pure on the ground of the acl semant. further, thi impli that the semant specif doe not provid an interfac to agent" deliber and  plan mechan and henc it is unclear how ration agent would be abl to decid whether to subscrib to a suggest acl semant when it is deploi. final, none of the exist approach allow the acl to specifi how to respond to a violat of it semant by individu agent. thi ha two implic: firstli, it is left it up to the individu agent to reason about potenti violat, i.e. to bear the burden of plan it own  reaction to other" non-compliant behaviour (e.g. in order to sanction them) and to anticip other" reaction to own misconduct without ani guidanc from the acl  specif. secondli, exist approach fail to exploit the  possibl of sanction and reward certain behaviour in a commun-inher wai by modifi the futur  mean of messag utter or receiv by compliant/deviant agent. in thi paper, we propos dynam semant (dss) for acl as a solut to these problem. our notion of ds is base on the veri simpl idea of defin differ  altern for the mean of individu speech act (so-call semant variant) in an acl semant specif, and transit rule between semant state (i.e. collect of variant for differ speech act) that describ the current mean of the acl. these element taken togeth result in a fsm-like view of acl specif where each individu state provid a complet acl semant and state  transit ar trigger by observ agent behaviour in order to (1) reflect futur expect base on previou interact experi and (2) sanction or reward certain kind of  behaviour. in defin a ds framework for commit-base acl, thi paper make three contribut: 1. an extens of commit-base acl semant to provid an improv notion of ground commit in agent interact and to allow acl specif to be directli us for plan-base ration decis make. 2. a simpl wai of distinguish between compliant and expect behaviour with respect to an acl  specif that enabl reason about the potenti  behaviour of agent pure from an acl semant  perspect. 3. a mechan for specifi how mean evolv with agent behaviour and how thi can be us to describ commun-inher sanction and  reward mechan essenti to the design of open mass. furthermor, we discuss desiderata for ds design that can be deriv from our framework, present exampl and  analys their properti. the remaind of thi paper is structur as follow:  section 2 introduc a formal framework for dynam acl  semant. in section 3 we present an analysi and discuss of thi framework and discuss desiderata for the design of acl with dynam semant. section 4 review relat approach, and section 5 conclud. 2. formal framework our gener framework for describ the kind of mass we ar interest in is fairli simpl. let ag = {1, . . . , n} a finit set of agent, {aci}i∈ag a collect of action set (where aci ar the action of agent i), a = ×n i=1aci the joint action space, and env a set of environ state. a run is a sequenc r = e1 a1 → . . . at−1 → et where ai ∈ a (ai[j] denot the action of agent j in thi tupl), and ei ∈ env. we defin |r| = t, last(r) = et, r[1 : j] is short for the j-long initi sub-sequenc of r, and we write r r for ani run r iff ∃j ∈ n.r = r[1 : j]. write r(env, a) for the set of all possibl run, we can view each agent i as a function gi : r(env, a) → aci  describ the agent"s action choic depend on the  histori of previou environ state and joint action. the set of all agent function for i given a and env is  denot by gi(env, a). the (finit, discret, stationari, fulli access, determinist) environ is defin by a state transform function f : env × a → env, so that the system"s oper for an initi state e1 is defin by ei+1 = f(ei, g(e1 a1 → . . . ai−1 → ei)) for all i ≥ 1 (g is the joint vector of function gi). thi definit impli that  execut of action is synchronis among agent, so that the system evolv though an execut of round where all agent perform their action simultan. we denot the set of all run given a particular  configur of agent function g by r(env, a, g). we write gi ∼ r where gi an agent function and r a run iff ∀1 ≤ j ≤ |r|.gi(r[1 : j]) = aj [i] (i.e. gi is compat with r in everi time step as far as i"s action ar concern). we us a (standard) proposit logic languag l with entail relat e |= ϕ for e ∈ env and ϕ ∈ l  deunset pend cancel activ violat fulfil figur 1: commit state and state transit in the fornara and colombetti model: edg drawn us solid line indic transit brought about by agent commun, dash line indic  physic agent action or environment event that caus state transit fine in the usual wai.1 we introduc special proposit done(i, a) for each action a ∈ ∪n i=1aci in l to denot it is true that action a ha just been perform, extend |= to run r in the follow wai: r |= ϕ if last(r) |= ϕ r |= done(i, a) if r = e1 a1 → . . . at−1 → et ∧ a = at−1[i] i.e. done(i, a) is exactli true for those action that made up part of the joint action vector ai−1 in the predecessor state, and all other formula that were entail by the last state of r ar still valid. our model impli that each agent execut exactli on action in each time step. 2.1 commit our notion of commit is base on a slight variat of the framework propos by fornara and colombetti [6]: commit come into exist as unset, e.g. when a request for achiev χ if a certain condit ϕ becom true is issu from i to j. the commit becom pend if the debtor j is requir to fulfil it, e.g. after have accept it. a pend commit will becom activ if it  condit ϕ becom true, and if χ is brought about in that case it becom fulfil, otherwis violat. commit can becom cancel in differ situat, e.g. if an  unset commit is reject. also, environment event can lead χ to becom true in which case the commit  becom fulfil without the debtor"s contribut. figur 1 provid a graphic represent of commit state  transit in thi framework. apart from a slightli differ notat us to maintain a more detail histori of commit, we will extend them to also contain a deactiv condit ψ apart from ϕ (which we call activ condit) which caus ani commit to be cancel if it becom true. 1 more precis l contain atom proposit p = {p, q, . . .}, the usual connect ∨ and ¬ (with  abbrevi ⇒ and ∧). as for semant, a function interpret function i : p ×env → { , ⊥} assign a truth valu to each proposit in each environment state, and the entail relat e |= ϕ for e ∈ env and ϕ ∈ l is defin induct: e |= ϕ if ϕ ∈ p and i(ϕ, e) = ; e |= ¬ϕ if e |= ϕ; e |= ϕ ∨ ψ if e |= ϕ or e |= ψ. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 101 d : cs ← cs∪{ ι, c : χ ⊕ ϕ ψ t| ι, s : χ ⊕ ϕ ψ ∈ cs, r |= ψ, s ∈ {u, p, a}, ι, c : χ ⊕ ϕ ψ /∈ cs} a : cs ← cs∪{ ι, a : χ ⊕ ϕ ψ t| ι, p : χ ⊕ ϕ ψ ∈ cs, r |= ϕ, ι, a : χ ⊕ ϕ ψ /∈ cs} s : cs ← cs∪{ ι, f : χ ⊕ ϕ ψ t| ι, a : χ ⊕ ϕ ψ ∈ cs, r |= χ, ι, f : χ ⊕ ϕ ψ /∈ cs} f : cs ← cs∪{ ι, f : χ ⊕ ϕ ψ i→j t | ι, a : χ ⊕ ϕ ψ i→j t−1 ∈ cs, r |= done(i, a), caus(a, χ)} v : cs ← cs∪{ ι, v : χ ⊕ ϕ ψ i→j t | ι, a : χ ⊕ ϕ ψ i→j t−1 ∈ cs, r |= done(i, a), ¬caus(a, χ)} tabl 1: environment commit process rule for current run r with |r| = t definit 1. a commit is a structur ι, s : χ ⊕ ϕ ψ i→j t where - ι is a uniqu commit identifi, - s denot the commit state (ani of unset,  pend, activ, violat, fulfil, or cancel,  abbrevi by the respect initi), - i is the debtor, j is the creditor, - χ ∈ l is the debitum (i.e. the proposit that i  commit to make true in front of j), - ϕ, ψ ∈ l ar the activ/deactiv condit, - and t is the instant (in a run) at which thi  commit enter it current state s. as an exampl, x, v : receiv(5, $500) ⊕ receiv(3, toi) return(3, toi) 3→5 12 denot that agent 3 violat commit x toward agent 5 to pai him $500 in timestep 12. he wa suppos to make the payment after receiv the toi unless he sent back the toi. we introduc deactiv condit so as to be abl to complet revok exist commit: send back the monei doe not constitut a fulfil of the origin contract, but instead an annul thereof. thi provid us with the capabl to defin valid condit us ϕ and ψ, which is us for thing like deadlin for unset commit (if i don"t get a respons within 3 time-step my request will expir). for breviti, we sometim omit indic or content  element when clear from the context (in particular, we often write Γ for the content χ ⊕ ϕ ψ). we write c for the set of all possibl commit and denot set of commit (so-call commit store) by cs ∈ ℘fin (c). to handl the effect of environment event and agent action on a commit store cs, tabl 1 introduc five commit transit rule which ar execut in each time step by the system or ani observ who intend to clarifi the statu of exist commit in the order shown: the deactiv rule d is the first to fire and cancel ani  unset, pend or activ commit if ψ becom true. for the remain pend commit2 , the activ rule a describ how these becom activ if ϕ becom true. note that when ϕ is true in subsequ state we check whether 2 to avoid problem with contradictori commit  specif (e.g. when both ϕ and ψ becom true), we give deactiv strict preced over activ. thi activ commit is contain in cs to avoid  duplic (thi is becaus we keep a full record of the  commit histori for reason which will becom clear below).3 rule s cater for serendip i.e. fulfil of  commit not brought about by the respect agent, but  simpli by environment chang that made the debitum true. final, the fulfil/violat rule f/v record whether the action perform by the debtor in the previou step (r |= done(i, a)) ha caus the debitum χ of ani  commit which becam activ in the previou timestep to  becom true. we need onli consid those commit that becam activ in the previou step t − 1 sinc we can  verifi their fulfil statu in t. thi verif hing on a domain-depend predic caus(a, χ) which we have not mention so far. it should be true if action a is suppos to bring about χ, and delin the exist social notion of what constitut a reason attempt to achiev χ in the given context (it definit mai rang from requir that χ ha actual been achiev to allow ani action a that doe not necessarili result in ¬χ). 2.2 ground in fornara and colombetti"s and similar approach, the statu of commit is verifi, but thei ar not ground in expect about interact. such semant (similar in style to what he have just defin in term of cs updat rule) tell us what commit exist and which state thei ar in, but not how thi will affect futur agent behaviour. to provid such ground, we introduc notion of  compliant and expect behaviour. an agent is behav in  complianc with it commit if it alwai immedi  fulfil all activ commit. more precis, the behaviour of agent i is said to be compliant with cs at time t iff ∀k ≤ t  ι, a : Γ i→j k ∈ cs ⇒ ι, f : Γ i→j k ∈ cs  though simpl, thi definit of complianc is not veri  us becaus it place constraint on css but not on actual agent function. to achiev thi, we can instead us the content of the cs to restrict the rang of admiss agent function to those that ar in accord with it us the follow definit: definit 2. for ani run r ∈ r(env, a), let cs(r) the set of commit that ha result from execut of r assum that certain action (includ messag) creat commit or chang their statu. the set of compliant agent function with respect to a commit store cs is 3 while commit identifi advers affect the  readabl of our notat, thei ar necessari here to uniqu  determin which pend commit is activ. 102 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) defin as compliant(cs) := ˘ gi ∈ gi(env, a) ˛ ˛ ∀r ∼ gi. ι, p : χ ⊕ ϕ ψ i→j ∈ cs(r) = cs. ∀r r. ι, a : χ ⊕ ϕ ψ i→j |r | ∈ cs(r ) ⇒ ` ∃a ∈ aci.caus(a, χ) ∧ gi(r ) = a ´ ¯ what thi definit captur is the follow  characteris of a compliant agent function gi: for all run r that the agent function gi contribut to: if r ha creat a pend commit regard χ, then if thi commit becom activ at the end of some extens r of r in the futur, gi will caus the agent to perform an action a that caus χ.4 next, to cater for the anticip of non-compliant  behaviour we need to introduc a notion of expect  behaviour that overrid compliant behaviour. for thi, we introduc a second type of commit which we will call expect to avoid confus and distinguish from  ordinari (now call norm) commit by us round bracket (ι, s : Γ)i→j t . thei ar treat exactli like other commit in term of the rule introduc abov but  express what the agent is expect to do (in the non-norm sens of an object predict of behaviour) rather than what it is suppos to do in a norm sens. to defin the notion we need below, we introduc the follow construct: cs := { ι, s : Γ ∈ cs|s ∈ {u, p, a, f, v}} cs := {(ι, s : Γ) ∈ cs|(ι, s : Γ) ∈ cs, ι, s : Γ ∈ cs, s, s ∈ {u, p, a, f, v}} cs simpli restrict the commit store to all  norm commit. henc, compliant( cs ) specifi what agent ar suppos to do. cs , on the other hand,  overrid all norm commit element in cs for which an expect also exist, i.e. expect ar given  preced over the norm commit. with thi, we can defin expect behaviour as expect(cs) := compliant( cs ) i.e. behaviour that adher to expect where such expect exist and is compliant otherwis. the separ, parallel, treatment of compliant and expect behaviour ha two advantag: firstli, we can respond to unexpect compliant behaviour, i.e. when we expect that someon will not obei their commit we can still respond to it if thei do (and, for exampl, regain trust in them). secondli, we can cater for a varieti of rule for translat commit store to actual futur event which a reason agent can us in it plan process. for the purpos of thi paper, we will assum that agent base their predict about other on expect behaviour if it is differ from compliant behaviour, and that thei predict compliant behaviour, els. 4 note the quantif in thi definit: the properti ha to hold for everi run that gave rise to ι and is compat with gi. in particular, thi must be independ of ani part of the histori (e.g. other agent" action and previou environ state) given cs(r). we also quantifi over all extens r of r, i.e. fulfil of the commit ha to happen if the appropri condit aris regardless of other factor. 2.3 static acl semant tabl 2 show an exampl for a small fragment of an acl semant defin us our framework, with two altern definit (ac and ac2) for the semant of the accept messag type. each of the so-call dialogu oper  (similar to ai plan action schemata) is defin us the graphic notat p a q where p, a, and q ar schemata for precondit, messag (of a certain type), and post-condit, respect.  precondit determin whether an action schema is  applic in a certain situat or not and contain formula from l and/or constraint on the current content of cs.  postcondit contain chang to the knowledg base and  modif to cs, i.e. thei ar interpret like  add/deletelist in tradit ai plan. for ani such oper o = p, a, q we defin pre(o) = p, action(o) = a and post(o) = q. all element of a dialogu oper can  contain logic variabl in their pre- and post-condit and sender/receiv/content variabl in the action slot. in our exampl fragment, the oper rq for request creat an unset commit with a fresh identifi ι and current timestamp (we assum that r |= time(t) ⇔ |r| = t, and there is a global system time that can be inspect by all agent), and ac/rj add a pend/cancel equival of ι to cs. a fragment consist of {rq, rj, ac} is  equival to the standard semant of the respect perform type defin in [6].5 note that our oper onli contain object verifi pre- and post-condit, and if agent want to conform to it thei need to compli with these  oper. in the follow, we will assum that agent alwai adher to the acl specif syntact6 . us ac2 instead of ac enabl us to exploit the power of our distinct between compliant and expect behaviour, express that we don"t trust i to adher to the normal semant of accept: it postcondit specifi that expect(cs) is not restrict to behaviour that will fulfil the commit but suggest that it ha actual been cancel. at the same time, we maintain the norm commit that ι is pend so that i"s behaviour would be seen to lie within compliant(cs) if i deviat from our (pessimist) expect and doe the right thing instead. 2.4 dynam semant 2.4.1 defin dynam semant to defin ds for acl we now introduc a state  transit system in which each state specifi an ordinari (static) commit-base semant and a rang of agent pair for which these semant ar assum to appli. 5 note that we allow for request ident thing befor  receiv a respons and respond sever time to the same request. simpl addit condit can be introduc to avoid these effect which we omit here for lack of space. the same is true of addit constraint to manag control flow issu in actual dialogu (e.g. turn-take). 6 thi mean that, for an appropri variabl substitut ϑ, r |= pre(o)ϑ hold when o is appli at r and that cs(r) is transform accord to post(o)ϑ after it applic. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 103 rq : time(t), new(ι) request(i, j, ι : Γ) cs ← cs ∪ { ι, u : Γ i→j t } rj : ι, u : Γ j→i t ∈ cs, time(t) reject(i, j, ι : Γ) cs ← cs ∪ { ι, c : Γ i→j t } ac : ι, u : Γ j→i t ∈ cs, time(t) accept(i, j, ι : Γ) cs ← cs ∪ { ι, p : Γ i→j t } ac2 : ι, u : Γ j→i t ∈ cs, time(t) accept(i, j, ι : Γ) cs ← cs ∪ { ι, p : Γ i→j t } ∪ {(ι, c : Γ)i→j t } tabl 2: exampl commit-base semant for a small acl fragment ι, v : Γ i→j ∈ cs : {(i, ∗)} ∪ {(j, i)} s0 s1 ∀ ι, v : Γ i→j t ∈ cs ∃ ι, f : Γ i→j t ∈ cs.t > t : {(i, ∗)} figur 2: fsm-like state transit diagram  describ the Δ-relat in a ds specif definit 3. a dynam semant (ds) is a structur o, s, s0, Δ where - o = {o1, o2, . . . , on} a set of dialogu oper, - s ⊆ ℘(o) is a set of semant state specifi as  subset of dialogu oper which ar valid in thi state, - s0 ∈ s is the initi semant state, - and the transit relat Δ ⊆ s × ℘(c) × ℘(ag × ag) × s defin the transit over s trigger by condit express as element of ℘(c) (c is the set of all possibl commit). the mean of a transit (s, c, {(i1, j1), . . . , (in, jn)}, s ) ∈ Δ is as follow: assum a map act : ag × ag → s which specifi that the semant of oper in s hold for messag sent from i to j . then, if cs ∈ c (i.e. the current cs match the constraint c given as a collect of possibl css) thi will trigger a transit to state s for all pair of agent in {(i1, j1), . . . , (in, jn)} for which the constraint wa satisfi and will updat act accordingli. in other word, the act map track which version of the semant is valid for which pair of commun partner over time. 2.4.2 exampl to illustr these concept, consid the follow  exampl: let o = {rq, rj, ac, ac2}, s = {s0, s1} where s0 = {rq, rj, ac} and s1 = {rq, rj, ac2}, i.e. there ar two possibl state of the semant which onli differ in their definit of accept (we call altern version of a singl dialogu oper like ac and ac2 semant variant). we assum that initi act(i, j) = s0 for all agent i, j ∈ ag. we describ δ by the transit diagram shown in figur 2. in thi diagram, edg carri label c : a where c is a constraint on the content of cs follow by a descript of the set of agent pair a for which the transit should be made to the target state. write a(s) = act−1 (s) for the so-call rang of agent pair for which s is activ, we us agent variabl like i and j and the wildcard symbol ∗ that can be bound to ani agent in a(s), and we assum that thi bind carri over to descript of a. for exampl, the edg with label  ι, v : Γ i→j ∈ cs : {(i, ∗)} ∪ {(j, i)} can be interpret as follow: select all pair (i, j) ∈ a(s0) for which ι, v : Γ i→j ∈ cs appli (i.e. i ha violat some commit toward j) and make s1 valid for the set of agent {(i, k)|k ∈ a(s0)} ∪ {(j, i)}. thi mean that for all agent i who have li, s1 will becom activ for (i, j ) where j ∈ a(s0) and s1 will also becom activ for (j, i). the wai the ds of the diagram abov work is as  follow: initi the semant sai (for everi agent i) that thei will fulfil ani commit truthfulli (the us of ac ensur that expect behaviour is equival to compliant behaviour). if an agent i violat a commit onc then s1 will becom activ for i toward all other agent, so that thei won"t expect i to fulfil ani futur commit.  moreov, thi will also appli to (j, i) so that the culprit i should not expect the deceiv agent j to keep it promis toward i either in the futur. howev, thi will not affect  expect regard their interact with i by agent other than i (i.e. thei still have no right to violat their own  commit). thi reflect the idea that (onli) agent that have been fool ar allow to trespass (onli) against those agent who trespass against them. howev, if i ever fulfil ani commit again (after the latest  violat, thi is ensur by the complex constraint us as a label for the transit from s1 to s0), the semant in s0 will becom valid for i again. in thi case, though, s1 will still be valid for the pair (j, i), i.e. agent j will regain trust in i but cannot be expect to be trustworthi toward i ever again. rather than suggest that thi is a particularli us commun-inher mechan for sanction and  reward specif kind of behaviour, thi exampl serv to illustr the express of our framework and the kind of distinct it enabl us to make. 2.4.3 formal semant the semant of a ds can be defin induct as  follow: let cs(r) denot the content of the commit store after run r as befor. we us the notat a(δ, cs) = {(i, j)|cs|i,j ∈ c} ∩ a(s) ∩ a to denot the set of agent that ar to be move from s to s due to transit rule δ = (s, c, a, s ) ∈ Δ given cs, where cs|i,j is the set of commit that mention i and/or j (in their sender/receiv/content slot). in other word, a(δ, cs) contain those pair of agent who ar (i) mention in the commit cover by the constraint c, (ii) contain in the rang of s, and (iii) explicitli list in a as belong to those pair of agent that should be affect by the transit δ. 104 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) definit 4. the state of a dynam semant o, s, s0, Δ after run r with immedi predecessor r is defin as a map actr as follow: 1. r = ε: actε(i, j) = s0 for all i, j ∈ ag 2. r = ε: actr(i, j) = 8 >< >: s if ∃δ = (s, c, a, s ) ∈ Δ. (i, j) ∈ a(δ, cs(r)) actr (i, j) els thi maintain the properti act−1 r (s) = act−1 r (s) − a(δ, cs(r )), which specifi that the agent pair to be move from s to s ar remov from the rang of s and ad to the rang of s . what is not ensur by thi definit is consist of the state transit system, i.e. make sure that the semant successor state is uniqu identifi for ani state of the commit store and previou state so that everi agent pair is onli assign on activ state in each step, i.e. actr is actual a function for ani r.7 2.4.4 integr onc the ds itself ha been specifi, we need to  integr the differ compon of our framework to monitor the dynam of our acl semant and it implic for expect agent behaviour. start with an initi empti commit store cs and initi semant state s0 such that actε(i, j) = s0 for ani two agent i and j, the agent (or extern observ) observ (a partial subset of) everyth that is commun in the system in each step. by appli the commit transit rule (d, a, s, f and v ) we can updat cs accordingli, ignor ani observ messag sent from i to j that doe not syntact match the dialogu oper set defin in actr(i, j) for a current run r. after thi updat ha been perform for all observ messag and action in thi cycl, which should not depend on the order of messag8 , we can comput for ani messag sent from i to j the new valu of actr (i, j) depend on the semant transit rule of the ds if r is the successor run of r. with thi, we can then determin what the compliant and expect behaviour of agent will be under these new condit. thu, an agent can us inform about expect  behaviour in it own plan process by assum that all agent involv will exhibit their expect (rather than just compliant) behaviour. thi predict will not alwai be more accur than under normal (static) acl semant, but sinc it is common knowledg that agent assum  expect behaviour to occur (and, by virtu of the ds-acl specif, have the right to do that) most reason dynam acl specif will make provis to ensur that it is safer to assum expect rather than fulli  compliant behaviour if thei want to promot their us by agent. 7 on wai of ensur thi is to requir that ∀s ∈ s. (∩{c|(s, c, a, s ) ∈ Δ(s)} = ∅) so that no two constraint pertain to outgo edg of s can be fulfil by cs at a time. in some case thi mai be too coars-grain - it would be suffici for constraint to be mutual exclus for the same pair of agent at ani point in time - but thi would have to be verifi for an individu ds on a  case-bycas basi. 8 thi is the case for our oper, becaus their pre- and post-condit never concern or affect ani commit other than those that involv both i and j - avoid ani connect to third parti help us keep the cs-updat  independ of the order in which observ ar process. 2.4.5 complex issu the main disadvantag of our approach is the space  complex of the dynam acl specif: if d is the number of dialogu oper in a languag and b is the maximum number of semant variant of a singl dialogu oper within thi languag, the ds specif would have to specifi o(db ) state. in mani case, howev, most of the speech act will not have differ variant (like rq and rj in our exampl) and thi mai significantli reduc the number of ds state that need to be specifi. as for the run-time behaviour of our semant  process mechan, we can assum that n messag/action ar sent/perform in each process step in a system with n agent. everi commit process rule (d, s, etc.) ha to perform a pass over the content of cs. in the worst case everi origin creat commit (of which there mai be nt after t step) mai have immedi becom pend,  activ and violat (which doesn"t requir ani further physic action, so that everi agent can creat a new commit in each step).thu, if ani agent creat a new commit in each step without ever fulfil it, thi will result in the total size of cs be in o(nt).9 regard semant state transit, as mani as n  differ pair of agent could be affect in a singl iter by n messag. assum that the verif of cs-constraint for these transit would take o(nt), thi yield a total  updat time of o(n2 t) for track ds evolut. thi bound can be reduc to o(n2 ) if a quasi-stationar  assumpt is made by limit the window of earlier  commit that ar be consid when verifi transit constraint to a constant size (and thu obtain a finit set of possibl commit store).10 3. analysi and discuss the main strength of our framework is that it allow us to exploit the three main element of reciproc: • reput-base adapt: the ds adapt the  expect toward agent i accord to i"s previou  behaviour by modifi the semant state to better  reflect thi behaviour (base on the assumpt that it will repeat itself in the futur). • mutual of expect: the ds adapt the  expect toward j"s behaviour accord to i"s previou behaviour toward j to better reflect j"s respons to i"s observ behaviour (in particular, allow j to behav toward i as i behav toward j earlier). • recoveri mechan: the ds allow i to revert to an earlier semant state after have undon a chang in expect by a further, later chang of behaviour (e.g. by mean of redempt). in open system in which we cannot enforc certain  behaviour, these ar effect the onli avail mean for indirect sanction and reward. 9 thi is actual onli a lower bound on the complex for commit process which could becom even wors if domin by the complex of verifi entail |=; howev, thi would also hold for a static acl semant. 10 for exampl, thi could be us if we want to discard commit whose statu wa last modifi more than k time step ago (thi is problemat, as it might forc us to discard certain unset/pend commit befor thei  becom pend/activ). the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 105 there ar two further dimens that affect ds-base sanction and reward mechan and ar orthogon to the abov: on concern the charact of the semant state chang (i.e. whether it is a reward or punish), the other the degre of adapt (reput-base mechan, for exampl, need not realist reflect the behaviour of the culprit, but mai instead utilis immedi (exagger) stigmatis of agent as a deterr). albeit simpl, our exampl ds describ abov make us of all these aspect, and apart from consist and  complet, it also satisfi some other us properti: 1. non-redund: no two dialogu oper in o should have ident pre- and post-condit, and ani two semant variant of an oper must differ in term of pre- and/or post-condit: ∀o, o ∈ o .(pre(o) = pre(o )∧post(o) = post(o ) ⇒ o = o ) ∀o, o ∈ o .(action(o) = action(o ) ⇒ pre(o) = pre(o ) ∨ post(o) = post(o)) 2. reachabl of all semant state: ani constraint caus a transit must be satisfi in principl when us the dialogu oper and physic action that ar provid: ∀(s, c, a, s ) ∈ Δ ∃r ∈ r(env, a).cs(r) ∩ c = ∅ 3. distinct between expect and compliant  behaviour: the content of expect must differ from that of norm commit at least for some  semant variant (give rise to non-compliant  expect for some run): ∃r ∈ r(env, a) .expect(cs(r)) = compliant(cs(r)) 4. complianc/devianc realis: it must be  possibl for agent in principl to compli with norm commit or deviat from them in principl: ∃r ∈ r(env, a) .expect(cs(r)) = ∅∧ compliant(cs(r)) = ∅ while not absolut essenti, these constitut desiderata for the design of ds-acl as thei add to the simplic and clariti of a given semant specif. our  framework rais interest question regard further potenti properti of ds such as: 1. respect for commit autonomi: the semant must not allow an agent to creat a pend  commit for anoth agent or to violat a commit on behalf of anoth agent. while in some case some agent should be abl to enforc commit upon other, thi should gener be avoid to ensur agent autonomi. 2. avoid commit inconsist: the acl must either disallow commit to contradictori action or belief, or at least provid oper for rectifi such contradictori claim. under contradictori  commit, no possibl behaviour can be  compliantit is up to the design to decid to which extent thi should be permit. 3. unprejud judgement: expect behaviour  predict must not deviat from compliant behaviour  predict if deviant behaviour ha not been observ so far (in particular thi must hold for the initi semant state). thi might not alwai be desir as initi distrust is necessari in some system, but it increas the chanc that agent will agre to particip in commun. 4. converg: the semant state of each of the  dialogu oper will remain stabl after a finit  number of transit, regardless of ani further agent  behaviour11 . if thi properti hold, thi would impli that agent can stop track semant state transit  after some amount of initi interact. the advantag of thi is reduc complex, which of cours come at the price of give up adapt. 5. forgiv: after initi devianc, further compliant behaviour of an agent should lead to a semant state that predict compliant behaviour for that agent again. here, we have to trade off cautious against the  provis of incent to resum cooper behaviour. trust an agent make other vulner to  exploit - blacklist an agent forev, though, might lead that agent to keep up it unpredict and  potenti malici behaviour. 6. equal: unless thi is requir by domain-specif constraint, the same dynam of semant should appli to all parti involv. our simpl exampl semant satisfi all these  properti apart from converg. mani of the abov  properti ar debat, as we have to trade off cautious against the provis of incent for cooper behaviour. while we cannot make ani gener statement here  regard optim ds-acl design, our framework provid the tool to test and evalu the perform of differ such commun-inher sanction and reward  mechan (i.e. social rule that do not presuppos abil to direct punish or reward through physic action) in real-world applic. 4. relat work expect-base reason about interact wa first propos in [2], consid the evolut of expect describ as probabilist expect of commun and action sequenc. the same author suggest a more gener framework for expect-base commun  semant [9], and argu for a consequentialist view of  semant that is base on defin the mean of utter in term of their expect consequ and updat these expect with new observ [11]. howev, their approach doe not us an explicit notion of commit which in our framework mediat between commun and behaviour-base ground, and provid a clear  distinct between a norm notion of complianc and a more empir notion of expect. ground for (mentalist) acl semant ha been  investig in [7] where ground inform is view as inform that is publicli express and accept as  be true by all the agent particip in a convers. like [1] (which base the notion of publicli express on role rather than intern state of agent) these author" main concern is to provid a verifi basi for determin the semant of express mental state and commit. though our framework is onli concern with commit to the achiev of state of affair rather than exchang inform, in a sens, ds provid an altern view by specifi what will happen if the assumpt on which what is publicli accept is base ar violat. 11 in a non-trivial sens, i.e. when some initi transit ar possibl in principl 106 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) our framework is also relat to deontic method for the specif of oblig, norm and sanction. in thi area, [16] is the onli framework that we ar awar of which consid dynam oblig, norm and sanction.  howev, as we have describ abov we sole utilis semant evolut as a sanction and reward mechan, i.e.  unlik thi work we do not assum that agent can be directli punish or reward. final, the fsm-like structur of the ds transit  system in combin with agent commun is  reminisc of work on electron institut [5], but there the focu is on provid differ mean of commun in differ scene of the interact process (e.g. differ protocol for differ phase of market-base interact) wherea we focu on differ semant variant that ar to be us in the same interact context. 5. conclus thi paper introduc dynam semant for acl as a method for deal with some fundament problem of agent commun in open system, the simpl  underli idea be that differ cours of agent behaviour can give rise to differ interpret of mean of the  messag exchang among agent. base on a common  framework of commit-base semant, we present a notion of ground for commit base on notion of compliant and expect behaviour. we then defin dynam  semant as state transit system over differ semant state that can be view as differ version of acl  semant in the tradit sens, and can be easili associ with a plan-base view of reason about  commun. therebi, our focu wa on simplic and on provid mechan for track semant evolut in a  down-toearth, algorithm fashion to ensur applic to mani differ agent design. we discuss the properti of our framework show how it can be us as a power commun-inher mechan for reward and sanction agent behaviour in open system without compromis agent autonomi,  discuss it integr with agent" plan process,  complex issu, and present a list of desiderata for the  design of acl with such semant. current, we ar work on fulli-fledg specif of dynam semant for more complex languag and on extend our approach to mentalist semant where we view statement about mental state as commit  regard the ration implic of these mental state (a simpl exampl for thi is that an agent commit itself to drop an ostens intent that it is claim to  maintain if that intent turn out to be unachiev). in thi context, we ar particularli interest in appropri  mechan to detect and respond to ly by interrog suspici agent and forc them to commit themselv to (set of) mental state publicli while sanction them when these ar inconsist with their action. 6. refer [1] g. boella, r. damiano, j. hulstijn, and l. van der torr. acl semant between social commit and mental attitud. in proceed of the  intern workshop on agent commun , 2006. [2] w. brauer, m. nickl, m. rovatso, g. weiß, and k. f. lorentzen. expect-orient analysi and design. in proceed of the 2nd workshop on agent-orient softwar engin , lnc 2222, 2001. springer-verlag, berlin. [3] p. r. cohen and h. j. levesqu. commun action for artifici agent. in proceed of the first intern confer on multi-agent system, page 65-72, 1995. [4] p. r. cohen and c. r. perrault. element of a plan-base theori of speech act. cognit scienc, 3:177-212, 1979. [5] m. esteva, j. rodriguez, j. arco, c. sierra, and p. garcia. formalis agent mediat electron institut. in catalan congr on ai, page 29-38, 2000. [6] n. fornara and m. colombetti. oper  specif of a commit-base agent commun languag. in proceed of the first intern joint confer on autonom agent and multiag system, page 536-542, bologna, itali, 2002. acm press. [7] b. gaudou, a. herzig, d. longin, and m. nickl. a new semant for the fipa agent commun languag base on social attitud. in proceed of the 17th european confer on artifici intellig, riva del garda, itali, 2006. io press. [8] f. guerin and j. pitt. denot semant for agent commun languag. in proceed of the fifth intern confer on autonom agent, page 497-504. acm press, 2001. [9] m. nickl, m. rovatso, and g. weiss.  empiricalr semant of agent commun. in proceed of the third intern joint confer on autonom agent and multiag system, new york, ny, 2004. [10] j. pitt and a. mamdani. some remark on the semant of fipa"s agent commun languag. autonom agent and multi-agent system, 2:333-356, 1999. [11] m. rovatso, m. nickl, and g. weiß. interact is mean: a new model for commun in open system. in proceed of the second intern joint confer on autonom agent and multiag system, melbourn, australia, 2003. [12] m. d. sadek. dialogu act ar ration plan. in proceed of the esca/etrw workshop on the structur of multimod dialogu, page 1-29, 1991. [13] m. singh. agent commun languag: rethink the principl. ieee comput, 31(12):55-61, 1998. [14] m. singh. a social semant for agent commun languag. in proceed of the ijcai workshop on agent commun languag, 2000. [15] m. p. singh. a semant for speech act. annal of mathemat and artifici intellig, 8(1-2):47-71, 1993. [16] g. weiß, m. nickl, m. rovatso, and f. fischer. specifi the intertwin of cooper and autonomi in agent-base system. journal of network and comput applic, 29, 2007. [17] m. j. wooldridg. verifi semant for agent commun languag. in proceed of the third intern confer on multi-agent system, page 349-356, pari, franc, 1998. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 107 