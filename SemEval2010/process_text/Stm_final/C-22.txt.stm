runtim metric collect for middlewar support adapt of mobil applic hendrik gani school of comput scienc and inform technolog, rmit univers, melbourn, australia hgani@cs.rmit.edu.au caspar ryan school of comput scienc and inform technolog, rmit univers, melbourn, australia caspar@cs.rmit.edu.au pablo rossi school of comput scienc and inform technolog, rmit univers, melbourn, australia pablo@cs.rmit.edu.au abstract thi paper propos, implement, and evalu in term of worst case perform, an onlin metric collect strategi to facilit applic adapt via object mobil us a mobil object framework and support middlewar. the solut is base upon an abstract represent of the mobil object system, which hold contain aggreg metric for each specif compon includ host manag, runtim and mobil object. a kei featur of the solut is the specif of multipl configur criteria to control the measur and propag of metric through the system. the mobjex platform wa us as the basi for implement and test with a number of laboratori test conduct to measur scalabl, effici and the applic of simpl measur and propag criteria to reduc collect overhead. categori and subject descriptor c.2.4 distribut system; d.2.8 metric gener term measur, perform. 1. introduct the differ capabl of mobil devic, plu the vari speed, error rate and disconnect characterist of mobil network [1], make it difficult to predict in advanc the exact execut environ of mobil applic. on solut which is receiv increas attent in the research commun is applic adapt [2-7], in which applic adjust their behaviour in respons to factor such as network, processor, or memori usag. effect adapt requir detail and up to date inform about both the system and the softwar itself. metric relat to system wide inform (e.g. processor, memori and network load) ar refer to as environment metric [5], while metric repres applic behaviour ar refer as softwar metric [8]. furthermor, the type of metric requir for perform adapt is depend upon the type of adapt requir. for exampl, servic-base adapt, in which servic qualiti or servic behaviour is modifi in respons to chang in the runtim environ, gener requir detail environment metric but onli simpl softwar metric [4]. on the other hand, adapt via object mobil [6], also requir detail softwar metric [9] sinc object placement is depend on the execut characterist of the mobil object themselv. with the except of mobjex [6], exist mobil object system such as voyag [10], fargo [11, 12], and javaparti [13] do not provid autom adapt, and therefor lack the metric collect process requir to support thi process. in the case of mobjex, although an adapt engin ha been implement [5], preliminari test wa done us synthet pre-script metric sinc there is littl prior work on the dynam collect of softwar metric in mobil object framework, and no exist mean of automat collect them. consequ, the main contribut of thi paper is a solut for dynam metric collect to support adapt via object mobil for mobil applic. thi problem is non-trivial sinc typic mobil object framework consist of multipl applic and middlewar compon, and thu metric collect must be perform at differ locat and the result effici propag to the adapt engin. furthermor, in some case the locat where each metric should be collect is not fix (i.e. it could be done in sever place) and thu a decis must be made base on the effici of the chosen solut (see section 3). the rest of thi paper is organis as follow: section 2 describ the gener structur and implement of mobil object framework in order to understand the challeng relat to the collect, propag and deliveri of metric as describ in section 3. section 4 describ some initi test and result and section 5 close with a summari, conclus and discuss of futur work. 2. background in gener, an object-orient applic consist of object collabor to provid the function requir by a given problem domain. mobil object framework allow some of these object to be tag as mobil object, provid middlewar support for such object to be move at runtim to other host. at a minimum, a mobil object framework with at least on run mobil applic consist of the follow compon: runtim, mobil object, and proxi [14], although the terminolog us by individu framework can differ [6, 10-13]. a runtim is a contain process for the manag of mobil object. for exampl, in fargo [15] thi compon is known as a core and in most system separ runtim ar requir to allow differ applic to run independ, although thi is not the case with mobjex, which can run multipl applic in a singl runtim us thread. the applic themselv compris mobil object, which interact with each other through proxi [14]. proxi, which have the same method interfac as the object itself but add remot commun and object track function, ar requir for each target object that a sourc object commun with. upon migrat, proxi object move with the sourc object. the java base system mobjex, which is us as the implement platform for the metric collect solut describ in thi paper, add a number of addit middlewar compon. firstli, a host manag (known as a servic in mobjex) provid a central point of commun by run on a known port on a per host basi, thu facilit the enumer or lookup of compon such as runtim or mobil object. secondli, mobjex ha a per-applic mobil object contain call a transport manag (tm). as such the host and transport manag ar consid in the solut provid in the next section but could be omit in the gener case. final, depend on adapt mode, mobjex can have a centralis system control incorpor a global adapt engin for perform system wide optimis. 3. metric collect thi section discuss the design and deriv of a solut for collect metric in order to support the adapt of applic via object migrat. the solut, although implement within the mobjex framework, is for the most part discuss in gener term, except where explicitli state to be mobjex specif. 3.1 metric select the metric of ryan and rossi [9] have been chosen as the basi for thi solut, sinc thei ar specif intend for mobil applic adapt as well as have been deriv from a seri of mathemat model and empir valid. furthermor, the metric were empir shown to improv the applic perform in a real adapt scenario follow a chang in the execut environ. it would howev be beyond the scope of thi paper to implement and test the full suit of metric list in [9], and thu in order to provid a us non-random subset, we chose to implement the minimum set of metric necessari to implement local and global adapt [9] and therebi satisfi a rang of real adapt scenario. as such the solut present in thi section is discuss primarili in term of these metric, although the structur of the solut is intend to support the implement of the remain metric, as well as other unspecifi metric such as those relat to qualiti and resourc utilis. thi subset is list below and categoris accord to metric type. note that some addit metric were us for implement purpos in order to deriv core metric or assist the evalu, and as such ar defin in context where appropri. 1. softwar metric - number of invoc (ni), the frequenc of invoc on method of a class. 2. perform metric - method execut time (et), the time taken to execut a method bodi (ms). - method invoc time (it), the time taken to invok a method, exclud the method execut time (ms). 3. resourc util metric - memori usag (mu), the memori usag of a process (in byte). - processor usag (pu), the percentag of the cpu load of a host. - network usag (nu), the network bandwidth between two host (in byte/sec). follow ar brief exampl of a number of these metric in order to demonstr their usag in an adapt scenario. as processor usag (pu) on a certain host increas, the execut time (et) of a given method execut on that host also increas [9], thu facilit the decis of whether to move an object with high et to anoth host with low pu. invoc time (it) show the overhead of invok a certain method, with the invoc overhead of marshal paramet and transmit remot data for a remot call be order of magnitud higher than the cost of push and pop data from the method call stack. in other word, remot method invoc is expens and thu should be avoid unless the gain made by move an object to a host with more process power (therebi reduc et) outweigh the higher it of the remot call. final, number of invoc (ni) is us primarili as a weight factor or multipli in order to enabl the adapt engin to predict the valu over time of a particular adapt decis. 3.2 metric measur thi subsect discuss how each of the metric in the subset under investig can be obtain in term of either direct measur or deriv, and where in the mobil object framework such metric should actual be measur. of the environment resourc metric, processor usag (pu) and network usag (nu) both relat to an individu machin, and thu can be directli measur through the resourc monitor subsystem that is instanti as part of the mobjex servic. howev, memori usag (mu), which repres the memori state of a run process rather than the memori usag of a host, should instead be collect within an individu runtim. the measur of number of invoc (ni) and execut time (et) metric can be also be perform via direct measur, howev in thi case within the mobil object implement (mobject) itself. ni involv simpli increment a counter valu at either the start or end of a method call, depend upon the desir semant with regard to thrown except, while et can be measur by start a timer at the begin of the method and stop it at the end of the method, then retriev the durat record by the timer. in contrast, collect invoc time (it) is not as straight forward becaus the time taken to invok a method can onli be measur after the method finish it execut and return to the caller. in order to collect it metric, anoth addit metric is need. ryan and rossi [9] defin the metric respons time (rt), as the total time taken for a method call to finish, which is the sum of it and et. the respons time can be measur directli us the same timer base techniqu us to measur et, although at the start and end of the proxi call rather than the method implement. onc the respons time (rt) is known, it can deriv by subtract rt from et. although thi deriv appear simpl, in practic it is complic by the fact that the rt and et valu from which the it is deriv ar by necess measur us timer code in differ locat i.e. rt measur in the proxi, et measur in the method bodi of the object implement. in addit, the proxi ar by definit not part of the mobjex contain hierarchi, sinc although proxi have a refer to their target object, it is not effici for a mobil object (mobject) to have backward refer to all of the mani proxi which refer it (on per sourc object). fortun, thi problem can be solv us the push base propag mechan describ in section 3.5 in which the rt metric is push to the mobject so that it can be deriv from the et valu store there. the deriv valu of it is then store and propag further as necessari accord to the criteria of section 3.6, the structur relationship of which is shown in figur 1. 3.3 measur initi the poll approach wa identifi as the most appropri method for collect resourc utilis metric, such as processor usag (pu), network usag (nu) and memori usag (mu), sinc thei ar not part of, or relat to, the direct flow of the applic. to measur pu or nu, the resourc monitor poll the oper system for the current cpu or network load respect. in the case of memori usag (mu), the java virtual machin (jvm) [16] is poll for the current memori load. note that in order to minimis the impact on applic respons time, the poll action should be done asynchron in a separ thread. metric that ar suitabl for applic initi collect (i.e. as part of a normal method call) ar softwar and perform relat metric, such as number of invoc (ni), execut time (et), and invoc time (it), which ar explicitli relat to the normal invoc of a method, and thu can be measur directli at thi time. 3.4 metric aggreg in the solut present in thi paper, all metric collect in the same locat ar aggreg in a metricscontain with individu contain correspond to function compon in the mobil object framework. the primari advantag of aggreg metric in contain is that it allow them to be propag easili as a cohes unit through the compon of the mobil framework so that thei can be deliv to the adapt engin, as discuss in the follow subsect. note that thi contain captur the differ granular of measur attribut and their correspond metric. consid the case of measur memori consumpt. at a coars level of granular thi could be measur for an entir applic or even a system, but could also be measur at the level of an individu object; or for an even finer level of granular, the memori consumpt dure the execut of a specif method. as an exampl of the level of granular requir for mobil base adapt, the local adapt algorithm propos by ryan and rossi [9] requir metric repres both the durat of a method execut and the overhead of a method invoc. the us of metric contain facilit the collect of metric at level of granular rang from a singl machin down to the individu method level. note that some metric contain do not contain ani metric object, sinc as previous describ, the sampl implement us onli a subset of the adapt metric from [9]. howev, for the sake of consist and to promot flexibl in term of ad new metric in the futur, these contain ar still consid in the present design for complet and for futur work. 3.5 propag and deliveri of metric the solut in thi paper identifi two stage in the metric collect and deliveri process. firstli, the propag of metric through the compon of the mobil framework and secondli, the deliveri of those metric from the host manag/servic (or runtim if the host manag is not present) to the adapt engin. regard propag, in brief, it is propos that when a lower level system compon detect the arriv of a new metric updat (e.g. mobil object), the metric is push (possibl along with other relev metric) to the next level compon (i.e. runtim or transport manag contain the mobil object), which at some later stage, again determin by a configur criteria (for exampl when there ar a suffici number of chang mobject) will get push to the next level compon (i.e. the host manag or the adapt engin). a further incent for treat propag separ from deliveri is due to the distinct between local and global adapt [9]. local adapt is perform by an engin run on the local host (for exampl in mobjex thi would occur within the servic) and thu in thi case the deliveri phase would be a local inter-process call. convers, global adapt is handl by a centralis adapt engin run on a remot host and thu the deliveri of metric is via a remot call, and in the case where multipl runtim exist without a separ host manag the deliveri process would be even more expens. therefor, due to the presenc of network commun latenc, it is import for the host manag to pass as mani metric as possibl to the adapt engin in on invoc, impli the need to gather these metric in the host manag, through some form of push or propag, befor send them to the adapt engin. consequ, an abstract represent or model [17] of the system need to be maintain. such a model would contain model entiti, correspond to each of the main system compon, connect in a tree like hierarchi, which precis reflect the structur and contain hierarchi of the actual system. attach metric contain to model entiti allow a model entiti repres a host manag to be deliv to the adapt engin enabl it to access all metric in that compon and ani of it children (i.e. runtim, and mobil object). furthermor it would gener be expect that an adapt engin or system control would alreadi maintain a model of the system that can not onli be reus for propag but also provid an effect mean of deliv metric inform from the host manag to the adapt engin. the relationship between model entiti and metric contain is captur in figur 1. 3.6 propag and deliveri criteria thi subsect propos flexibl criteria to allow each compon to decid when it should propag it metric to the next compon in line (figur 1), in order to reduc the overhead incur when metric ar unnecessarili propag through the compon of the mobil framework and deliv to the adapt engin. thi paper propos four differ type of criterion that ar execut at variou stage of the measur and propag process in order to determin whether the next action should be taken or not. thi approach wa design such that whenev a singl criterion is not satisfi, the subsequ criteria ar not test. these four criteria ar describ in the follow subsect. measur metric criterion - thi criterion is attach to individu metric object to decid whether a new metric valu should be measur or not. thi is most us in the case where it is expens to measur a particular metric. furthermor, thi criterion can be us as a mechan for limit storag requir and manipul overhead in the case where metric histori is maintain. simpl exampl would be either time or frequenc base wherea more complex criteria could be domain specif for a particular metric, or base upon inform store in the metric histori. notifi metric contain criterion - thi criterion is also attach to individu metric object and is us to determin the circumst under which the metric object should notifi it metricscontain. thi is base on the assumpt that there mai be case where it is desir to measur and store a metric in the histori for the analysi of tempor behaviour, but is not yet signific enough to notifi the metricscontain for further process. a simpl exampl of thi criterion would be threshold base in which the newest metric valu is compar with the previous store valu to determin whether the differ is signific enough to be of ani interest to the metricscontain. a more complex criterion could involv analysi of the histori to determin whether a pattern of recent chang is signific enough to warrant further process and possibl metric deliveri. notifi model entiti criterion - unlik the previou two criteria, thi criterion is associ with a metricscontain. sinc a metricscontain can have multipl metric object, of which it ha explicit domain knowledg, it is abl to determin if, when, and how mani of these metric should be propag to the modelent and thu becom candid for be part of the hierarch modelent push process as describ below. thi decis make is facilit by the notif receiv from individu metric object as describ abov. a simpl implement would be wait for a certain number of updat befor send a notif to the model entiti. for exampl, sinc the mobjectmetricscontain object contain three metric, a possibl criteria would be to check if two or more of the metric have chang. a slightli more advanc implement can be done by give each metric a weight to indic how signific it is in the adapt decis make process. push criterion - the push criterion appli to all of the modelentit which ar contain, that is the transportmanagermodelent, runtimemodelent and servicemodelent, as well as the special case of the proxymetricscontain. the purpos of thi criterion is twofold. for the transportmanagermodelent thi serv as a criterion to determin notif sinc as with the previous describ criteria, a local refer is involv. for the other model entiti, thi serv as an opportun to determin both when and what metric should be push to the parent contain wherein the case of the servicemodelent the parent is the adapt engin itself or in the case of the proxymetricscontain the target of the push is the mobjectmetricscontain. furthermor, thi criterion is evalu us inform from two sourc. firstli, it respond to the notif receiv from it own metricscontain but more importantli it serv to keep track of notif from it child modelent so as to determin when and what metric inform should be push to it parent or target. in the specialis case of the push criterion for the proxi, the decis make is base on both the proxymetricscontain itself, as well as the inform accumul from the individu proxymethodmetricscontain. note that a push criterion is not requir for a mobject sinc it doe not have ani contain or aggreg respons sinc thi is alreadi servic model entiti servic metric contain notifi model entiti criterion runtim model entiti runtim metric contain notifi model entiti criterion transport manag model entiti transport manag metric contain notifi model entiti criterion push criterion mobject model entiti mobject method metric notifi model entiti criterion push criterion push criterion to adapt engin mobject metric contain notifi metric contain criterion measur metric criterion metric 1 notifymetr contain criterion notifi metric contain criterion measur metric criterionproxymethod metric contain rt metric notifi metric contain criterion proxymetr contain push criterion measur metric criterion metric 2 measur metric criterion metric 1 1..n not current implement notifi metric contain criterion metric 1 metric 2 measur metric criterion measur metric criterion notifi metric contain criterion mu metric measur metric criterion notifi metric contain criterion et metric it metric ni metric measur metric criterion measur metric criterion measur metric criterion notifi metric contain criterion nu metric pu metric measur metric criterion measur metric criterion 1..n figur 1. structur overview of the hierarch and  criteriabas notif relationship between metric, metric contain, and model entiti handl by the mobjectmetricscontain and it individu mobjectmethodmetricscontain. although it is alwai import to reduc the number of push, thi is especi so from a servic to a centralis global adapt engin, or from a proxi to a mobject. thi is becaus these relationship involv a remot call [18] which is expens due to connect setup and data marshal and unmarshal overhead, and thu it is more effici to send a given amount of data in aggreg form rather than send smaller chunk multipl time. a simpl implement for reduc the number of push can be done us the concept of a process period [19] in which case the model entiti accumul push from it child entiti until the process period expir at which time it push the accumul metric to it parent. altern it could be base on frequenc us domain knowledg about the type of children for exampl when a signific number of mobject in a particular applic (i.e. transportmanag) have undergon substanti chang. for reduc the size of push data, two type of push were consid: shallow push and deep push. with shallow push, a list of metric contain that contain updat metric is push. in a deep push, the model entiti itself is push, along with it metric contain and it child entiti, which also have refer to metric contain but possibl unchang metric. in the case of the proxi, a deep push involv push the proxymetricscontain and all of the proxymethodmetricscontain wherea a shallow push mean onli the proxymethodmetricscontain that meet a certain criterion. 4. evalu the preliminari test present in thi section aim to analys the perform and scalabl of the solut and evalu the impact on applic execut in term of metric collect overhead. all test were execut us two pentium 4 3.0 ghz pc with 1,024 mb of ram, run java 1.4.2_08. the two machin were connect to a router with a third comput act as a file server and host the extern adapt engin implement within the mobjex system control, therebi simul a global adapt scenario. sinc onli a limit number of test could be execut, thi evalu chose to measur the worst case scenario in which all metric collect wa initi in mobject, wherein the propag cost is higher than for ani other metric collect in the system. in addit, sinc exhaust test of criteria is beyond the scope of thi paper, two differ type of criteria were us in the test. the measur metric criterion wa chosen, sinc thi repres the start point of the measur process and can control under what circumst and how frequent metric ar measur. in addit, the push criterion wa also implement on the servic, in order to provid an evalu of control the frequenc of metric deliveri to the adapt engin. all other (updat and push) criteria were set to alwai mean that thei alwai evalu to true and thu a notif wa post. figur 2 show the metric collect overhead in the mobject (mmco), for differ number of mobject and method when all criteria ar set to alwai to provid the maximum measur and propag of metric and thu an absolut worst case perform scenario. it can be seen that the independ factor of increas the number of mobject and method independ ar linear. although combin these togeth provid an exponenti growth that is approxim n-squar, the initi result ar not discourag sinc deliv all of the metric associ with 20 mobject, each have 20 method (which constitut quit a larg applic given that mobject typic repres coars grain object cluster) is approxim 400ms, which could reason be expect to be offset with adapt gain. note that in contrast, the proxi metric collect overhead (pmco) wa rel small and constant at < 5ms, sinc in the absenc of a proxi push criterion (thi wa onli implement on the servic) the respons time (rt) data for a singl method is push dure everi invoc. 50 150 250 350 450 550 1 5 10 15 20 25 number of mobject/method mobjectmetricscollectionoverheadmmco(ms) method mobject both figur 2. worst case perform characterist the next step wa to determin the percentag metric collect overhead compar with execut time in order to provid inform about the execut characterist of object that would be suitabl for adapt us thi metric collect approach. clearli, it is not practic to measur metric and perform adapt on object with short execut time that cannot benefit from remot execut on host with greater process power, therebi offset it overhead of remot compar with local execut as well as the cost of object migrat and the metric collect process itself. in addit, to demonstr the effect of us simpl frequenc base criteria, the mmco result as a percentag of method execut time were plot as a 3-dimension graph in figur 3 with the z-axi repres the frequenc us in both the measur metric criterion and the servic to adapt engin push criterion. thi mean that for a frequenc valu of 5 (n=5), metric ar onli measur on everi fifth method call, which then result in a notif through the model entiti hierarchi to the servic, on thi same fifth invoc. furthermor, the valu of n=5 wa also appli to the servic push criterion so that metric were onli push to the adapt engin after five such notif, that is for exampl five differ mobject had updat their metric. these result ar encourag sinc even for the worst case scenario of n=1 the metric collect overhead is an accept 20% for a method of 1500ms durat (which is rel short for a compon or servic level object in a distribut enterpris class applic) with previou work on adapt show that such an overhead could easili be recov by the effici gain made by adapt [5]. furthermor, the measur time includ deliv the result synchron via a remot call to the adapt engin on a differ host, which would normal be done asynchron, thu further reduc the impact on method execut perform. the graph also demonstr that even us modest criteria to reduc the metric measur to more realist level, ha a rapid improv on collect overhead at 20% for 500ms of et. 0 1000 2000 3000 4000 5000 1 2 3 4 5 6 0 20 40 60 80 100 120 mmco (%) et (millisecond) n (interv) mmco (%) figur 3. perform characterist with simpl criteria 5. summari and conclus given the challeng of develop mobil applic that run in dynam/heterogen environ, and the subsequ interest in applic adapt, thi paper ha propos and implement an onlin metric collect strategi to assist such adapt us a mobil object framework and support middlewar. control lab studi were conduct to determin worst case perform, as well as show the reduct in collect overhead when appli simpl collect criteria. in addit, further test provid an initi indic of the characterist of applic object (base on method execut time) that would be good candid for adapt us the worst case implement of the propos metric collect strategi. a kei featur of the solut wa the specif of multipl configur criteria to control the propag of metric through the system, therebi reduc collect overhead. while the potenti efficaci of thi approach wa test us simpl criteria, given the flexibl of the approach we believ there ar mani opportun to significantli reduc collect overhead through the us of more sophist criteria. on such approach could be base on maintain metric histori in order to determin the tempor behaviour of metric and thu make more intellig and conserv decis regard whether a chang in a particular metric is like to be of interest to the adapt engin and should thu serv as a basi for notif for inclus in the next metric push. furthermor, such a tempor histori could also facilit intellig decis regard the collect of metric sinc for exampl a metric that is known to be larg constant need not be frequent measur. futur work will also involv the evalu of a broad rang of adapt scenario on the mobjex framework to quantiti the gain that can be made via adapt through object mobil and thu demonstr in practis, the efficaci of the solut describ in thi paper. final, the author wish to explor appli the metric collect concept describ in thi paper to a more gener and reusabl context manag system [20]. 6. refer 1. katz, r.h., adapt and mobil in wireless inform system. ieee person commun, 1994. 1: p. 6-17. 2. hirschfeld, r. and kawamura, k. dynam servic adapt. in icdc workshop"04. 2004. 3. lemlouma, t. and layaida, n. context-awar adapt for mobil devic. in proceed of ieee intern confer on mobil data manag 2004. 2004. 4. nobl, b.d., et al. agil applic-awar adapt for mobil. in proc. of the 16th acm symposium on oper system and principl sosp. 1997. saint-malo, franc. 5. rossi, p. and ryan, c. an empir evalu of dynam local adapt for distribut mobil applic. in proc. of 2005 intern symposium on distribut object and applic (doa 2005). 2005. larnaca, cypru:  springerverlag. 6. ryan, c. and westhorp, c. applic adapt through transpar and portabl object mobil in java. in intern symposium on distribut object and applic (doa 2004). 2004. larnaca, cypru:  springerverlag. 7. da silva e silva, f.j., endler, m., and kon, f. develop adapt distribut applic: a framework overview and experiment result. in on the move to meaning internet system 2003: coopi, doa, and odbas (lnc 2888). 2003. 8. rossi, p. and fernandez, g. definit and valid of design metric for distribut applic. in ninth intern softwar metric symposium. 2003. sydnei: ieee. 9. ryan, c. and rossi, p. softwar, perform and resourc utilis metric for context awar mobil applic. in proceed of intern softwar metric symposium ieee metric 2005. 2005. como, itali. 10. recurs softwar inc. voyag url: http://www.recursionsw.com/voyag.htm. 2005. 11. holder, o., ben-shaul, i., and gazit, h., system support for dynam layout of distribut applic. 1998,  techinonisrael institut of technolog. p. 163 - 173. 12. holder, o., ben-shaul, i., and gazit, h. dynam layout of distribut applic in fargo. in 21st int'l conf. softwar engin (ics'99). 1999: acm press. 13. philippsen, m. and zenger, m., javaparti - transpar remot object in java. concurr: practic and experi, 1997. 9(11): p. 1225-1242. 14. shapiro, m. structur and encapsul in distribut system: the proxi principl. in proc.6th intl. confer on distribut comput system. 1986. cambridg, mass. (usa): ieee. 15. gazit, h., ben-shaul, i., and holder, o. monitor-base dynam reloc of compon in fargo. in proceed of the second intern symposium on agent system and applic and fourth intern symposium on mobil agent. 2000. 16. lindholm, t. and yellin, f., the java virtual machin specif 2nd edit. 1999: addison-weslei. 17. randel, l.g., holst, l.g., and bolmsjö, g.s. increment system develop of larg discret-event simul model. in proceed of the 31st confer on winter simul. 1999. phoenix, arizona. 18. waldo, j., remot procedur call and java remot method invoc. ieee concurr, 1998. 6(3): p. 5-7. 19. rolia, j. and lin, b. consist issu in distribut applic perform metric. in proceed of the 1994 confer of the centr for advanc studi on collabor research. 1994. toronto, canada. 20. henricksen, k. and indulska, j. a softwar engin framework for context-awar pervas comput. in proceed of the 2nd ieee confer on pervas comput and commun (percom). 2004. orlando. 