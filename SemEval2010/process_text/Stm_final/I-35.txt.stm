distribut norm manag in regul multi-agent system ∗ dorian gaertner dept. of comput, imperi colleg london, london sw7 2az, unit kingdom dg00@doc.ic.ac.uk andr garcia-camino, pablo noriega, j.-a. rodriguez-aguilar iiia-csic, 08193 bellaterra, spain {andr,pablo,jar}@iiia.csic.es wamberto vasconcelo dept. of comput scienc, univers of aberdeen, aberdeen ab24 3ue, unit kingdom wvasconcelo@acm.org abstract norm ar wide recognis as a mean of coordin multi-agent system. the distribut manag of norm is a challeng issu and we observ a lack of truli  distribut comput realis of norm model. in order to regul the behaviour of autonom agent that take part in multipl, relat activ, we propos a  norm model, the norm structur (ns), an artifact that is base on the propag of norm posit  (oblig, prohibit, permiss), as consequ of agent" action. within a ns, conflict mai aris due to the dynam natur of the ma and the concurr of agent" action. howev, ensur conflict-freedom of a ns at design time is computation intract. we show thi by  formalis the notion of conflict, provid a map of nss into colour petri net and borrow well-known theoret result from that field. sinc onlin conflict resolut is requir, we present a tractabl algorithm to be emploi distributedli. we then demonstr that thi algorithm is paramount for the distribut enact of a ns. categori and subject descriptor i.2.11 [distribut artifici intellig]: languag and structur gener term algorithm, design, theori 1. introduct a fundament featur of open, regul multi-agent  system in which autonom agent interact, is that  particip agent ar meant to compli with the convent of the system. norm can be us to model such  convent and henc as a mean to regul the observ  behaviour of agent [6, 29]. there ar mani contribut on the subject of norm from sociologist, philosoph and  logician (e.g., [15, 28]). howev, there ar veri few propos for comput realis of norm model - the wai norm can be integr in the design and execut of mass. the few that exist (e.g. [10, 13, 24]), oper in a centralis manner which creat bottleneck and singl point-of-failur. to our knowledg, no propos truli  support the distribut enact of norm environ. in our paper we approach that problem and propos mean to handl conflict commit in open, regul,  multiag system in a distribut manner. the type of  regul ma we envisag consist of multipl, concurr,  relat activ where agent interact. each agent mai  concurr particip in sever activ, and chang from on activ to anoth. an agent"s action within an  activ mai have consequ in the form of norm  posit (i.e. oblig, permiss, and prohibit) [26] that mai constrain it futur behaviour. for instanc, a buyer agent who run out of credit mai be forbidden to make further offer, or a seller agent is oblig to deliv after close a deal. we assum that agent mai choos not to fulfil all their oblig and henc mai be sanction by the ma. notic that, when activ ar distribut, norm posit must flow from the activ in which thei ar gener to those in which thei take effect. for instanc, the seller"s oblig abov must flow (or be  propag) from a negoti activ to a deliveri activ. sinc in an open, regul ma on cannot emb  norm aspect into the agent" design, we adopt the view that the ma should be supplement with a separ set of norm that further regul the behaviour of particip agent. in order to model the separ of concern between the coordin level (agent" interact) and the  norm level (propag of norm posit), we propos an artifact call the norm structur (ns). within a ns conflict mai aris due to the dynam  natur of the ma and the concurr of agent" action. for instanc, an agent mai be oblig and prohibit to do the 636 978-81-904262-7-5 (rp) c 2007 ifaama veri same action in an activ. sinc the regul of a ma entail that particip agent need to be awar of the valid of those action that take place within it, such conflict ought to be identifi and possibl resolv if a claim of valid is need for an agent to engag in an  action or be sanction. howev, ensur conflict-freedom of a ns at design time is computation intract. we show thi by formalis the notion of conflict, provid a  map of nss into colour petri net (cpn) and borrow well-known theoret result from the field of cpn. we believ that onlin conflict detect and resolut is requir. henc, we present a tractabl algorithm for conflict resolut. thi algorithm is paramount for the  distribut enact of a ns. the paper is organis as follow. in section 2 we detail a scenario to serv as an exampl throughout the paper. next, in section 3 we formal defin the norm structur  artifact. further on, in section 4 we formalis the notion of conflict to subsequ analys the complex of conflict detect in term of cpn in section 5. section 6 describ the comput manag of nss by describ their enact and present an algorithm for conflict  resolut. final, we comment on relat work, draw conclus and report on futur work in section 7. 2. scenario we us a suppli-chain scenario in which compani and individu come togeth at an onlin marketplac to  conduct busi. the overal transact procedur mai be organis as six distribut activ, repres as node in the diagram in figur 1. thei involv differ  particip whose behaviour is coordin through protocol. in thi scenario agent can plai on of four role:  marexit registr payment deliveri negoti coordin model contract figur 1: activ structur of the scenario ketplac account (acc), client, supplier (supp) and  warehous manag (wm). the arrow connect the activ repres how agent can move from on activ to anoth. after regist at the marketplac, client and supplier get togeth in an activ where thei negoti the term of their transact, i.e. price, amount of good to be  deliv, deadlin and other detail. in the contract activ, the order becom establish and an invoic is prepar. the client will then particip in a payment activ,  verifi hi credit-worthi and instruct hi bank to transfer the correct amount of monei. the supplier in the meantim will arrang for the good to be deliv (e.g. via a  warehous manag) in the deliveri activ. final, agent can leav the marketplac conform to a predetermin exit protocol. the marketplac account particip in most of the activ as a trust provid of audit tool. in the rest of the paper we shall build on thi scenario to exemplifi the notion of norm structur and to  illustr our approach to conflict detect and resolut in a distribut set. 3. norm structur in mass agent interact accord to protocol which  natur ar distribut. we advoc that action in on such protocol mai have an effect on the enact of other  protocol. certain action can becom prohibit or obligatori, for exampl. we take norm posit to be oblig, prohibit and permiss akin to work describ in [26]. the intent of ad or remov a norm posit we call norm command. occurr of norm  posit in on protocol mai also have consequ for other protocol1 . in order to defin our norm languag and specifi how  norm posit ar propag, we have been inspir by multi-context system [14]. these system allow the  structur of knowledg into distinct formal theori and the  definit of relationship between them. the relationship ar express as bridg rule - deduc of formula in some context lead to the deduct of other formula in other context. recent, these system have been successfulli us to defin agent architectur [11, 23]. the metaphor translat to our current work as follow: the utter of illocut and/or the exist of norm posit in some norm scene lead to the deduct of  norm posit in other norm scene. we ar concern with the propag and distribut of norm posit within a network of distribut, norm scene as a  consequ of agent" action. we take norm scene to be set of norm posit and utter that ar  associ with an underli interact protocol correspond to an activ. in thi section, we first present a simpl languag  captur these aspect and formal introduc the notion of norm scene, norm transit rule and norm structur. we give the intend semant of these rule and show how to control a ma via norm in an exampl. 3.1 basic concept the build block of our languag ar term and atom formula: def. 1. a term, denot as t, is (i) ani constant  express us lowercas (with or without subscript), e.g. a, b0, c or (ii) ani variabl express us uppercas (with or without subscript), e.g. x, y, zb or (iii) ani function f(t1, . . . , tn), where f is an n-ari function symbol and t1, .., tn ar term. some exampl of term and function ar credit, price or offer(bibl, 30) be respect a variabl, a constant and a function. we will be make us of identifi  throughout the paper, which ar constant term and also need the follow definit: def. 2. an atom formula is ani construct p(t1, . . . , tn), where p is an n-ari predic symbol and t1, . . . , tn ar term. the set of all atom formula is denot as Δ. we focu on an express class of mass in which  interact is carri out by mean of illocutionari speech act exchang among particip agent: def. 3. illocut i ar ground atom formula which have the form p(ag, r, ag , r , δ, t) where p is an element of 1 here, we abstract from protocol and refer to them gener as activ. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 637 a set of illocutionari particl (e.g. inform, request, offer); ag, ag ar agent identifi; r, r ar role identifi; δ, an arbitrari ground term, is the content of the messag, built from a share content languag; t ∈ n is a time stamp. the intuit mean of p(ag, r, ag , r , m, t) is that agent ag plai role r sent messag m to agent ag plai role r at time t. an exampl of an illocut is inform(ag4, supp, ag3, client, offer(wire, 12), 10). sometim it is us to refer to illocut that ar not fulli ground, that is, those that mai contain uninstanti (free) variabl. in the descript of a protocol, for instanc, the precis valu of the messag exchang can be left unspecifi. dure the enact of the protocol agent will produc the actual valu which will give rise to a ground illocut. we can thu defin illocut schemata: def. 4. an illocut schema ¯i is ani atom formula p(ag, r, ag , r , δ, t) in which some of the term mai either be variabl or mai contain variabl. 3.2 formal definit of the notion of ns we first defin norm scene as follow: def. 5. a norm scene is a tupl s = id, Δs where id is a scene identifi and Δs is the set of atom formula δ (i.e. utter and norm posit) that hold in s. we will also refer to Δs as the state of norm scene s. for instanc, a snapshot of the state of the deliveri  norm scene of our scenario could be repres as: Δs = 8 < : utt(request(sean, client, kev, wm, receiv(wire, 200), 20)), utt(accept(kev, wm, sean, client, receiv(wire, 200), 30)), obl(inform(kev, wm, sean, client, deliv(wire, 200), 30)) 9 = ; that is, agent sean take up the client role ha request agent kev (take up the warehous manag role wm) to receiv 200kg of wire, and agent kev is oblig to deliv 200kg of wire to sean sinc he accept the request. note that the state of a norm scene Δs evolv over time. these norm scene ar connect to on anoth via norm transit that specifi how utter and  norm posit in on scene affect other norm scene. as mention abov, activ ar not independ sinc illocut utter in some of them mai have an effect on other on. norm transit rule defin the condit under which a norm command is gener. these  condit ar either utter or norm posit  associ with a given protocol (denot e.g. activ : utter) which yield a norm command, i.e. the addit or  remov of anoth norm posit, possibl relat to a differ activ. our transit rule ar thu defin: def. 6. a norm transit rule r is of the form: r ::= v c v ::= id : d | v, v d ::= n | utt(¯i) n ::= per(¯i) | prh(¯i) | obl(¯i) c ::= add(id : n) | remov(id : n) where ¯i is an illocut schema, n is a norm posit (i.e. permiss, prohibit or oblig), id is an  identifi for activ s and c is a norm command. we endow our languag with the usual semant of  rulebas languag [19]. rule map an exist norm structur to a new norm structur where onli the state of the norm scene chang. in the definit below we reli on the standard concept of substitut [9]. def. 7. a norm transit is a tupl b = idb, rb where idb is an identifi and rb is a norm transit rule. we ar propos to extend the notion of ma, regul by protocol, with an extra layer consist of norm scene and norm transit. thi layer is repres as a bi-partit graph that we term norm structur. a norm structur relat norm scene and norm transit specifi which norm posit ar to be gener or remov in which norm scene. def. 8. a norm structur is a label bi-partit graph ns = node, edg, lin , lout . node is a set s∪b where s is a set of norm scene and b is a set of norm transit. edg is a set ain ∪ aout where ain ⊆ s × b is a set of input arc label with an atom formula us the label function lin : ain → d; and aout ⊆ b × s is a set of output arc label with a norm posit us the label function lout : aout → n. the follow must hold: 1. each atom formula appear in the lh of a rule rb must be of the form (id : d) where s ∈ s and d ∈ Δ and ∃ain ∈ ain such that ain = (s, b) and lin (ain ) = d. 2. the atom formula appear in the rh of a rule rb must be of the form add(id : n) or remov(id : n) where s ∈ s and ∃aout ∈ aout such that aout = (b, s) and lout (aout ) = n. 3. ∀a ∈ ain such that a = (s, b) and b = idb, rb and lin (a) = d then (id:d) must occur in the lh of rb. 4. ∀a ∈ aout such that a = (b, s) and b = idb, rb and lout (a) = n then add(id : n) or remov(id : n) must occur in the rh of rb. the first two point ensur that everi atom formula on the lh of a norm transit rule label an arc  enter the appropri norm transit in the norm structur, and that the atom formula on the rh label the correspond outgo arc. point three and four  ensur that label from all incom arc ar us in the lh of the norm transit rule that these arc enter into, and that the label from all outgo arc ar us in the rh of the norm transit rule that these arc leav. 3.3 intend semant the formal semant will be defin via a map to colour petri net in section 5.1. here we start  defin the intend semant of norm transit rule by describ how a rule chang a norm scene of an  exist norm structur yield a new norm structur. each rule is trigger onc for each substitut that  unifi the left-hand side v of the rule with the state of the correspond norm scene. an atom formula (i.e. an utter or a norm posit) hold iff it is  unifi with an utter or norm posit that belong to the state of the correspond norm scene. everi time a rule is trigger, the norm command specifi on the right-hand side of that rule is carri out,  intend to add or remov a norm posit from the state of the correspond norm scene. howev, addit is not uncondit as conflict mai aris. thi topic will be treat in section 4 and 6.1. 638 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 3.4 exampl in our run exampl we have the follow exemplari norm transit rule: „ payment : obl(inform(x, client, y, acc, pai(z, p, q), t )), payment : utt(inform(x, client, y, acc, pai(z, p, q), t )) « deliveri : add(obl(inform(y, wm, x, client, deliv(z, q), t ))) that is, dure the payment activ, an oblig on client x to inform account y about the payment p of item z at time t and the correspond utter which fulfil thi oblig allow the flow of a norm to the deliveri activ. the norm is an oblig on agent y (thi time take up the role of the warehous manag wm) to send a messag to client x that item z ha been deliv. we show in figur 2 a diagrammat represent of how activ and a norm structur relat: payment deliveri contract norm level exit registr payment deliveri negoti coordin level contract nt figur 2: activ and norm structur as illocut ar utter dure activ, norm  posit aris. utter and norm posit ar  combin in transit rule, caus the flow of norm  posit between norm scene. the connect between the two level is describ in section 6.2. 4. conflict definit the term deontic conflict and deontic inconsist have been us interchang in the literatur. howev, in thi paper we adopt the view of [7] in which the author suggest that a deontic inconsist aris when an action is simultan permit and prohibit - sinc a  permiss mai not be act upon, no real conflict occur. the situat when an action is simultan oblig and  prohibit ar, howev, deontic conflict, as both oblig and prohibit influenc behaviour in a conflict  fashion. the content of norm posit in thi paper ar illocut. therefor, a norm conflict aris when an illocut is simultan oblig and prohibit. we propos to us the standard notion of unif [9] to detect when a prohibit and a permiss overlap. for  instanc, an oblig obl(inform(a1, r1, a2, r2, p(c, x), t)) and a prohibit prh(inform(a1, r1, a2, r2, p(y, d), t )) ar in conflict as thei unifi under σ = {a1/a1, r1/r1, a2/a2, r2/r2, y/c, x/d, t/t }). we formal captur thi notion: def. 9. a (deontic) conflict aris between two  norm posit n and n under a substitut σ, denot as conflict(n, n , σ), if and onli if n = prh(¯i), n = obl(¯i ) and unifi(¯i,¯i , σ). that is, a prohibit and an oblig ar in conflict if, and onli if, their illocut unifi under σ. the  substitut σ, call here the conflict set, unifi the agent, role and atom formula. we assum that unifi is a suitabl implement of a unif algorithm which i) alwai termin (possibl fail, if a unifi cannot be found); ii) is correct; and iii) ha linear comput complex. inconsist caus by the same illocut be  simultan permit and prohibit can be formalis  similarli. in thi paper we focu on prohibit/oblig  conflict, but the comput machineri introduc in  section 6.1 can equal be us to detect prohibit/permiss inconsist, if we substitut modal obl for per. 5. formalis conflict-freedom in thi section we introduc some background knowledg on cpn assum a basic understand of ordinari petri net. for technic detail we refer the reader to [16]. we then map nss to cpn and analys their properti. cpn combin the strength of petri net with the strength of function program languag. on the on hand, petri net provid the primit for the descript of the synchronis of concurr process. as notic in [16], cpn have a semant which build upon true concurr, instead of interleav. in our opinion, a true-concurr semant is easier to work with becaus it is the wai we envisag the connect between the coordin level and the norm level of a multi-agent system to be. on the other hand, the function program languag us by cpn provid the primit for the definit of data type and the manipul of their data valu. thu, we can readili translat express of a norm structur. last but not least, cpn have a well-defin semant which unambigu defin the behaviour of each cpn.  furthermor, cpn have a larg number of formal analysi method and tool by which properti of cpn can be prove.  sum up, cpn provid us with all the necessari featur to formal reason about norm structur given that an adequ map is provid. in accord with petri net, the state of a cpn ar repres by mean of place. but unlik petri net, each place ha an associ data type determin the kind of data which the place mai contain. a state of a cpn is call a mark. it consist of a number of token posit on the individu place. each token carri a data valu which ha the type of the correspond place. in gener, a place mai contain two or more token with the same data valu. thu, a mark of a cpn is a function which map each place into a multi-set2 of token of the correct type. on often refer to the token valu as token colour and on also refer to the data type as colour set. the type of a cpn can be arbitrarili complex. action in a cpn ar repres by mean of transit. an incom arc into a transit from a place indic that the transit mai remov token from the correspond place while an outgo arc indic that the transit mai add token. the exact number of token and their data valu ar determin by the arc express, which ar encod us the program languag chosen for the cpn. a transit is enabl in a cpn if and onli if all the 2 a multi-set (or bag) is an extens to the notion of set, allow the possibl of multipl appear of the same element. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 639 variabl in the express of it incom arc ar bound to some valu(s) (each on of these bind is refer to as a bind element). if so, the transit mai occur by remov token from it input place and ad token to it output place. in addit to the arc express, it is possibl to attach a boolean guard express (with variabl) to each transit. put all the element abov togeth we obtain a formal definit of cpn that shall be emploi further ahead for map purpos. def. 10. a cpn is a tupl Σ, p, t, a, n, c, g, e, i where: (i) Σ is a finit set of non-empti type, also call colour set; (ii) p is a finit set of place; (iii) t is a finit set of transit; (iv) a is a finit set of arc; (v) n is a node function defin from a into p × t ∪ t × p; (vi) c is a colour function from p into Σ; (vii) g is a guard  function from t into express; (viii) e is an arc express function from a into express; (ix) i is an initialis function from p into close express; notic that the inform explan of the enabl and occurr rule given abov provid the foundat to understand the behaviour of a cpn. in accord with ordinari petri net, the concurr behaviour of a cpn is base on the notion of step. formal, a step is a non-empti and finit multi-set over the set of all bind element. let step s be enabl in a mark m. then, s mai occur, chang the mark m to m . moreov, we sai that mark m is directli reachabl from mark m by the occurr of step s, and we denot it by m[s > m . a finit occurr sequenc is a finit sequenc of step and mark: m1[s1 > m2 . . . mn[sn > mn+1 such that n ∈ n and mi[si > mi+1 ∀i ∈ {1, . . . , n}. the set of all possibl mark reachabl for a net net from a mark m is call it reachabl set, and is denot as r(net, m). 5.1 map to colour petri net our norm structur is a label bi-partit graph. the same is true for a colour petri net. we ar  present a map f from on to the other, in order to provid semant for the norm structur and prove properti about it by us well-known theoret result from work on cpn. the map f make us of correspond between norm scene and cpn place, norm  transit and cpn transit and final, between arc label and cpn arc express. s → p b → t lin ∪ lout → e the set of type is the singleton set contain the colour np (i.e. Σ = {np}). thi complex type is structur as follow (we us cpn-ml [4] syntax): color npt = with obl | per | prh | nomod color ip = with inform | declar | offer color utt = record illp : ip ag1, role1, ag2, role2 : string content: string time : int color np = record mode : npt illoc : utt model illocut as norm without modal (nomod) is a formal trick we us to ensur that sub-net can be  combin as explain below. arc ar map almost directli. a is a finit set of arc and n is a node function, such that ∀a ∈ a ∃a ∈ ain ∪aout . n(a) = a . the initialis  function i is defin as i(p) = Δs (∀s ∈ s where p is obtain from s us the map; rememb that s = id, Δs ). final, the colour function c assign the colour np to  everi place: c(p) = np (∀p ∈ p). we ar not make us of the guard function g. in futur work, thi function can be us to model constraint when we extend the  express of our norm languag. 5.2 properti of norm structur have defin the map from norm structur to colour petri net, we now look at properti of cpn that help us understand the complex of conflict detect. on question we would like to answer is, whether at a given point in time, a given norm structur is conflict-free. such a snapshot of a norm structur correspond to a mark in the map cpn. def. 11. given a mark mi, thi mark is  conflictfre if ¬∃p ∈ p. ∃np1, np2 ∈ mi(p) such that np1.mode = obl and np2.mode = prh and np1.illoc and np2.illoc unifi under a valid substitut. anoth interest question would be, whether a conflict will occur from such a snapshot of the system by  propag the norm posit. in order to answer thi question, we first translat the snapshot of the norm structur to the correspond cpn and then execut the finit occur sequenc of mark and step, verifi the conflict-freedom of each mark as we go along. def. 12. given a mark mi, a finit occurr  sequenc si, si+1, ..., sn is call conflict-free, if and onli if mi[si > mi+1 . . . mn[sn > mn+1 and mk is conflict-free for all k such that i ≤ k ≤ n + 1. howev, the main question we would like to investig, is whether or not a given norm structur is  conflictresist, that is, whether or not the agent enact the ma ar abl to bring about conflict through their action. as soon as on includ the possibl of action (or  utter) from autonom agent, on loos determin. have map the norm structur to a cpn, we now add cpn model of the agent" interact. each form of agent interact (i.e. each activ) can be model us cpn along the line of cost et al. [5]. these  nondeterminist cpn feed token into the cpn that model the norm structur. thi lead to the introduct of non-determin into the combin cpn. the lower half of figur 3 show part of a cpn model of an agent protocol where the arc denot with ‘1" repres some utter of an illocut by an agent. the target transit of thi arc, not onli move a token on to the next state of thi cpn, but also place a token in the place  correspond to the appropri norm scene in the cpn model of the norm structur (via arc ‘2"). transit ‘3" final could propag that token in form of an oblig, for exampl. thu, from a given mark, mani differ occurr sequenc ar possibl depend on the agent" action. we make us of the reachabl set r to defin a situat in which agent cannot caus conflict. 640 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) figur 3: construct the combin cpn def. 13. given a net n, a mark m is conflict-resist if and onli if all mark in r(n,m) ar conflict-free. check conflict-freedom of a mark can be done in polynomi time by check all place of the cpn for  conflict token. conflict-freedom of an occurr sequenc in the cpn that repres the norm structur can also be done in polynomi time sinc thi sequenc is  determinist given a snapshot. whether or not a norm structur is design safe correspond to check the conflict-resist of the  initi mark m0. now, verifi conflict-resist of a mark becom a veri difficult task. it correspond to the reachabl problem in a cpn: can a state be reach or a mark achiev, that contain a conflict?. thi  reachabl problem is known to be np-complet for ordinari petri net [22] and sinc cpn ar function ident, we cannot hope to verifi conflict-resist of a norm structur off-line in a reason amount of time. therefor, distribut, run-time mechan ar need to ensur that a norm structur maintain consist. we present on such mechan in the follow section. 6. manag norm structur onc a conflict (as defin in section 4) ha been detect, we propos to emploi the unifi to resolv the conflict. in our exampl, if the variabl in prh(inform(a1, r1, a2, r2, p(y, d), t )) do not get the valu specifi in substitut σ then there will not be a conflict. howev, rather than comput the complement set of a substitut (which can be an infinit set) we propos to annot the prohibit with the unifi itself and us it to determin what the  variabl of that prohibit cannot be in futur unif in order to avoid a conflict. we therefor denot annot prohibit as prh(¯i) Σ, where Σ = {σ1, . . . , σn}, is a set of unifi. annot norm3 ar interpret as deontic construct with curtail influenc, that is, their effect (on agent, role and illocut) ha been limit by the set Σ of unifi. a prohibit mai be in conflict with variou oblig in a given norm scene s = id, Δ and we need to record (and possibl avoid) all these conflict. we defin below an algorithm which ensur that a norm posit will be ad to a norm scene in such a wai that it will not caus ani conflict. 3 although we propos to curtail prohibit, the same machineri can be us to defin the curtail of oblig instead. these differ polici ar depend on the intend deontic semant and requir of the system address. for instanc, some mass mai requir that their agent should not act in the presenc of conflict, that is, the oblig should be curtail. 6.1 conflict resolut we propos a fine-grain wai of resolv norm  conflict via unif. we detect the overlap of the  influenc of norm , i.e. how thei affect the behaviour of the concern agent, and we curtail the influenc of the  norm posit, by appropri us the annot when check if the norm appli to illocut. the algorithm shown in figur 4 depict how we maintain a conflict-free set of norm. it add a given norm n to an exist,  conflictfre norm state Δ, obtain a result new norm state Δ which is conflict-free, that is, it prohibit ar annot with a set of conflict set indic which  bind for variabl have to be avoid for conflict not to take place. algorithm addnorm(n, Δ) begin 1 timestamp(n) 2 case n of 3 per(¯i): Δ := Δ ∪ {n} 4 prh(i): if n ∈ Δ s.t. conflict(n, n , σ) then Δ := Δ 5 els Δ := Δ ∪ {n} 6 prh(¯i): 7 begin 8 Σ := ∅ 9 for each n ∈ Δ do 10 if conflict(n, n , σ) then Σ := Σ ∪ {σ} 11 Δ := Δ ∪ {n Σ} 12 end 13 obl(¯i): 14 begin 15 Δ1 := ∅; Δ2 := ∅ 16 for each (n Σ) ∈ Δ do 17 if n = prh(i) then 18 if conflict(n , n, σ) then Δ1 := Δ1 ∪ {n Σ} 19 els nil 20 els 21 if conflict(n , n, σ) then 22 begin 23 Δ1 := Δ1 ∪ {n Σ} 24 Δ2 := Δ2 ∪ {n (Σ ∪ {σ})} 25 end 26 Δ := (Δ − Δ1) ∪ Δ2 ∪ {n} 27 end 28 end case 29 return Δ end figur 4: algorithm to preserv conflict-freedom the algorithm us a case of structur to differenti the differ possibl for a given norm n. line 3 address the case when the given norm is a permiss: n is simpli ad to Δ. line 4-5 address the case when we attempt to add a ground prohibit to a norm state: if it  conflict with ani oblig, then it is discard; otherwis it is ad to the norm state. line 6-12 describ the situat when the norm posit to be ad is a  nonground prohibit. in thi case, the algorithm initialis Σ to an empti set and loop (line 9-10) through the norm n in the old norm state Δ. upon find on that  conflict with n, the algorithm updat Σ by ad the newli found conflict set σ to it (line 10). by loop through Δ, we ar abl to check ani conflict between the new  prohibit and the exist oblig, adequ build the annot Σ to be us when ad n to Δ in line 11. line 13-27 describ how a new oblig is  accommod to an exist norm state. we make us of two initi empti, temporari set, Δ1, Δ2. the algorithm loop through Δ (line 16-25) pick up those annot  prohibit n Σ which conflict with the new oblig. there ar, howev, two case to deal with: the on when a ground the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 641 prohibit is found (line 17), and it except, cover non-ground prohibit (line 20). in both case, the old prohibit is store in Δ1 (line 18 and 23) to be later remov from Δ (line 26). howev, in the case of a  nonground prohibit, the algorithm updat it annot of conflict set (line 24). the loop guarante that an  exhaust (linear) search through a norm state take place, check if the new oblig is in conflict with ani  exist prohibit, possibl updat the annot of these conflict prohibit. in line 26 the algorithm build the new updat Δ by remov the old prohibit store in Δ1 and ad the updat prohibit store in Δ2 (if ani), as well as the new oblig n. our propos algorithm is correct in that, for a given norm posit n and a norm state Δ, it provid a new norm state Δ in which all prohibit have  annot record how thei unifi with exist oblig. the annot can be empti, though: thi is the case when we have a ground prohibit or a prohibit which doe not unifi/conflict with ani oblig. permiss do not affect our algorithm and thei ar appropri dealt with (line 3). ani attempt to insert a ground prohibit which conflict, yield the same norm state (line 4). when a new oblig is be ad then the algorithm guarante that all prohibit ar consid (line 14-27), lead to the remov of conflict ground prohibit or the updat of annot of non-ground prohibit. the algorithm alwai termin: the loop ar over a finit set Δ and the conflict check and set oper alwai termin. the complex of the algorithm is linear: the set Δ is onli  examin onc for each possibl case of norm to be ad. when manag norm state we mai also need to remov norm posit. thi is straightforward:  permiss can be remov without ani problem; annot prohibit can also be remov without further  consider; oblig, howev, requir some housekeep. when an oblig is to be remov, we must check it against all annot prohibit in order to updat their annot. we appli the conflict check and obtain a  unifi, then remov thi unifi from the prohibit"s  annot. we invok the remov algorithm as removenorm(n, Δ): it return a new norm state Δ in which n ha been remov, with possibl alter to other norm  posit as explain. 6.2 enact of a norm structur the enact of a norm structur amount to the parallel, distribut execut of norm scene and  norm transit. for illustr purpos, hereaft we shall describ the interplai between the payment and  deliveri norm scene and the norm transit nt  link them in the upper half of figur 2. with thi aim,  consid for instanc that obl(inform(jule, client, rod, acc, pai(copper, 400, 350), t) ∈ Δpayment and that Δdeliveri hold prh(inform(rod,wm, jule, client, deliv(z, q), t)). such state indic that client jule is oblig to pai £400 for 350kg of copper to account rod accord to the  payment norm scene, wherea rod, take up the role of warehous manag thi time, is prohibit to deliv  anyth to client jule accord to the deliveri norm scene. for each norm scene, the enact process goe as follow. firstli, it process it incom messag queue that contain three type of messag: utter from the activ it is link to; and norm command either to add or remov norm posit. for instanc, in our exampl, the payment norm scene collect the  illocut i = utt((inform(jule, client, rod, acc, pai(copper, 400, 350), 35)) stand for client jule" pend payment for copper (via arrow a in figur 2). utter ar  timestamp and subsequ ad to the norm state. we would have Δpayment = Δpayment ∪ {i}, in our  exampl. upon receiv norm command to either add or remov a norm posit, the norm scene invok the correspond addit or remov algorithm describ in section 6.1. secondli, the norm scene acknowledg it state chang by send a trigger messag to everi  outgo norm transit it is connect to. in our exampl, the payment norm scene would be signal it state chang to norm transit nt. for norm transit, the process work differ. becaus each norm transit control the oper of a singl rule, upon receiv a trigger messag, it poll everi incom norm scene for substitut for the relev illocut schemata on the lh of it rule. in our exampl, nt (be respons for the rule describ in section 3.4), would poll the payment norm scene (via arrow b) for substitut. upon receiv repli from them (in the form of set of substitut togeth with time-stamp), it ha to unifi substitut from each of these norm scene. for each unif it find, the rule is fire, and henc the  correspond norm command is sent along to the output norm scene. the norm transit then keep track of the fire messag it sent on and of the time-stamp of the norm posit that trigger the fire. thi is done to ensur that the veri same norm posit in the lh of a rule onli trigger it fire onc. in our exampl, nt would be receiv σ = {x/jule, y/rod, z/copper, q/350} from the payment norm scene. sinc the substit in σ unifi with nt"s rule, the rule is fire, and the norm command add(deliveri : obl(rod, wm, jule, client, deliv(copper, 350), t)) is sent along to the deliveri norm scene to oblig rod to deliv to client jule 350kg of copper. after that, the deliveri  norm scene would invok the addnorm algorithm from figur 4 with Δdeliveri and n = obl(rod, wm, jule, client, deliv(copper, 350)) as argument. 7. relat work and conclus our contribut in thi paper ar three-fold. firstli, we introduc an approach for the manag of and reason about norm in a distribut manner. to our knowledg, there is littl work publish in thi direct. in [8, 21], two languag ar present for the distribut enforc of norm in ma. howev, in both work, each agent ha a local messag interfac that forward legal messag accord to a set of norm. sinc these  interfac ar local to each agent, norm can onli be express in term of action of that agent. thi is a seriou  disadvantag, e.g. when on need to activ an oblig to on agent due to a certain messag of anoth on. the second contribut is the propos of a norm structur. the notion is fruit becaus it allow the  separ of norm and procedur concern. the norm structur we propos make evid the similar between the propag of norm posit and the propag 642 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) of token in colour petri net. that similar readili suggest a map between the two, and give ground to a conveni analyt treatment of the norm  structur, in gener, and the complex of conflict detect, in particular. the idea of model interact (in the form of convers) via petri net ha been investig in [18], where the interact medium and individu agent ar model as cpn sub-net that ar subsequ  combin for analysi. in [5], convers ar first design and analys at the level of cpn and thereaft translat into protocol. lin et al. [20] map convers schemata to cpn. to our knowledg, the us of thi represent in the support of conflict detect in regul ma ha not been report elsewher. final, we present a distribut mechan to resolv norm conflict. sartor [25] treat norm conflict from the point of view of legal theori and suggest a wai to order the norm involv. hi idea is implement in [12] but requir a central resourc for norm mainten. the approach to conflict detect and resolut is an  adapt and extens of the work on instanti graph  report in [17] and a relat algorithm in [27]. the algorithm present in the current paper can be us to manag  norm state distributedli: norm scene that happen in parallel have an associ norm state Δ to which the algorithm is independ appli each time a new norm is to be introduc. these three contribut we present in thi paper open mani possibl for futur work. we should mention first, that as a broad strategi we ar work on a  generalis of the notion of norm structur to make it oper with differ coordin model, with richer deontic  content and on top of differ comput realis of regul ma. as a first step in thi direct we ar  take advantag of the de-coupl between interact  protocol and declar norm guidanc that the norm structur make avail, to provid a norm layer for electron institut (as defin in [1]). we expect such coupl will endow electron institut with a more  flexibl -and more express- norm environ. furthermor, we want to extend our model along sever direct: (1) to handl negat and constraint as part of the norm languag, and in particular the notion of time; (2) to accommod multipl, hierarch norm author base on role, along the line of cholvi and cuppen [3] and power relationship as suggest by carabelea et al. [2]; (3) to captur in the conflict resolut algorithm differ semant relat the deontic notion by support  differ axiom (e.g., rel strength of prohibit versu oblig, default deontic notion, deontic inconsist). on the theoret side, we intend to us analysi  techniqu of cpn in order to characteris class of cpn (e.g., acycl, symmetr, etc.) correspond to famili of norm structur that ar suscept to tractabl  offlin conflict detect. the combin of these techniqu along with our onlin conflict resolut mechan is  intend to endow ma design with the abil to  incorpor norm into their system in a principl wai. 8. refer [1] j. l. arco, m. esteva, p. noriega, j. a. rodr´ıguez, and c. sierra. engin open environ with electron institut. journal on engin applic of artifici intellig, 18(2):191-204, 2005. [2] c. carabelea, o. boissier, and c. castelfranchi. us social power to enabl agent to reason about be part of a group. in 5th internat. workshop, esaw 2004, page 166-177, 2004. [3] l. cholvi and f. cuppen. solv norm conflict by merg role. in fifth intern confer on artifici intellig and law, washington, usa, 1995. [4] s. christensen and t. b. haagh. design cpn - overview of cpn ml syntax. technic report, univers of aarhu, 1996. [5] r. s. cost, y. chen, t. w. finin, y. labrou, and y. peng. us color petri net for convers model. in issu in agent commun, page 178-192, london, uk, 2000. [6] f. dignum. autonom agent with norm. artifici intellig and law, 7(1):69-79, 1999. [7] a. elhag, j. breuker, and p. brouwer. on the formal analysi of norm conflict. inform & comm. techn. law, 9(3):207-217, oct. 2000. [8] m. esteva, w. vasconcelo, c. sierra, and j. a. rodr´ıguez-aguilar. norm consist in electron institut. volum 3171 (lnai), page 494-505. springer-verlag, 2004. [9] m. fit. first-order logic and autom theorem prove. springer-verlag, new york, u.s.a., 1990. [10] n. fornara, f. vigan`o, and m. colombetti. an event driven approach to norm in artifici institut. in aama05 workshop: agent, norm and institut for regul multiag system (ani@rem), utrecht, 2005. [11] d. gaertner, p. noriega, and c. sierra. extend the bdi architectur with commit. in proceed of the 9th intern confer of the catalan associ of artifici intellig, 2006. [12] a. garc´ıa-camino, p. noriega, and j.-a. rodr´ıguez-aguilar. an algorithm for conflict resolut in regul compound activ. in 7th int.workshop - esaw "06, 2006. [13] a. garc´ıa-camino, j.-a. rodr´ıguez-aguilar, c. sierra, and w. vasconcelo. a distribut architectur for norm-awar agent societi. in dalt iii, volum 3904 (lnai), page 89-105. springer, 2006. [14] f. giunchiglia and l. serafini. multi-languag hierarch logic or: how we can do without modal logic. artifici intellig, 65(1):29-70, 1994. [15] j. haberma. the theori of commun action, volum on, reason and the ration of societi. beacon press, 1984. [16] k. jensen. colour petri net: basic concept, analysi method and practic us (volum 1). springer, 1997. [17] m. kollingbaum and t. norman. strategi for resolv norm conflict in practic reason. in ecai workshop coordin in emerg agent societi 2004, 2004. [18] j.-l. kone, g. francoi, and y. demazeau. formal and pre-valid for interact protocol in a multi agent system. in ecai, page 298-307, 1998. [19] b. kramer and j. mylopoulo. knowledg represent. in s. c. shapiro, editor, encyclopedia of artifici intellig, volum 1, page 743-759. john wilei & son, 1992. [20] f. lin, d. h. norri, w. shen, and r. kremer. a schema-base approach to specifi convers polici. in issu in agent commun, page 193-204, 2000. [21] n. minski. law govern interact (lgi): a distribut coordin and control mechan (an introduct, and a refer manual). technic report, rutger univers, 2005. [22] t. murata. petri net: properti, analysi and applic. proceed of the ieee, 77(4):541-580, 1989. [23] s. parson, c. sierra, and n. jen. agent that reason and negoti by argu. journal of logic and comput, 8(3):261-292, 1998. [24] a. ricci and m. viroli. coordin artifact: a unifi abstract for engin environ-mediat coordin in ma. informatica, 29:433-443, 2005. [25] g. sartor. norm conflict in legal reason. artifici intellig and law, 1(2-3):209-235, june 1992. [26] m. sergot. a comput theori of norm posit. acm tran. comput. logic, 2(4):581-622, 2001. [27] w. w. vasconcelo, m. kollingbaum, and t. norman. resolv conflict and inconsist in norm-regul virtual organis. in proceed of aama "07, hawai"i, usa, 2007. ifaama. [28] g. h. von wright. norm and action: a logic inquiri. routledg and kegan paul, london, 1963. [29] m. wooldridg. an introduct to multiag system. john wilei & son, chichest, uk, feb. 2002. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 643 