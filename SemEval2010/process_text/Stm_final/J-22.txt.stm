bet on permut yile chen yahoo! research 45 w. 18th st. 6th floor new york, ny 10011 lanc fortnow depart of comput scienc univers of chicago chicago, il 60637 evdokia nikolova ∗ cs & ai laboratori massachusett institut of technolog cambridg, ma 02139 david m. pennock yahoo! research 45 w. 18th st. 6th floor new york, ny 10011 abstract we consid a permut bet scenario, where peopl wager on the final order of n candid: for exampl, the outcom of a hors race. we examin the auction problem of risklessli match up wager or, equival, find arbitrag opportun among the propos wager. requir bidder to explicitli list the order that thei"d like to bet on is both unnatur and intract, becaus the number of order is n! and the number of subset of  order is 2n! . we propos two express bet languag that seem natur for bidder, and examin the  comput complex of the auction problem in each case. subset bet allow trader to bet either that a candid will end up rank among some subset of posit in the final order, for exampl, hors a will finish in posit 4, 9, or 13-21, or that a posit will be taken by some  subset of candid, for exampl hors a, b, or d will finish in posit 2. for subset bet, we show that the  auction problem can be solv in polynomi time if order ar divis. pair bet allow trader to bet on whether on candid will end up rank higher than anoth  candid, for exampl hors a will beat hors b. we prove that the auction problem becom np-hard for pair  bet. we identifi a suffici condit for the exist of a pair bet match that can be verifi in polynomi time. we also show that a natur greedi algorithm give a poor approxim for indivis order. categori and subject descriptor j.4 [comput applic]: social and behavior  scienc-econom gener term econom, theori 1. introduct bui or sell a financi secur in effect is a wager on the secur"s valu. for exampl, bui a stock is a bet that the stock"s valu is greater than it current price. each trader evalu hi expect profit to decid the quantiti to bui or sell accord to hi own inform and  subject probabl assess. the collect interact of all bet lead to an equilibrium that reflect an aggreg of all the trader" inform and belief. in practic, thi aggreg market assess of the secur"s valu is often more accur than other forecast reli on expert, poll, or statist infer [16, 17, 5, 2, 15]. consid bui a secur at price fifti-two cent, that pai $1 if and onli if a democrat win the 2008 us  presidenti elect. the transact is a commit to accept a fifti-two cent loss if a democrat doe not win in return for a forti-eight cent profit if a democrat doe win. in thi case of an event-conting secur, the price-the market"s valu of the secur-correspond directli to the estim probabl of the event. almost all exist financi and bet exchang pair up bilater trade partner. for exampl, on trader will to accept an x dollar loss if a democrat doe not win in return for a y dollar profit if a democrat win is match up with a second trader will to accept the opposit. howev in mani scenario, even if no bilater agreement exist among trader, multilater agreement mai be  possibl. for exampl, if on trader bet that the democrat candid will receiv more vote than the republican  candid, a second trader bet that the republican candid will receiv more vote than the libertarian candid, and a third trader bet that the libertarian candid will receiv more vote than the democrat candid, then,  depend on the odd thei each offer, there mai be a three-wai agreeabl match even though no two-wai match exist. we propos an exchang where trader have consider flexibl to natur and succinctli express their wager, 326 and examin the comput complex of the  auction"s result match problem of identifi bilater and multilater agreement. in particular, we focu on a set where trader bet on the outcom of a competit among n candid. for exampl, suppos that there ar n  candid in an elect (or n hors in a race, etc.) and thu n! possibl order of candid after the final vote talli. trader mai like to bet on arbitrari properti of the final order, for exampl candid d will win, candid d will finish in either first place or last place, candid d will defeat candid r, candid d and r will both  defeat candid l, etc. the goal of the exchang is to search among all the offer to find two or more that togeth form an agreeabl match. as we shall see, the match  problem can be set up as a linear or integ program, depend on whether order ar divis or indivis, respect. attempt to reduc the problem to a bilater match problem by explicitli creat n! secur, on for each  possibl final order, is both cumbersom for the trader and computation infeas even for modest size n.  moreov, trader" attent would be spread among n!  independ choic, make the likelihood of two trader converg at the same time and place seem remot. there is a tradeoff between the express of the  bid languag and the comput complex of the  match problem. we want to offer trader the most express bid languag possibl while maintain comput feasibl. we explor two bid languag that seem  natur from a trader perspect. subset bet, describ in section 3.2, allow trader to bet on which posit in the rank a candid will fall, for exampl candid d will finish in posit 1, 3-5, or 10. symetr, trader can also bet on which candid will fall in a particular  posit. in section 4, we deriv a polynomi-time algorithm for match (divis) subset bet. the kei to the result is show that the exponenti big linear program ha a correspond separ problem that reduc to maximum weight bipartit match and consequ we can solv it in time polynomi in the number of order. pair bet, describ in section 3.3, allow trader to bet on the final rank of ani two candid, for exampl candid d will defeat candid r. in section 5, we show that optim match of (divis or indivis) pair bet is np-hard, via a reduct from the unweight minimum feedback arc set problem. we also provid a  polynomiallyverifi suffici condit for the exist of a  pairbet match and show that a greedi algorithm offer poor approxim for indivis pair bet. 2. background and relat work we consid permut bet, or bet on the  outcom of a competit among n candid. the final  outcom or state s ∈ s is an ordin rank of the n candid. for exampl, the candid could be hors in a race and the outcom the list of hors in increas order of their finish time. the state space s contain all n! mutual exclus and exhaust permut of candid. in a typic hors race, peopl bet on properti of the outcom like hors a will win, hors a will show, or finish in either first or second place, or hors a and b will finish in first and second place, respect. in practic at the racetrack, each of these differ type of bet ar process in separ pool or group. in other word, all the win bet ar process togeth, and all the show bet ar process togeth, but the two type of bet do not mix. thi separ can hurt liquid and inform aggreg. for exampl, even though hors a is heavili favor to win, that mai not directli boost the hors"s odd to show. instead, we describ a central exchang where all bet on the outcom ar process togeth, thu aggreg liquid and ensur that inform infer happen automat. ideal, we"d like to allow trader to bet on ani properti of the final order thei like, state in exactli the languag thei prefer. in practic, allow too flexibl a languag  creat a comput burden for the auction attempt to match will trader. we explor the tradeoff between the express of the bid languag and the  comput complex of the match problem. we consid a framework where peopl propos to bui secur that pai $1 if and onli if some properti of the final order is true. trader state the price thei ar  will to pai per share and the number of share thei would like to purchas. (sell order mai not be explicitli need, sinc bui the negat of an event is equival to sell the event.) a divis order permit the trader to receiv fewer share than request, as long as the price constraint is met; an indivis order is an all-or-noth order. the descript of bet in term of price and share is without loss of gener: we can also allow bet to be describ in term of odd, payoff vector, or ani of the divers arrai of approach practic in financi and gambl circl. in principl, we can do everyth we want by explicitli offer n! secur, on for everi state s ∈ s (or in fact ani set of n! linearli independ secur). thi is the so-call complet arrow-debreu secur market [1] for our set. in practic, trader do not want to deal with low-level specif of complet order: peopl think more natur in term of high-level properti of  order. moreov, oper n! secur is infeas in  practic from a comput point of view as n grow. a veri simpl bid languag might allow trader to bet onli on who win the competit, as is done in the win pool at racetrack. the correspond match problem is polynomi, howev the languag is not veri express. a trader who believ that a will defeat b, but that neither will win outright cannot usefulli impart hi inform to the market. the price space of the market reveal the  collect estim of win probabl but noth els. our goal is to find languag that ar as express and intuit as possibl and reveal as much inform as possibl, while maintain comput feasibl. our work is in direct analog to work by fortnow et. al. [6]. wherea we explor permut combinator,  fortnow et. al. explor boolean combinator. the author  consid a state space of the 2n possibl outcom of n binari variabl. trader express bet in boolean logic. the  author show that divis match is co-np-complet and indivis match is Σp 2-complet. hanson [9] describ a market score rule mechan which can allow bet on combinatori number of  outcom. the market start with a joint probabl  distribut across all outcom. it work like a sequenti version of a score rule. ani trader can chang the probabl  distribut as long as he agre to pai the most recent trader 327 accord to the score rule. the market maker pai the last trader. henc, he bear risk and mai incur loss.  market score rule mechan have a nice properti that the worst-case loss of the market maker is bound. howev, the comput aspect on how to oper the  mechan have not been fulli explor. our mechan have an auction who doe not bear ani risk and onli match order. research on bid languag and winner determin in combinatori auction [4, 14, 18] consid similar  comput challeng in find an alloc of item to bidder that maxim the auction"s revenu.  combinatori auction allow bidder to place distinct valu on bundl of good rather than just on individu good.  uncertainti and risk ar typic not consid and the  central auction problem is to maxim social welfar. our mechan allow trader to construct bet for an event with n! outcom. uncertainti and risk ar consid and the auction problem is to explor arbitrag opportun and risklessli match up wager. 3. permut bet in thi section, we defin the match and optim  match problem that an auction need to solv in a gener permut bet market. we then illustr the  problem definit in the context of the subset-bet and  pairbet market. 3.1 secur, order and match problem consid an event with n compet candid where the outcom (state) is a rank of the n candid. the bid languag of a market offer secur in the  futur outcom determin the type and number of  secur avail and directli affect what inform can be aggreg about the outcom. a fulli express bid languag can captur ani possibl inform that trader mai have about the final rank; a less express languag limit the type of inform that can be aggreg though it mai enabl a more effici solut to the match  problem. for ani bid languag and number of secur in a permut bet market, we can succinctli repres the problem of the auction to risklessli match offer as follow. consid an index set of bet or order o which trader submit to the auction. each order i ∈ o is a tripl (bi, qi, φi), where bi denot how much the trader is will to pai for a unit share of secur φi and qi is the number of share of the secur he want to purchas at price bi. natur, bi ∈ (0, 1) sinc a unit of the secur pai off at most $1 when the event is realiz. sinc order i is defin for a singl secur φi, we will omit the secur variabl whenev it is clear from the context. the auction can accept or reject each order, or in a divis world accept a fraction of the order. let xi be the fraction of order i ∈ o accept. in the indivis version of the market xi = 0 or 1 while in the divis version xi ∈ [0, 1]. further let ii(s) be the indic variabl for whether order i is win in state s, that is ii(s) = 1 if the order is paid back $1 in state s and ii(s) = 0 otherwis. there ar two possibl problem that the auction mai want to solv. the simpler on is to find a subset of order that can be match risk-free, name a subset of order which accept togeth give a nonneg profit to the auction in everi possibl outcom. we call thi problem the exist of a match or sometim simpli, the match problem. the more complex problem is for the auction to find the optim match with respect to some criterion such as profit, trade volum, etc. definit 1 (exist of match, indivis order). given a set of order o, doe there exist a set of xi ∈ {0, 1}, i ∈ o, with at least on xi = 1 such that i (bi − ii(s))qixi ≥ 0, ∀s ∈ s? (1) similarli we can defin the exist of a match with  divis order. definit 2 (exist of match, divis order). given a set of order o, doe there exist a set of xi ∈ [0, 1], i ∈ o, with at least on xi > 0 such that i (bi − ii(s))qixi ≥ 0, ∀s ∈ s? (2) the exist of a match is a decis problem. it onli return whether trade can occur at no risk to the  auction. in addit to the risk-free requir, the auction can optim some criterion in determin the order to  accept. some reason object includ maxim the total trade volum in the market or the worst-case profit of the auction. the follow optim match problem ar defin for an auction who maxim hi worst-case profit. definit 3 (optim match, indivis order). given a set of order o, choos xi ∈ {0, 1} such that the follow mix integ program problem achiev it optim max xi,c c (3) s.t. i bi − ii(s) qixi ≥ c, ∀s ∈ s xi ∈ {0, 1}, ∀i ∈ o. definit 4 (optim match, divis order). given a set of order o, choos xi ∈ [0, 1] such that the  follow linear program problem achiev it optim max xi,c c (4) s.t. i bi − ii(s) qixi ≥ c, ∀s ∈ s 0 ≤ xi ≤ 1, ∀i ∈ o. the variabl c is the worst-case profit for the auction. note that, strictli speak, the optim match problem do not requir to solv the optim problem (3) and (4), becaus onli the optim set of order ar need. the optim worst-case profit mai remain unknown. 3.2 subset bet a subset bet market allow two differ type of bet. trader can bet on a subset of posit a candid mai end up at, or thei can bet on a subset of candid that will occupi a particular posit. a secur α|Φ where Φ is a subset of posit pai off $1 if candid α stand at a posit that is an element of Φ and it pai $0 otherwis. for exampl, secur α|{2, 4} pai $1 when candid α 328 is rank second or fourth. similarli, a secur Ψ|j where Ψ is a subset of candid pai off $1 if ani of the  candid in the set Ψ rank at posit j. for instanc, secur {α, γ}|2 pai off $1 when either candid α or candid γ is rank second. the auction in a subset bet market face a  nontrivi match problem, that is to determin which order to accept among all submit order i ∈ o. note that  although there ar onli n candid and n possibl posit, the number of avail secur to bet on is exponenti sinc a trader mai bet on ani of the 2n subset of  candid or posit. with thi, it is not immedi clear whether on can even find a trade partner or a match for trade to occur, or that the auction can solv the  match problem in polynomi time. in the next section, we will show that somewhat surprisingli there is an eleg  polynomi solut to both the match and optim match problem, base on classic combinatori problem. when an order is accept, the correspond trader pai the submit order price bi to the auction and the  auction pai the win order $1 per share after the  outcom is reveal. the auction ha to carefulli choos which order and what fraction of them to accept so as to be guarante a nonneg profit in ani futur state. the follow exampl illustr the match problem for indivis order in the subset-bet market. exampl 1. suppos n = 3. object α, β, and γ compet for posit 1, 2, and 3 in a competit. the auction receiv the follow 4 order: (1) bui 1 share α|{1} at price $0.6; (2) bui 1 share β|{1, 2} at price $0.7; (3) bui 1 share γ|{1, 3} at price $0.8; and (4) bui 1 share β|{3} at price $0.7. there ar 6 possibl state of order: αβγ, αγβ, βαγ, βγα, γαβ,and γβα. the correspond  statedepend profit of the auction for each order can be  calcul as the follow vector, c1 = (−0.4, −0.4, 0.6, 0.6, 0.6, 0.6) c2 = (−0.3, 0.7, −0.3, −0.3, 0.7, −0.3) c3 = (−0.2, 0.8, −0.2, 0.8, −0.2, −0.2) c4 = ( 0.7, −0.3, 0.7, 0.7, −0.3, 0.7). 6 column correspond to the 6 futur state. for indivis order, the auction can either accept order (2) and (4) and obtain profit vector c = (0.4, 0.4, 0.4, 0.4, 0.4, 0.4), or accept order (2), (3), and (4) and ha profit across state c = (0.2, 1.2, 0.2, 1.2, 0.2, 0.2). 3.3 pair bet a pair bet market allow trader to bet on whether on candid will rank higher than anoth candid, in an outcom which is a permut of n candid. a secur α > β pai off $ 1 if candid α is rank higher than candid β and $ 0 otherwis. there ar a total of n(n −1) differ secur offer in the market, each correspond to an order pair of candid. trader place order of the form bui qi share of α > β at price per share no greater than bi. bi in gener should be between 0 and 1. again the order can be either indivis or divis and the auction need to decid what fraction xi of each order to accept so as not to incur ani loss, with a b c d e f .99 .99 .5 .5 .5 .99 .99 .99 .99 figur 1: everi cycl ha neg worst-case profit of −0.02 (for the cycl of length 4) or less (for the cycl of length 6), howev accept all edg in full give a posit worst-case profit of 0.44. xi ∈ {0, 1} for indivis and xi ∈ [0, 1] for divis order. the same definit for exist of a match and optim match from section 3.1 appli. the order in the pair-bet market have a natur  interpret as a graph, where the candid ar node in the graph and each order which rank a pair of candid α > β is repres by a direct edg e = (α, β) with price be and weight qe. with thi interpret, it is tempt to assum that a necessari condit for a match is to have a cycl in the graph with a nonneg worst-case profit. assum qe = 1 for all e, thi is a cycl c with a total of |c| edg such that the worst-case profit for the auction is e∈c be − (|c| − 1) ≥ 0, sinc in the worst-case state the auction need to pai $,1 to everi order in the cycl except on. howev, the exampl in figur 1 show that thi is not the case: we mai have a set of order in which everi singl cycl ha a neg worst-case profit, and yet there is a posit  worstcas match overal. the edg label in the figur ar the price be; both the optim divis and indivis solut in thi case accept all order in full, xe = 1. 4. complex of subset bet the match problem of the auction in ani  permut market, includ the subset bet market have n! constraint. brute-forc method would take exponenti time to solv. howev, given the special form of the  secur in the subset bet market, we can show that the match problem for divis order can be solv in  polynomi time. theorem 1. the exist of a match and the optim match problem with divis order in a subset bet  market can both be solv in polynomi time. 329 proof. consid the linear program problem (4) for find an optim match. thi linear program ha |o| + 1 variabl, on variabl xi for each order i and the profit  variabl c. it also ha exponenti mani constraint. howev, we can solv the program in time polynomi in the  number of order |o| by us the ellipsoid algorithm, as long as we can effici solv it correspond separ  problem in polynomi time [7, 8]. the separ problem for a linear program take as input a vector of variabl valu and return if the vector is feasibl, or otherwis it return a violat constraint. for given valu of the variabl, a violat constraint in eq. (4) ask whether there is a state or permut s in which the profit is less than c, and can be rewritten as i ii(s)qixi < i biqixi − c ∀s ∈ s. (5) thu it suffic to show how to find effici a state s satisfi the abov inequ (5) or verifi that the opposit inequ hold for all state s. we will show that the separ problem can be reduc to the maximum weight bipartit match1 problem [3]. the left hand side in eq. (5) is the total monei that the auction need to pai back to the win trader in state s. the first term on the right hand side is the total monei collect by the auction and it is fix for a given  solut vector of xi"s and c. a weight bipartit graph can be construct between the set of candid and the set of posit. for everi order of the form α|Φ there ar edg from candid node α to everi posit node in Φ. for  order of the form Ψ|j there ar edg from each candid in Ψ to posit j. for each order i we put weight qixi on each of these edg. all multi-edg with the same end point ar then replac with a singl edg that carri the total weight of the multi-edg. everi state s then correspond to a perfect match in the bipartit graph. in addit, the auction pai out to the winner the sum of all edg weight in the perfect match sinc everi candid can onli stand in on posit and everi posit is taken by on candid. thu, the auction"s worst-cast state and payment ar the solut to the maximum weight  bipartit match problem, which ha known polynomi-time algorithm [12, 13]. henc, the separ problem can be solv in polynomi time. natur, if the optim solut to (4) give a worst-case profit of c∗ > 0, there exist a match. thu, the match problem can be solv in polynomi time also. 5. complex of pair bet in thi section we show that a slight chang of the  bid languag mai bring about a dramat chang in the complex of the optim match problem of the  auction. in particular, we show that find the optim match in the pair bet market is np-hard for both divis and  indivis order. we then identifi a polynomi-verifi suffici condit for decid the exist of a match. the hard result ar surpris especi in light of the observ that a pair bet market ha a seemingli more restrict bid languag which onli offer n(n−1) 1 the notion of perfect match in a bipartit graph, which we us onli in thi proof, should not be confus with the notion of match bet which we us throughout the paper. secur. in contrast, the subset bet market enabl trader to bet on an exponenti number of secur and yet had a polynomi time solut for find the optim match. our hope is that the comparison of the complex of the subset and pair bet market would offer insight into what make a bid languag express while at the same time enabl an effici match solut. in all analysi that follow, we assum that trader submit unit order in pair bet market, that is qi = 1. a set of order o receiv by the auction in a pair bet market with unit order can be repres by a direct graph, g(v, e), where the vertex set v contain candid that trader bet on. an edg e ∈ e, denot (α, β, be), repres an order to bui 1 share of the secur α > β at price be. all edg have equal weight of 1. we adopt the follow notat throughout the paper: • g(v, e): origin equal weight direct graph for the set of unit order o. • be: price of the order for edg e. • g∗ (v ∗ , e∗ ); a weight direct graph of accept  order for optim match, where edg weight xe is the quantiti of order e accept by the auction. xe = 1 for indivis order and 0 < xe ≤ 1 for divis  order. • h(v, e): a gener weight direct graph of accept order. • k(h): solut to the unweight minimum feedback arc set problem on graph h. k(h) is the minimum number of edg to remov so that h becom acycl. • l(h): solut to the weight minimum feedback arc set problem on graph h. l(h) is the minimum total weight for the set of edg which, when remov, leav h acycl. • c(h): worst-case profit of the auction if he accept all order in graph h. • : a suffici small posit real number. where not state, < 1/(2|e|) for a graph h(v, e). in other case, the valu is determin in context. a feedback arc set of a direct graph is a set of edg which, when remov from the graph, leav a direct acycl graph (dag). unweight minimum feedback arc set  problem is to find a feedback arc set with the minimum  cardin, while weight minimum feedback arc set problem seek to find a feedback arc set with the minimum total edg weight. both unweight and weight minimum feedback arc set problem have been shown to be np-complet [10]. we will us thi result in our complex analysi on pair bet market. 5.1 optim indivis match the auction"s optim indivis match problem is introduc in definit 3 of section 3. assum unit  order and consid the order graph g(v, e), we restat the auction"s optim match problem in a pair  bet market as pick a subset of edg to accept such that 330 worst-case profit is maxim in the follow optim problem, max xe,c c (6) s.t. e be − ie(s) xe ≥ c, ∀s ∈ s xe ∈ {0, 1}, ∀e ∈ e. without lose of gener, we assum that there ar no multi-edg in the order graph g. we show that the optim match problem for  indivis order is np-hard via a reduct from the unweight minimum feedback arc set problem. the latter take as  input a direct graph, and ask what is the minimum number of edg to delet from the graph so as to be left with a dag. our hard proof is base on the follow lemma. lemma 2. suppos the auction accept all edg in an equal weight direct graph h(v, e) with edg price be = (1 − ) and edg weight xe = 1. then the worst-case profit is equal to k(h) − |e|, where k(h) is the solut to the unweight minimum feedback arc problem on h. proof. if the order of an edg get $1 payoff at the end of the market we call the edg a win edg, otherwis it is call a lose edg. for ani state s, all win edg necessarili form a dag. convers, for everi dag there is a state in which the dag edg ar winner (though the remain edg in g ar not necessarili loser). suppos that in state s there ar ws win edg and ls = |e| − ws lose edg. then, ls is the cardin of a feedback arc set that consist of all lose edg in state s. the edg that remain after delet the minimum feedback arc set form the maximum dag for the graph h. consid the state smax in which all edg of the maximum dag ar winner. thi give the maximum number of win edg wmax. all other edg ar necessarili loser in the state smax, sinc ani edg which is not in the max dag must form a cycl togeth with some of the dag edg. the number of lose edg in state smax is the cardin of the minimum feedback arc set of h, that is |e| − wmax = k(h). the profit of the auction in a state s is profit(s) = e∈e be − w = (1 − )|e| − w ≥ (1 − )|e| − wmax, where equal hold when s = smax. thu, the worst-case profit is achiev at state smax, profit(smax) = (|e| − wmax) − |e| = k(h) − |e|. consid the graph of accept order for optim  match, g∗ (v ∗ , e∗ ), which consist of the optim subset of edg e∗ to be accept by the auction, that is edg with xe = 1 in the solut of the optim problem (6). we have the follow lemma. lemma 3. if the edg price ar be = (1− ), then the  optim indivis solut graph g∗ ha the same unweight minimum feedback arc set size as the graph of all order g, that is k(g∗ ) = k(g). furthermor, g∗ is the smallest such subgraph of g, i.e., it is the subgraph of g with the  smallest number of edg, that ha the same size of unweight minimum feedback arc set as g. proof. g∗ is a subgraph of g, henc the minimum  number of edg to break cycl in g∗ is no more than that in g, name k(g∗ ) ≤ k(g). suppos k(g∗ ) < k(g). sinc both k(g∗ ) and k(g) ar integ, for ani < 1 |e| we have that k(g∗ ) − |e∗ | < k(g)− |e|. henc by lemma 2, the auction ha a higher worst-case profit by accept g than accept g∗ , which contradict the optim of g∗ . final, the worst-case profit k(g) − |e∗ | is maxim when |e∗ | is minim. henc, g∗ is the smallest subgraph of g such that k(g∗ ) = k(g). the abov two lemma prove that the maximum  worstcas profit in the optim indivis match is directli relat to the size of the minimum feedback arc set. thu comput each automat give the other, henc  comput the maximum worst-case profit in the indivis pair bet problem is np-hard. theorem 4. comput the maximum worst-case profit in indivis pair bet is np-hard. proof. by lemma 3, the maximum worst-case profit which is the optimum to the mix integ program problem (6), is k(g) − |e∗ |, where |e∗ | is the number of accept edg. sinc k(g) is integ and |e∗ | ≤ |e| < 1, solv (6) will automat give us the cardin of the minimum feedback arc set of g, k(g). becaus the minimum feedback arc set problem is np-complet [10], comput the maximum worst-case profit is np-hard. theorem 4 state that solv the optim problem is hard, becaus even if the optim set of order ar  provid comput the optim worst-case profit from  accept those order is np-hard. howev, it doe not impli whether the optim match problem, i.e. find the  optim set of order to accept, is np-hard. it is possibl to be abl to determin which edg in a graph particip in the optim match, yet unabl to comput the  correspond worst-case profit. next, we prove that the indivis optim match problem is actual np-hard. we will us the follow short fact repeatedli. lemma 5 (edg remov lemma). given a weight graph h(v, e), remov a singl edg e with weight xe from the graph decreas the weight minimum feedback arc set solut l(h) by no more than xe and reduc the unweight minimum feedback arc set solut k(h) by no more than 1. proof. suppos the weight minimum feedback arc set for the graph h − {e} is f. then f ∪ {e} is a feedback arc set for h, and ha total edg weight l(h−{e})+xe. becaus l(h) is the solut to the weight minimum feedback arc set problem on h, we have l(h) ≤ l(h −{e})+xe, impli that l(h − {e}) ≥ l(h) − xe. similarli, suppos the unweight minimum feedback arc set for the graph h − {e} is f . then f ∪ {e} is a feedback arc set for h, and ha set cardin k(h−{e})+1. becaus k(h) is the solut to the unweight minimum feedback arc set problem on h, we have k(h) ≤ k(h − {e}) + 1, give that k(h − {e}) ≥ k(h) − 1. theorem 6. find the optim match in indivis pair bet is np-hard. 331 proof. we reduc from the unweight minimum  feedback arc set problem again, although with a slightli more complex polynomi transform involv multipl call to the optim match oracl. consid an instanc graph g of the minimum feedback arc set problem. we ar interest in comput k(g), the size of the minimum feedback arc set of g. suppos we have an oracl which solv the optim  match problem. denot by optim match(g ) the output of the optim match oracl on graph g with price be = (1− ) on all it edg. by lemma 3, on input g , the oracl optim match return the subgraph of g with the  smallest number of edg, that ha the same size of minimum feedback arc set as g . the follow procedur find k(g) by us polynomi mani call to the optim match oracl on a sequenc of subgraph of g. set g := g iter := 0 while (g ha nonempti edg set) reset g := optim match(g ) if (g ha nonempti edg set) increment iter by 1 reset g by remov ani edg e end if end while return (iter) thi procedur remov edg from the origin graph g layer by layer until the graph is empti, while at the same time comput the minimum feedback arc set size k(g) of the origin graph as the number of iter. in each  iter, we start with a graph g and replac it with the smallest subgraph g that ha the same k(g ). at thi stage, remov an addit edg e necessarili result in k(g −{e}) = k(g )−1, becaus k(g −{e}) < k(g ) by the optim of g , and k(g − {e}) ≥ k(g ) − 1 by the  edgeremov lemma. therefor, in each iter the cardin of the minimum feedback arc set get reduc exactli by 1. henc the number of iter is equal to k(g). note that thi procedur give a polynomi  transform from the optim match problem to the unweight minimum feedback arc set problem, which call the optim match oracl exactli k(g) ≤ |e| time, where |e| is the number of edg of g. henc the optim match problem is np-hard. 5.2 optim divis match when order ar divis, the auction"s optim  match problem is describ in definit 4 of section 3.  assum unit order and consid the order graph g(v, e), we restat the auction"s optim match problem for divis order as choos quantiti of order to accept, xe ∈ [0, 1], such that worst-case profit is maxim in the follow linear program problem, max xe,c c (7) s.t. e be − ie(s) xe ≥ c, ∀s ∈ s xe ∈ [0, 1], ∀e ∈ e. we still assum that there ar no multi-edg in the order graph g. when order ar divis, the auction can be better off by accept partial order. exampl 2 show a situat when accept partial order gener higher worst-case profit than the optim indivis solut. exampl 2. we show that the linear program (7)  sometim ha a non-integ optim solut. a b c d e f b b b b b b b b b figur 2: an order graph. letter on edg  repres order price. consid the graph in figur 2. there ar a total of five cycl in the graph: three four-edg cycl abcd, abef, cdef, and two six-edg cycl abcdef and abefcd. suppos each edg ha price b such that 4b − 3 > 0 and 6b − 5 < 0, name b ∈ (.75, .80), for exampl b = .78. with thi, the optim indivis solut consist of at most on four-edg cycl, with worst case profit (4b−3). on the other hand, take 1 2 fraction of each of the three four-edg cycl would yield higher worst-case profit of 3 2 (4b − 3). despit the potenti profit increas for accept divis order, the auction"s optim match problem remain to be np-hard for divis order, which is present below via sever lemma and theorem. lemma 7. suppos the auction accept order describ by a weight direct graph h(v, e) with edg weight xe to be the quantiti accept for edg order e. the worst-case profit for the auction is c(h) = e∈e (be − 1)xe + l(h). (8) proof. for ani state s, the win edg form a dag. thu, the worst-case profit for the auction achiev at the state(s) when the total quantiti of lose order is  minim. the minimum total quantiti of lose order is the solut to weight minim feedback arc set problem on h, that is l(h). consid the graph of accept order for optim divis match, g∗ (v ∗ , e∗ ), which consist of the optim subset of edg e∗ to be accept by the auction, with edg weight xe > 0 get from the optim solut of the linear program (7). we have the follow lemma. 332 lemma 8. l(g∗ ) ≤ k(g∗ ) ≤ k(g). proof. l(g∗ ) is the solut of the weight minimum feedback arc set problem on g∗ , while k(g∗ ) is the solut of the unweight minimum feedback arc set problem on g∗ . when all edg weight in g∗ ar 1, l(g∗ ) = k(g∗ ). when xe"s ar less than 1, l(g∗ ) can be less than or equal to k(g∗ ). sinc g∗ is a subgraph of g but possibl with differ edg weight, k(g∗ ) ≤ k(g). henc, we have the abov relat. lemma 9. there exist some such that when all edg price be"s ar (1 − ), l(g∗ ) = k(g). proof. from lemma 8, l(g∗ ) ≤ k(g). we know that the auction"s worst-case profit when accept g∗ is c(g∗ ) = e∈e∗ (be − 1)xe + l(g∗ ) = l(g∗ ) − e∈e∗ xe. when he accept the origin order graph g in full, hi  worstcas profit is c(g) = e∈e (be − 1) + k(g) = k(g) − |e|. suppos l(g∗ ) < k(g). if |e| − e∈e∗ xe = 0, it mean that g∗ is g. henc, l(g∗ ) = k(g) regardless of , which contradict with the assumpt l(g∗ ) < k(g). if |e| − e∈e∗ xe > 0, then when < k(g) − l(g∗ ) |e| − e∈e∗ xe , c(g) is strictli greater than c(g∗ ), contradict with the optim of c(g∗ ). becaus xe"s ar less than 1, l(g∗ ) > k(g) is imposs. thu, l(g∗ ) = k(g). theorem 10. find the optim worst-case profit in divis pair bet is np-hard. proof. given the optim set of partial order to accept for g when edg weight ar (1 − ), if we can calcul the optim worst-case profit, by lemma 9 we can solv the unweight minimum feedback arc set problem on g, which is np-hard. henc, find the optim worst-case profit is np-hard. theorem 10 state that solv the linear program (7) is np-hard. similarli to the indivis case, we still need to prove that just find the optim divis match is hard, as oppos to be abl to comput the optim  worstcas profit. sinc in the divis case the edg do not necessarili have unit weight, the proof in theorem 6 doe not appli directli. howev, with an addit properti of the divis case, we can augment the procedur from the indivis hard proof to comput the unweight minimum feedback arc set size k(g) here as well. first, note that the optim divis subgraph g∗ of a graph g is the weight subgraph with minimum weight feedback arc set size l(g∗ ) = k(g) and smallest sum of edg weight e∈e∗ xe, sinc it correspond worst case profit is k(g) − e∈e∗ xe accord to lemma 7 and 9. lemma 11. suppos graph h satisfi l(h) = k(h) and we remov edg e from it with weight xe < 1. then, k(h − {e}) = k(h). proof. assum the contrari, name k(h−{e}) < k(h). then by lemma 5, k(h − {e}) = k(h) − 1. sinc remov a singl edg cannot reduc the minimum feedback arc set by more than the edg weight, l(h) − xe ≤ l(h − {e}). (9) on the other hand h − {e} ⊂ h so we have, l(h − {e}) ≤ k(h − {e}) = k(h) − 1 = l(h) − 1. (10) combin (9) and (10), we get xe ≥ 1. the  contradict aris. therefor, remov ani edg with less than unit weight from an optim divis graph doe not chang k(h), the minim feedback arc set size of the unweight version of the graph. we now can augment the procedur for the indivis case in theorem 6, to prove hard of the divis version, as follow. theorem 12. find the optim match in divis pair bet is np-hard. proof. we reduc from the unweight minimum  feedback arc set problem for graph g. suppos we have an oracl for the optim divis problem call optim divis match, which on input graph h comput edg weight xe ∈ (0, 1] for the optim subgraph h∗ of h, satisfi l(h∗ ) = k(h). the follow procedur output k(g). set g := g iter := 0 while (g ha nonempti edg set) reset g := optim divis match(g ) while (g ha edg with weight < 1) remov an edg with weight < 1 from g reset g by set all edg weight to 1 reset g := optim divis match(g ) end while if (g ha nonempti edg set) increment iter by 1 reset g by remov ani edg e end if end while return (iter) as in the proof of the correspond theorem 6 for the indivis case, we comput k(g) by iter remov edg and recomput the optim divis solut on the remain subgraph, until all edg ar delet. in each iter of the outer while loop, the minimum feedback arc set is reduc by 1, thu the number of iter is equal to k(g). it remain to verifi that each iter reduc k(g) by exactli 1. start from a graph at the begin of an iter, we comput it optim divis subgraph. we then keep remov on non-unit weight edg at a time and recomput the optim divis subgraph, until the  latter contain onli edg with unit weight. by lemma 11 throughout the iter so far the minimum feedback arc set of the correspond unweight graph remain unchang. onc the oracl return a graph g with unit edg weight, remov ani edg would reduc the minimum feedback arc set: otherwis g is not optim sinc g − {e} would have 333 the same minimum feedback arc set but smaller total edg weight. by lemma 5 remov a singl edg cannot reduc the minimum feedback arc set by more than on, thu as all edg have unit weight, k(g ) get reduc by exactli on. k(g) is equal to the return valu from the procedur. henc, the optim match problem for divis order is np-hard. 5.3 exist of a match know that the optim match problem is np-hard for both indivis and divis order in pair bet, we check whether the auction can identifi the exist of a match with eas. lemma 13 state a suffici condit for the match problem with both indivis and divis order. lemma 13. a suffici condit for the exist of a match for pair bet is that there exist a cycl c in g such that, e∈c be ≥ |c| − 1, (11) where |c| is the number of edg in the cycl c. proof. the left-hand side of the inequ (11)  repres the total payment that the auction receiv by  accept everi unit order in the cycl c in full. becaus the direct of an edg repres predict order of the two connect node in the final rank, form a cycl  mean that there is some logic contradict on the predict order of candid. henc, whichev state is realiz, not all of the edg in the cycl can be win edg. the worst-case for the auction correspond to a state where everi edg in the cycl get paid by $ 1 except on, with |c| − 1 be the maximum payment to trader. henc, if  inequ (11) is satisfi, the auction ha non-neg worst-case profit by accept the order in the cycl. it can be shown that identifi such a non-neg  worstcas profit cycl in an order graph g can be achiev in polynomi time. lemma 14. it take polynomi time to find a cycl in an order graph g(v, e) that ha the highest worst-case profit, that is max c∈c e∈c be − (|c| − 1) , where c is the set of all cycl in g. proof. becaus e∈c be − (|c| − 1) = e∈c (be − 1) + 1 = 1 − e∈c (1 − be), find the cycl that give the highest worst-case profit in the origin order graph g is equival to find the  shortest cycl in a convert graph h(v, e), where h is achiev by set the weight for edg e in g to be (1 − be). find the shortest cycl in graph h can be done within polynomi time by resort to the shortest path problem. for ani vertex v in v , we consid everi neighbor vertex w such that (v, w) ∈ e. we then find the shortest path from w to v, denot as path(w, v). the shortest cycl that pass vertex v is found by choos the w such that e(v,w) + path(w, v) is minim. compar the shortest cycl found for everi vertex, we then can determin the shortest overal cycl for the graph h. becaus the short path problem can be solv in polynomi time [3], we can find the solut to our problem in polynomi time. if the worst-case profit for the optim cycl is non-neg, we know that there exist a match in g. howev, the  condit in lemma 13 is not a necessari condit for the  exist of a match. even if all singl cycl in the order graph have neg worst-case profit, the auction mai accept multipl interweav cycl to have posit  worstcas profit. figur 1 exhibit such a situat. if the optim indivis match consist onli of edg  disjoint cycl, a natur greedi algorithm can find the cycl that give the highest worst-case profit, remov it edg from the graph, and proce until no more cycl exist. howev, we show that such greedi algorithm can give a veri poor approxim. √ n + 1 √ n + 1 √ n √ n + 1 √ n + 1 √ n + 1 √ n + 1 figur 3: graph with n vertic and n + √ n edg on which the greedi algorithm find onli two  cycl, the dot cycl in the center and the uniqu remain cycl. the label in the face give the number of edg in the correspond cycl. lemma 15. the greedi algorithm give at most an o( √  n)approxim to the maximum number of disjoint cycl. proof. consid the graph in figur 3 consist of a cycl with √ n edg, each of which particip in anoth (otherwis disjoint) cycl with √ n + 1 edg. suppos all edg weight ar (1 − ). the maximum number of disjoint cycl is clearli √ n, take all cycl with length √ n + 1. becaus smaller cycl give higher worst-case profit, the greedi algorithm would first select the cycl of length √ n, after which there would be onli on remain cycl of length n. thu the total number of cycl select by greedi is 2 and the approxim factor in thi case is √ n/2. in light of lemma 15, on mai expect that greedi  algorithm would give √ n-approxim at best.  approxima334 tion algorithm for find the maximum number of  edgedisjoint cycl have been consid by krivelevich,  nutov and yuster [11, 19]. inde, for the case of direct graph, the author show that a greedi algorithm give a√ n-approxim [11]. when the optim match doe not consist of edg-disjoint cycl as in the exampl of figur 3, greedi algorithm try to find optim singl cycl fail obvious. 6. conclus we consid a permut bet scenario, where trader wager on the final order of n candid. while it is  unnatur and intract to allow trader to bet directli on the n! differ final order, we propos two express bet languag, subset bet and pair bet. in a subset bet market, trader can bet either on a subset of posit that a candid stand or on a subset of  candid who occupi a specif posit in the final order. pair bet allow trader bet on whether on given  candid rank higher than anoth given candid. we examin the auction problem of match order without incur risk. we find that in a subset bet  market an auction can find the optim set and quantiti of order to accept such that hi worst-case profit is maxim in polynomi time if order ar divis. the complex chang dramat for pair bet. we prove that the optim match problem for the auction is np-hard for pair bet with both indivis and divis order via reduct to the minimum feedback arc set problem. we identifi a suffici condit for the exist of a match, which can be verifi in polynomi time. a natur greedi algorithm ha been shown to give poor approxim for indivis pair bet. interest open question for our permut bet  includ the comput complex of optim indivis match for subset bet and the necessari condit for the exist of a match in pair bet market. we ar interest in further explor better approxim  algorithm for pair bet market. 7. acknowledg we thank ravi kumar, yishai mansour, amin saberi, andrew tomkin, john tomlin, and member of yahoo!  research for valuabl insight and discuss. 8. refer [1] k. j. arrow. the role of secur in the optim alloc of risk-bear. review of econom studi, 31(2):91-96, 1964. [2] j. e. berg, r. forsyth, f. d. nelson, and t. a. rietz. result from a dozen year of elect futur market research. in c. a. plott and v. smith, editor, handbook of experiment econom result (forthcom). 2001. [3] t. h. cormen, c. e. leiserson, r. l. rivest, and c. stein. introduct to algorithm (second edit). mit press and mcgraw-hill, 2001. [4] p. cramton, y. shoham, and r. steinberg. combinatori auction. mit press, cambridg, ma, 2005. [5] r. forsyth, t. a. rietz, and t. w. ross. wish, expect, and action: a survei on price format in elect stock market. journal of econom behavior and organ, 39:83-110, 1999. [6] l. fortnow, j. kilian, d. m. pennock, and m. p. wellman. bet boolean-style: a framework for trade in secur base on logic formula. decis support system, 39(1):87-104, 2004. [7] m. gr¨otschel, l. lov´asz, and a. schrijver. the ellipsoid method and it consequ in combinatori optim. combinatorica, 1(2):169-197, 1981. [8] m. gr¨otschel, l. lov´asz, and a. schrijver. geometr algorithm and combinatori optim. springer-verlag, berlin heidelberg, 1993. [9] r. d. hanson. combinatori inform market design. inform system frontier, 5(1):107-119, 2003. [10] r. m. karp. reduc among combinatori problem. in complex of comput comput (proc. sympo., ibm thoma j. watson re. center, yorktown height, n.y.), page 85-103. plenum, new york, 1972. [11] m. krivelevich, z. nutov, and r. yuster. approxim algorithm for cycl pack problem. proceed of the sixteenth annual acm-siam symposium on discret algorithm, page 556-561, 2005. [12] h. w. kuhn. the hungarian method for the assign problem. naval research logist quarterli, 2:83-97, 1955. [13] j. munkr. algorithm for the assign and transport problem. journal of the societi of industri and appli mathemat, 5(1):32-38, 1957. [14] n. nisan. bid and alloc in combinatori auction. in proceed of the 2nd acm confer on electron commerc (ec"00), minneapoli, mn, 2000. [15] d. m. pennock, s. lawrenc, c. l. gile, and f. a. nielsen. the real power of artifici market. scienc, 291:987-988, februari 2002. [16] c. plott and s. sunder. effici of experiment secur market with insid inform: an applic of ration expect model. journal of polit economi, 90:663-98, 1982. [17] c. plott and s. sunder. ration expect and the aggreg of divers inform in laboratori secur market. econometrica, 56:1085-1118, 1988. [18] t. sandholm. algorithm for optim winner determin in combinatori auction. artifici intellig, 135:1-54, 2002. [19] r. yuster and z. nutov. pack direct cycl effici. proceed of the 29th intern symposium on mathemat foundat of comput scienc (mfc), 2004. 335 