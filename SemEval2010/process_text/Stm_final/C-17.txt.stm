deploy issu of a voip conferenc system in a virtual conferenc environ r. venkatesha prasad i richard hurni ii h.s. jamadagni iii h.n. shankar iv i, iii centr for electron design and technolog indian institut of scienc, bangalor, india telephon: +91 80 360 0810 i, iii {vprasad, hsjam}@cedt.iisc.ernet.in ii hurni@ieee.org iv hn_shankar@yahoo.com abstract real-time servic have been support by and larg on  circuitswitch network. recent trend favour servic port on packet-switch network. for audio conferenc, we need to consid mani issu - scalabl, qualiti of the confer applic, floor control and load on the client/server - to name a few. in thi paper, we describ an audio servic framework design to provid a virtual conferenc environ (vce). the system is design to accommod a larg number of end user speak at the same time and spread across the internet. the framework is base on confer server [14], which facilit the audio handl, while we exploit the sip capabl for signal purpos. client select is base on a recent quantifi call "loud number" that help mimic a physic face-to-face confer. we deal with deploy issu of the propos solut both in term of scalabl and interact, while explain the techniqu we us to reduc the traffic. we have implement a confer server (cs) applic on a campu-wide network at our institut. categori and subject descriptor c.2.4 [comput-commun network]: distribut system - client / server, distribut applic. gener term algorithm, perform, design, theori. 1. introduct todai's internet us the ip protocol suit that wa primarili design for the transport of data and provid best effort data deliveri. delai-constraint and characterist separ tradit data on the on hand from voic & video applic on the other. henc, as progress time-sensit voic and video applic ar deploi on the internet, the inadequaci of the internet is expos. further, we seek to port telephon servic on the internet. among them, virtual confer (teleconfer) facil is at the cut edg. audio and video conferenc on internet ar popular [25] for the sever advantag thei inher [3,6]. clearli, the bandwidth requir for a teleconfer over the internet increas rapidli with the number of particip; reduc bandwidth without compromis audio qualiti is a challeng in internet telephoni. addit critic issu ar: (a) packet delai, (b) echo, (c) mix of audio from select client, (d) automat select of client to particip in the confer, (e) playout of mix audio for everi client, (f) handl client not capabl of mix audio stream (such client ar known as dumb client), and (g) decid the number of simultan activ client in the confer without compromis voic qualiti. while all the abov requir ar from the technolog point of view, the user's perspect and interact ar also essenti factor. there is plenti of discuss amongst hci and cscw commun on the us of ethnomethodolog for design of cscw applic. the basic approach is to provid larger bandwidth, more facil and more advanc control mechan, look forward to better qualiti of interact. thi approach ignor the function util of the environ that is us for collabor. eckehard doerri [4] critic thi approach by sai "it is keep form befor function". thu, the need is to take an approach that consid both aspect - the technic and the function. regard the function aspect, we refer to [15] where it ha been dealt with in some detail. in thi work, we do not discuss video conferenc; it inclus doe not significantli benefit confer qualiti [4]. our focu is on virtual audio environ. we first outlin the challeng encount in virtual audio confer. then we look into the motiv follow by relev literatur. in section 5, we explain the architectur of our system. section 6 compris descript of the variou algorithm us in our setup. we address deploy issu. a discuss on swiss feder institut of technolog, lausann. former visitor at cedt. pesit and nia, bangalor, india.iv ii perform follow. we conclud take alongsid some implement issu. 2. challeng in voip conferenc mani challeng aris in build a voip applic. the follow ar of particular concern in the process: • eas of us: conferenc must be simpl; user need no domain expertis. manag (addit/remov) of client and server must be uncompl. applic develop should not presuppos specif characterist of the underli system or of network layer. eas of us mai includ leverag readili avail, technic feasibl and econom viabl technolog. • scalabl: conferenc must seem uninterrupt under heavi load, i.e., when mani addit user ar ad on. traffic on wan should not grow appreci with the total number of client; els, thi ha lead to congest. so a mean to regul traffic to a minimum is need for thi kind of real-time applic. • interact: in virtual conferenc environ (vce), we intend a face-to-face-like conferenc applic that mimic a "real" confer, where more vocal particip invit attent. turn-take in floor occup by particip must be adapt gracefulli to give a feel of natur transit. • standard: the solut must conform to establish standard so as to gain interoper and peer accept. the abov requir ar place in the perspect of observ made in earlier work (vide section 3 and 4) and will steer the vce design. 3. the motiv ramanathan and rangan [20] have studi in detail the architectur configur compar mani conferenc architectur scheme take into consider the network delai and comput requir for mix. function divis and object-orient architectur design that aid in implement is present in [1]. an overview of mani issu involv in support a larg confer is dealt in [8]. h. p. dommel [5] and mani other highlight floor control as anoth pivot aspect to be taken into account in design a conferenc tool. tightli coupl confer control protocol in internet belong to the itu-t h.323 famili [9]; howev, thei ar mainli for small confer. the latest ietf draft by rosenberg and schulzrinn [23] discuss conferenc model with sip [22] in the background. aspect of implement for central sip conferenc ar report in [26]. a new approach call partial mix by radenkov [18] allow for mix and non-mix stream to coexist. in all the abov propos, while there ar some veri us suggest, thei share on or more of the follow limit: • in an audio confer, stream from all the client need not be mix. actual, mix mani arbitrari stream [24] from client degrad the qualiti of the confer due to the reduct in the volum (spatial aspect of speech). the number of stream mix vari dynam depend on the number of activ particip. thi would lead to fluctuat in the volum of everi individu particip caus sever degrad in qualiti. custom mix of stream is not possibl when mani client ar activ. there is a threshold on the number of simultan speaker abov which increas the number of speaker becom counterproduct to confer qualiti. fix the maximum number of simultan speaker is dealt in a recent work [15] us ethnomethodolog, and is conjectur to be three. thu it is advis to honour that constraint. • there cannot be mani intermedi mixer (similarli, confer server as in [10]) in stage as in [20] becaus it bring in inordin delai by increas the number of hop and is not scalabl with interact in focu. • floor control for an audio confer (even video confer) with explicit turn-take instruct to particip render the confer essenti a  on-speakerat-a-time affair, not a live and free-to-interrupt on. thi wai, the confer becom markedli artifici and it qualiti degrad. schulzrinn et al. [24], assum onli on particip is speak at a time. in thi case, if applic ar implement with some control [5], the servic becom ‘gag" for the user. • partial mix [18] ha a similar problem as that of mix when more stream ar mix. moreov, in [18], to allow impromptu speech, mix is not done when the network can afford high bandwidth requir for send/receiv all the stream, but it is unnecessari [15]. • for larg confer [23, 10] a central confer cannot scale up. with multicast, client will have to pars mani stream and traffic on a client"s network increas unnecessarili. evid, differ particular issu, all of which ar a subset of requir (defin in [14] and [16]) for a voip conferenc support, ar tackl. thu there is a need to address conferenc as a whole with all it requir consid concurr. toward thi goal, the voip conferenc system we propos is intend to be scalabl and interact. we make us of the "loud number" for implement floor control. thi permit a particip to freeli get into the speak mode to interrupt the current speaker as in a natur face-to-face meet. an upper limit on the number of floor (i.e., the number of speaker allow to speak at the same time) is fix us a conjectur propos in [15]. the work present here is in continu of our studi into conferenc base on the session initi protocol in [14] and [16]. sip, defin in [22] is now the most popular standard for voip deploy and ha been chosen for it strength, eas of us, extens and compat. thi is the reason it will be in the background of all control messag that will implicitli aris between the entiti in our architectur. the actual messag ar describ in [16] and, as such, we do not present a complet descript of them here. 4. relat work the sip standard defin in rfc 3261 [22] and in later extens such as [21] doe not offer confer control servic such as floor control or vote and doe not prescrib how a confer is to be manag. howev sip can be us to initi a session that us some other confer control protocol. the core sip specif support mani model for conferenc [26, 23]. in the server-base model, a server mix media stream, wherea in a server-less confer, mix is done at the end system. sdp [7] can be us to defin media capabl and provid other inform about the confer. we shall now consid a few confer model in sip that have been propos recent [23]. first, let us look into server-less model. in end-system mix, onli on client (sip ua) handl the signal and media mix for all the other, which is clearli not scalabl and caus problem when that particular client leav the confer. in the user join model, a tree grow, as each invit parti constitut a new branch in the distribut path. thi lead to an increas number of hop for the remot leav and is not scalabl. anoth option would be to us multicast for conferenc but multicast is not enabl over internet and onli possibl on a lan present. among server-base model, in a dial-in confer, ua connect to a central server that handl all the mix. thi model is not scalabl as it is limit by the process power of the server and bandwidth of the network.  adhoc central confer and dial-out confer server have similar mechan and problem. hybrid model involv central signal and distribut media, with the latter us unicast or multicast, rais scalabl problem as befor. howev an advantag is that the confer control can be a third parti solut. distribut partial mix, present in [18], propos that in case of bandwidth limit, some stream ar mix and some ar not, leav interact intact. loss of spatial when thei mix and the bandwidth increas when thei do not ar open problem. a relat studi [19] by the same author propos conferenc architectur for collabor virtual environ (cve) but doe not provid the scalabl angl without the avail of multicast. with the limit of propos conferenc system in mind, we will now detail our propos. 5. system architectur thi section is dedic to the descript of the propos system architectur. howev, as thi paper constitut the continu of our work start in [14] and further in [16], we will not present here all the detail about the propos entiti and invit the reader to consult the paper mention abov for a full and thorough descript. first, we do not restrict our conferenc system to work on small confer onli, but rather on larg audio vce that have hundr (or even thousand) of user across a wide area network (wan) such as the internet. thi view stem from an apprais that vce will gain in import in the futur, as interact audio confer will be more popular becaus of the spread of the media cultur around the world. two issu must be taken care of when build a voip conferenc system: (i) the front-end, consist of the applic program run on the end-user" comput and (ii) the back-end that provid other applic program that facilit conferenc and confer. the particip user ar group into sever domain. these domain ar local area network (lan), such as corpor or educ network. thi distribut assumpt ask for distribut control and media handl solut, as central system would not scale for such veri larg confer (vide section 4). more explicitli, in each domain, we can identifi sever relev logic compon of a conferenc facil (fig. 1):  an arbitrari number of end user (client) that can take part in at most on audio confer at a time. everi user is fig. 1. confer exampl - 3 domain contain the necessari entiti so that the confer can take place. includ in on and onli on domain at a given instant, but can move from domain to domain (nomad). in our conferenc environ, these client ar regular sip user agent (sip ua), as defin in [22] so to gain in interoper with other exist sip-compat system. these client ar thu not awar of the complex set that support the confer and thi is highlight below.  on sip server (sip) per domain, take care of all the signal aspect of the confer (client join, leav, etc.) [16]. in particular, it is consid as a physic implement encompass differ logic role, name a sip proxi server, a sip registrar server, a sip redirect server and a sip b2bua (back-to-back user agent) [22]. thi physic implement enabl the handl of incom/outgo sip messag by on or anoth logic entiti accord to the need. sip is entrust with maintain total servic and ha mani advantag such as (a) it work as a central entiti that can keep track of the activ of the ua in a confer; (b) it can do all the switch for provid pbx featur; (c) it can locat the ua and invit them for a confer; (d) it can do the bill as well. sipss in differ domain commun with each other us sip messag as describ in [16]. if the load on a particular sip is too heavi, it can creat anoth sip in the same domain so that the load will be share.  on master confer server (m-cs) (simpli a confer server (cs)) for each confer is creat by the local sip when a confer start. thi server will be us for handl media packet for the client of the domain. it mechan will be describ in the next section. the m-cs will be abl to creat a hierarchi of css insid a domain by ad on or more slave css (s-css) to accommod all the activ client and prevent it own flood at the same time. we will see thi mechan in some detail in the sequel. the entiti describ here ar exhaust and conform to the sip philosophi. thu, the us of sip make thi architectur more us and interoper with ani other sip client or server. 6. algorithm issu 6.1 select the stream similar to sipconf in [27], a confer server (cs) [17] ha the function of support the confer; it is respons for handl audio stream us rtp. it can also doubl to convert audio stream format for a given client if necessari and can work as translat/mixer of rtp specif behind firewal. we have base the design of our cs on h.323 multipoint processor (mp) [9]. in short, the mp receiv audio stream from the endpoint involv in a central or hybrid multipoint confer, process them and return them to the endpoint. an mp that process audio prepar nmax audio output from m input stream after select, mix, or both. audio mix requir decod the input audio to linear signal (pcm or analog), perform a linear combin of the signal and  reencod the result in an appropri audio format. the mp mai elimin or attenu some of the input signal in order to reduc nois and unwant compon. fig. 2. schemat diagram of a cs the limit of h.323 is that it doe not address the scalabl of a confer. the architectur propos a cascad or daisi chain topolog [10], which can be shown that it cannot scale up for a larg confer. a cs serv mani client in the same confer. thu it handl onli on confer at a time. multipl css mai coexist in a domain, as when there ar sever confer under wai. signal-relat messag of css ar dealt in [11]. the work of a cs is illustr on fig. 2: for each mix interv, cs 1 choos the best nmax audio packet out of the m1 (us a criterion term "loud number, describ in the next subsect). it mai possibl receiv and send these to css 2 to p. the set of packet sent is denot as toothercss. in the same mix interv, it also receiv the best nmax audio packet (out of possibl m2) from cs 2, similarli the best nmax (out of possibl mp) from cs p. for simplic, we ignor propag delai between css which inde can be taken into account; it is beyond the scope of thi present. the set of packet receiv is denot as fromothercss. final, it select the best nmax packet from the set {toothercss union fromothercss} and pass these packet to it own group. it can be seen that the set {toothercss union fromothercss} is the same at all css. thi ensur that ani client in the confer final receiv the same set of packet for mix. henc all client obtain a common view of the confer. similarli, for each time slot (packet time), a subset, f of all client is select (us the same criterion) from the pool of packet from all other css plu the nmax client select local. their packet ar mix and plai out at the client. accord to [15], the cardin of f, |f| is nmax and is fix at three. in our conferenc setup, select is by the master confer server (m-cs), which come into the pictur exclus for media handl. note that even if the sip specif enabl direct ua-to-ua media commun in a on-to-on call, it is also possibl to us the confer server for two-parti call, especi becaus it is then more function to creat a real confer by ad a third and subsequ more particip(s). there ar case wherein the process capac of an m-cs is exceed as it mai have too mani packet - from local domain and from remot domain - to process. in that case, the m-cs will creat on or mani s-cs (fig. 6) and transfer it own client as well as the new client to them. in thi configur, the algorithm outlin abov will be slightli modifi, as the audio packet will go from client to their dedic s-cs that will select nmax packet to send to the local m-cs, which will then select nmax packet from all it s-css in the domain befor send them to the remot domain. the incom packet from other domain will be receiv by the m-cs, select nmax of them and send them directli to the domain client, bypass the  scss. thi chang impli that at most three intermedi entiti exist for each audio packet, instead of two in the convent setup. as the extra hop happen insid the lan suppos to have a high-speed connect, we consid that it should not prevent us from us thi hierarchi of css when there"s a need to do so. 6.2 loud number (ln) a basic question to be answer by the cs is the follow. in a mix interv, how should it choos nmax packet out of the m it might possibl receiv? on wai is to rank the m packet receiv accord to their energi, and choos the top nmax. howev, thi is usual found to be inadequ becaus random fluctuat in packet energi can lead to poor audio qualiti. thi indic the need for a metric differ from mere individu packet energi. the metric should have the follow characterist [12]: • a speaker (floor occup) should not be cut off by a spike in the packet energi of anoth speaker. thi impli that a speaker"s speech histori should be given some weight. thi is often refer to as persist or hangov. • a particip who want to interrupt a speaker will have to (i) speak loudli and (ii) keep try for a littl while. in a face-to-face confer, bodi languag often indic the intent to interrupt. but in a blind confer under discuss, a particip"s intent to interrupt can be convei effect through ln. a floor control mechan empow to cut off a speaker forcefulli must be ensur. these requir ar met by loud number [12], which chang smoothli with time so that the select (addit and delet) of client for confer is grace. ln (= ) is a function of the amplitud of the current audio stream plu the activ and amplitud over a specif window in the past. fig. 3. the differ window us for ln comput the loud number is updat on a packet-by-packet basi. the basic paramet us here is packet amplitud, which is calcul as root mean squar (rm) of the energi in audio sampl of a packet, and denot by xk. three window ar defin as shown in fig. 3. the present amplitud level of the speaker is found by calcul the move averag of packet amplitud (xk) within a window call recent past window start from the present instant to some past time. the past activ of the speaker is found by calcul the move averag of the packet amplitud (xk) within a window call distant past window, which start at the point where the recent past window end and stretch back in the past for a pre-defin interv. the activ of the speaker in the past is found with a window call activ horizon, which span the recent past window as well as the distant past window and beyond if necessari. though the contribut of the activ horizon look similar to the contribut of the recent past and distant past window, past activ is comput from activ horizon window in a differ. defin the quantiti dure these three interv as l1, l2 and l3. l1 quantifi the recent past speech activ, l2 the distant past speech activ and l3 give a number correspond to the speech activ in the activ horizon window quantifi how activ the speaker wa in the past few interv. l3 yield a quantiti that is proport to the fraction of packet have energi abov a pre-defin threshold (eq. 3). the threshold is invari across client. ∑ +− = = 1 1 1 rpp p wt tk k rp x w l (1) ∑ +−− −= = 1 2 1 dprpp rpp wwt wtk k dp x w l (2) ∑ +− = ≥= 1 }{3 * 1 ahp p k wt tk x ah i w l θθ (3) where ifi kx 1}{ =≥θ θ≥kx = otherwis,0 the threshold is a constant. is set at 10-20 percent of the amplitud of the voic sampl of a packet in our implement here. loud number λ for the present time instant (or the present packet) is calcul as, 332211 *l*l*l αααλ ++= (4) here 1 2 dqg 3 ar chosen such that: 0< 1 2  1 2 dqg 3=1- 1 2) here, 1 is the weight given to the recent past speech, 2 is the weight given to distant past speech and 3 is the weight given to speech activ in the activ horizon window consid. 6.3 safeti, live and fair the λ paramet kdv vrph phpru\ ghshqglqj rq wkh vsuhdg ri the window. after on confere becom silent, anoth can take the floor. also, as there is more than on channel, interrupt is enabl. a loud confere is more like to be heard becaus of elev λ. thi ensur fair to all confere. after all, even in a face-to-face confer, a more vocal speaker grab special attent. all these desir characterist ar embed into the ln. a comprehens discuss on select of the variou paramet and the dynam of ln ar beyond the scope of thi paper. 6.4 select algorithm us the ln follow the develop in subsect 6.1 and 6.2, we present the simpl algorithm that run at each master-confer server (algorithm. 1). thi algorithm is base on the discuss in section 6.1. the global uniqu set f is found us thi procedur. repeat for each time slot at each m-cs { 1. get all the packet from the client that belong to it. 2. find at most nmax client that have pd[lpxp rxw ri 0 &olhqwv lq lwv grpdlq 3. store a copi of packet from those nmax client in databas db1. 4. send these nmax packet to other m-css (on unicast or multicast, depend on the configur). 5. similarli, receiv packet from all other m-css and store them in databas db2. 6. now compar the packet in db1 and db2 on wkh edvlv ri dqg vhohfw d pd[lpxp ri nmax amongst them (to form set f) that should be plai out at each client. 7. send the nmax packet in set f to the client in it domain. 8. mix these nmax audio packet in set f after linearis and send it to dumb client in the domain. } algorithm 1. select algorithm the mechan propos here is also depict on fig. 6, where a singl confer take place between three domain. the shade client ar the on select in their local domain; their audio stream will be sent to other css. 7. deploy issu we now analyz deploy issu associ with confer manag. how ar domain to be organ to maxim the number of particip abl to join? to address thi, we defin some us paramet.  let d be the number of differ domain in which there ar activ client in a given confer.  let mi be the number of activ client present in domain i ( di ≤≤1 ) in a given confer. the total number of activ client in the confer is thu ∑= = d i imm 1 .  let c be the maximum number of audio stream a confer server can handl in a packet time, also call capac. c is set accord to the process power of the weakest cs in the confer but as it cannot be assum that we know it a-priori, it can be set accord to some minimum system requir a machin must meet in order to take part in a confer.  let nmax be the number of output stream a cs ha to send to other css in remot domain (see section 6.1). we will set nmax =3 (=|f|), accord to [15]. the optim problem is now to find the valu of d that maxim the total number of client mi serv by on cs in a domain with capac c. we first dispos the case where the capac is not exceed (the exist cs is not overload), and then proce to the case where there exist a need to creat more css when a singl cs is overload. we assum that client ar equal distribut amongst the domain, as we mai not have inform to assum an a-priori distribut of the client. we can specifi no more than an upper bound on the number of client accept, given the number of activ domain d. 7.1 conferenc with onli on level of css in thi subsect, we consid that we have onli on cs, i.e., a uniqu m-cs in each domain. thu it cannot be overload. we consid that the system work as outlin in section 6.1: the client send their audio packet to their local cs, which select nmax stream, befor send them to other css. in parallel, it also receiv nmax stream for everi other css befor take a decis on which nmax stream will be select, sent and plai out at each individu client. for system stabil, ani cs in the confer should be abl to handl it local client in addit to the audio packet from other domain. clearli then, the follow inequ must hold for everi domain: )1( −⋅+≥ dn d m c max (5) the limit case of (5) (take the equal) take the form 2 )( dndncm maxmax ⋅−⋅+= (6) to optim d with respect to m, we set 0)(2 =+−⋅⋅= ∂ ∂ maxmax ncdn d m (7) yield     ⋅ + = max max n nc d 2 (8) ([ ]* = round to nearest integ) and henc, m from (6). c d m 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 tabl 1. valu of d and m comput for some valu of c with nmax = 3. in tabl 1, we give the valu of d and m that were comput us (8) and (6) with nmax = 3. we see that the valu of d and m, be depend of c, ar therefor base on the weakest cs. we see that there is a trade-off between m and d. we could admit more domain in the confer, but at the expens of restrict the total number of client m in the confer. while implement and test the confer server on a pentium iii 1.4 ghz run window nt, we were abl to set c=300. but with the advent of faster comput (> 3 ghz), on can easili set c to higher valu and determin d and m accordingli. fig. 4 show a contour plot and fig. 5, a 3d-mesh show optim solut for css of differ capac. these lead us to maxim the number of domain, and henc, to maxim the total number of client base on the capac of variou css. in fig. 4, the individu curv repres the total number of client target, and we select a lower valu of d, for capac c, for target m to reduc traffic on wan. fig. 5 repres a differ perspect of the same data in 3d. fig. 4. contour plot of capac versu optimum number of domain for variou confer size 7.2 conferenc with two level of css now consid the case where the number of client in a particular domain is too larg, i.e., d m mi ≥ (9) on ha to avoid the denial of servic for new client due to overload of confer server. thi problem can be solv by introduc a second level of css insid the given domain, as in fig. 6. the exist m-cs creat a slave cs (s-cs) that can handl up to c end-user and to which it transfer all it activ client. here, the system work differ as outlin in section 6.1: the client send their audio packet to their local s-cs, which select nmax stream, befor send them to a local m-cs, which will proce in the same wai, befor send nmax stream to the other domain. each newli creat s-cs must run on a separ machin. the m-cs ha to creat more s-css if the number of activ client exce c in the cours of the confer after the transfer. with thi mechan, the m-cs will be abl to creat utmost     −⋅− = max max n dnc u )1( s-css, (10) as it must handl 3 (= nmax) packet for each local s-css and 3 (= nmax) packet from each other remot domain. we can then calcul the maximum theoret number of activ client cumi ⋅= in each domain as well as m, for the whole confer as cudm ⋅⋅= . fig. 5. 3d plot of capac versu optimum number of domain for variou confer size of cours, on could further creat a third level in the hierarchi, give the possibl of accommod even more client. thi mai be unnecessari as the number of possibl client is larg enough with two level. 8. perform discuss we now analyz the perform of the algorithm present in subsect 6.3, i.e., the on take care of the exchang of audio packet between the differ domain. note that the packet that ar transit within the lan take advantag of the higher capac (gener coupl with multicast capabl) and therefor do not requir a perform analysi. thu we have to look onli at the rtp packet over the wan, i.e., between particip m-css. as each m-cs from a domain will be send onli nmax out of d m packet to the other css ( maxn d m >> ), the bandwidth us by the applic over a wan is upper-bound by the follow express. the total number of audio packet transit over the wan for each time slot is ∑ ∑= ≠=        d i d ijj maxn 1 ,1 which is quadrat in the number of domain (i.e., o(d2 )). howev, it is independ of the total number of activ client. thi would not have been the case had all packet been sent over the network in each time slot. the save is tremend. yet, on mai contend that send three packet to and from all domain is a wast of resourc, as most of these stream will not be select. if just on client is activ, select a subset of client in that domain is unnecessari. pessimist and optimist algorithm as present in the sequel aim at reduc the traffic further by har the slow vari natur of the ln. 8.1 pessimist algorithm consid a scenario wherein the lowest ln (call lnt) of the three global select stream (set f of section 6.1) exce the ln of the most domin stream of a domain. evid, the chanc that the next two domin stream of that domain be select to f in the next packet period ar less. here, we send thi most domin stream and withhold the other two. there mai be an error in uniqu select across all domain for on packet period onli. as ln vari slowli, the error would get automat rectifi in a subsequ packet period (slot). in thi algorithm, there is at least on stream in each period. the net network traffic in a packet period in the best case is )1( −⋅ dd , i.e., )( 2 do us unicast, instead of maxndd ⋅−⋅ )1( . consider valuabl bandwidth can be save us thi heurist. the result traffic complex reduc from o(d2 ) to o(d) in multicast-enabl network. initi lnt = 0 at an m-cs/s-cs a. in the first time slot (packet time), each cs send the top nmax stream (base on their ln) to all other css. at each m-cs/s-cs and for each packet time: b. find the valu of lowest ln of the nmax global select stream (set f) from the previou time slot. set lnt with thi valu. c. at each cs domain, select the nmax local stream that have maximum valu of ln (toothercss set). d. select stream that have ln > lnt. if there ar >= nmax stream with ln > lnt then send top nmax to other css. els if there ar (nmax-1) stream with ln>lnt then send top (nmax-1) plu the on lower than lnt (i.e., top nmax) to other css. els if there ar (nmax-2) stream with ln>lnt then send top (nmax-2) plu the on lower than lnt (i.e. top (nmax -1)) to other css. …… els if there ar no stream with ln> lnt then send top 1 stream to other css. e. packet sent in step d form db1. packet receiv from other css form db2. f. for thi time slot, find global nmax stream base on ln from db1 u db2 (set f) g. send set f to the client in it domain. updat lnt for the next period. algorithm 2. pessimist algorithm to reduc the number of packet sent over the internet. fig. 6. exampl of a 2-level hierarchi of confer server; the shade client ar the on select by the m-cs and will be sent to other domain" css. in thi algorithm the save in traffic is at the cost of relax the condit of format of global uniqu set f. howev, the discrep in select stream at differ domain remain for a short period of time depend on the transport delai between ani two domain. even for a total delai of 400ms, for onli 10 packet time slot the uniqu is lost. thi durat in a real-time interact convers is non-perceiv by the listen. in the case that there is a joke and everi on laugh, then there would be sudden rise in the number of packet and it would be upper bound by maxn)d(o 2 for a short period. 8.2 optimist algorithm the traffic can be reduc further. the scheme in the follow algorithm (algorithm. 3) is withhold all the stream that have less valu of ln compar to the least of the three in the set f. we can find the correct and uniqu three stream after a few time slot depend on the transport delai between the domain. as the packet period is of the order of 40ms, the error in the select is unnotic. the number of stream on network in thi case is alwai restrict to nmax (=3). even without voic activ detect (vad), there will be no more than three stream in the network in the best case, thu the total traffic is constant. a sudden burst of traffic, as describ in 8.1, is a particular case. these advantag ar due to exploit of the characterist of ln. initi lnt = 0 at an m-cs/s-cs a. in the first time slot (packet time), each cs send the top nmax stream (base on their ln) to all other css. at each m-cs/s-cs and for each packet time: b. find the valu of lowest ln of the nmax global select stream (set f) from the previou time slot. set lnt with thi valu. c. at each cs domain, select the nmax local stream that have maximum valu of ln (toothercss set) d. select stream that have ln > lnt if there ar >= nmax stream with ln > lnt then send top nmax to other css. els if there ar (nmax-1) stream with ln>lnt then send top (nmax-1) and see e. els if there ar (nmax-2) stream with ln>lnt then send top (nmax-2) and see e. …… els if there ar no stream with ln> lnt then don"t send ani stream. e. except: if the stream that wa in f in the last interv belong to thi cs then select and send that stream even if it ln is now < lnt. (note thi occur onli at that cs which had the stream that wa the last of the three in the previou packet period.) f. packet sent in step d and e form db1. packet receiv from other css form db2. g. for thi time slot, find global nmax stream base on ln from db1 u db2 (set f). h. send set f to the client in it domain. updat lnt for the next period. algorithm 3. optimist algorithm to reduc the number of packet sent over the internet furthermor, when vad is us [13], it would further reduc the traffic by send the header part of the rtp packet onli and not the whole packet, thu in order to keep updat the ln across. the traffic here in thi case is o(nmax) for multicast and o(d) for unicast. we see that the abov algorithm save bandwidth and comput at each cs, and lead to a scalabl architectur with multipl css mainli becaus client ar group in domain. the necessari bandwidth is not depend on the total number of activ client. as the cs alwai choos the best three client out of all the client assign to it in the domain, addit of new client to the exist confer will not caus ani scalabl problem. 8.3 avail of multicast in the architectur that ha been propos, no assumpt wa made about the avail of multicast support from the network. the traffic will be further reduc if multicast is avail over wan. it is simpl to show that the order of traffic would tend to becom o(d) from o(d2 ). thi is an approxim as save in multicast depend also on the topolog. the analysi wa done for the case wherein multicast is not avail (a realist assumpt in todai"s internet). the advantag of thi set up is that we can us it even if multicast is partial avail. we can instruct css dure the set-up phase to send unicast packet to those css that cannot receiv multicast packet wherea css on multicast enabl router can exchang packet on a multicast address. the data structur and confer object insid a cs is given in [14]. fig. 7. user interfac for set the weight for nmax audio stream (set self-bar to zero avoid echo). 8.4 qualiti improv the observ improv in the perceiv qualiti of the confer servic is due to: (1) limit the number of concurr speaker to a low number such as three. gener, in a confer if more than two particip speak the intellig is lost. the convers analysi demonstr that there would be a repair mechan [15] in such a case. (2) delai: the audio stream between ani two client will pass through at most two css thu reduc the end-to-end delai. for a larg confer there might be three css howev, on hop is within the domain incur neglig delai. (3) as the stream ar mix onli at the client, there can be a custom mix of the stream. the individu tune of mix with weight the spatial is preserv. fig. 7 show the user interfac for the same. the echo when self-stream is select can be avoid by reduc the weight. nonetheless, feedback help in reassur speaker that he/she is heard by all. 9. conclus in thi paper, we have present a discuss on a voic-onli virtual conferenc environ. we have argu that the distribut natur of deploy here make it scalabl. interact is achiev by adapt a recent stream select scheme base on loud number. addition, we incorpor a result from a more recent work [15] where the suffici of three simultan speaker ha been demonstr. thu, there is significantli effect util of bandwidth. a mix stream is plai out at each client; each client mai choos to have a custom mix sinc mix is done at the local termin of each client. these render impromptu speech in a virtual teleconfer over voip a realiti, as in a real face-to-face confer. compat is assur thank to the us of sip, the most  soughtaft signal protocol. to ensur a satisfi perform, we do not demand the avail of multicast, but us it if and when avail. the traffic in the wan (internet) is upper-bound by the squar of the number of domain, -- further reduc by us heurist algorithm -- which is far below the total number of client in the confer. thi is due to the us of a confer server local to each domain. vad techniqu help further traffic reduct. us sip standard for signal make thi solut highli interoper. we have implement a cs applic on a campu-wide network. we believ thi new gener of virtual conferenc environ will gain more popular in the futur as their eas of deploy is assur thank to readili avail technolog and scalabl framework. 10. refer [1] l aguilar et al., architectur for a multimedia teleconferenc system, in proceed of the acm sigcomm, aug 1986, pp. 126-136. [2] carsten bormann, joerg ott et al., simpl confer control protocol, internet draft, dec. 1996. [3] m. decina and v. trecordi, "voic over internet protocol and human assist e-commerc", ieee comm. magazin, sept. 1999, pp. 64-67. [4] eckehard doerri, "an empir comparison of copres and technolog-mediat interact base on commun breakdown", phd thesi, graduat school of the univers of oregon, 1995. [5] h. p. dommel and j.j. garcia-luna-acev, "floor control for multimedia conferenc and collabor", j. multimedia system, vol. 5, no. 1, januari 1997, pp. 23-38. [6] amitava dutta-roi, "virtual meet with desktop conferenc", ieee spectrum, juli 1998, pp. 47-56. [7] m. handlei and v. jacobson, "sdp: session descript protocol", rfc 2327, ietf, april 1998. [8] m. handlei, j. crowcroft et al., "veri larg confer on the internet: the internet multimedia conferenc architectur", journal of comput network, vol. 31, no. 3, feb 1999, pp. 191-204. [9] itu-t rec. h.323, packet base multimedia commun system, vol. 2, 1998. [10] p. koskelainen, h. schulzrinn and x. wu, "a sip-base confer control framework", nossdav"02, mai 2002, pp. 53-61. [11] r venkatesha prasad et al., control protocol for voip audio conferenc support, intern confer on advanc commun technolog, mu-ju, south korea, feb 2001, pp. 419-424. [12] r venkatesha prasad et al., "automat addit and delet of client in voip conferenc", 6th ieee symposium on comput and commun, juli 2001, hammamet, tunisia, pp. 386-390. [13] r venkatesha prasad, h s jamadagni, abjijeet, et al comparison of voic activ detect algorithm, 7th ieee symposium on comput and commun. juli 2002, sicili, itali, pp. 530-535. [14] r. venkatesha prasad, richard hurni, h s jamadagni, a scalabl distribut voip conferenc us sip, proc. of the 8th ieee symposium on comput and commun, antalya, turkei, june 2003. [15] r venkatesha prasad, h s jamadagni and h n shankar, "on problem of specifi number of floor in a voic onli confer", to appear in ieee itr 2003. [16] r. venkatesha prasad, richard hurni, h s jamadagni, "a propos for distribut conferenc on sip us confer server", to appear in the proc. of mmn 2003, belfast, uk, septemb 2003. [17] r. venkatesha prasad, h.s. jamadagni, j. kuri, r.s. varcha, a distribut voip conferenc support us loud number, tech. rep. tr-cedt-te-03-01 [18] m. radenkov et al, "scaleabl and adapt audio servic for support collabor work and entertain over the internet", ssgrr 2002, l'aquila, itali, jan. 2002. [19] m. radenkov, c. greenhalgh, s. benford, deploy issu for multi-user audio support in cve, acm vrst 2002, nov. 2002, pp. 179-185. [20] sriniva ramanathan, p. venkata rangan, harrick m. vin, design commun architectur for interorganiz multimedia collabor, journal of organiz comput, 2 (3&4), pp.277-302, 1992. [21] a. b. roach, " session initi protocol (sip)-specif event notif", rfc 3265, ietf, june 2002. [22] j. rosenberg, h. schulzrinn et al., "sip: session initi protocol", rfc 3261, ietf, june 2002. [23] j. rosenberg, h. schulzrinn, model for multi parti conferenc in sip, internet draft, ietf, juli 2002. [24] h. schulzrinn et al., "rtp: a transport protocol for  realtim applic", rfc 1889, ietf, jan 1996. [25] lisa r. silverman, "come of ag: conferenc solut cut corpor cost", white paper, www.imcca.org/wpcomingofag.asp [26] kundan singh, gautam nair and hen schulzrinn, "central conferenc us sip", proceed of the 2nd ip-telephoni workshop (iptel), april 2001. [27] d. thaler, m. handlei and d. estrin, "the internet multicast address alloc architectur", rfc 2908, ietf, sept. 2000. 