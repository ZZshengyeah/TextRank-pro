resolv conflict and inconsist in norm-regul virtual organ wamberto vasconcelo dept. of comput scienc univers of aberdeen aberdeen ab24 3ue unit kingdom wvasconcelo@acm.org martin j. kollingbaum dept. of comput scienc univers of aberdeen aberdeen ab24 3ue unit kingdom mkoll@csd.abdn.ac.uk timothi j. norman dept. of comput scienc univers of aberdeen aberdeen ab24 3ue unit kingdom tnorman@csd.abdn.ac.uk abstract norm-govern virtual organ defin, govern and facilit coordin resourc share and problem solv in societi of agent. with an explicit account of norm, open in virtual  organ can be achiev: new compon, design by  variou parti, can be seamlessli accommod. we focu on  virtual organ realis as multi-agent system, in which human and softwar agent interact to achiev individu and global goal. howev, ani realist account of norm should address their  dynam natur: norm will chang as agent interact with each other and their environ. due to the chang natur of norm or due to norm stem from differ virtual organ, there will be situat when an action is simultan permit and  prohibit, that is, a conflict aris. likewis, there will be situat when an action is both oblig and prohibit, that is, an  inconsist aris. we introduc an approach, base on first-order  unif, to detect and resolv such conflict and inconsist. in our propos solut, we annot a norm with the set of  valu their variabl should not have in order to avoid a conflict or an inconsist with anoth norm. our approach neatli  accommod the domain-depend interrel among action and the indirect conflict/inconsist these mai caus. more  gener, we can captur a us notion of inter-agent (and inter-role) deleg of action and norm associ to them, and us it to address conflict/inconsist caus by action deleg. we illustr our approach with an e-scienc exampl in which agent support grid servic. categori and subject descriptor i.2.4 [artifici intellig]: applic and expert  systemslaw; i.2.11 [artifici intellig]: distribut artifici  intellig-multi-agent system gener term algorithm, theori 1. introduct virtual organ (vo) facilit coordin resourc  share and problem solv involv variou parti geograph remot [9]. vo defin and regul interact (thu facilit coordin) among softwar and/or human agent that  commun to achiev individu and global goal [16]. vo ar realis as multi-agent system and a most desir featur of such system is open wherebi new compon design by other parti ar seamlessli accommod. the us of norm, that is, prohibit, permiss and oblig, in the specif and oper of multi-agent system (mass) is a promis approach to achiev open [2, 4, 5, 6]. norm regul the observ behaviour of self-interest, heterogen softwar agent, design by  variou parti who mai not entir trust each other [3, 24].  howev, norm-regul vo mai experi problem when norm assign to their agent ar in conflict (i.e., an action is  simultan prohibit and permit) or inconsist (i.e., an action is simultan prohibit and oblig). we propos a mean to automat detect and solv conflict and inconsist in norm-regul vo. we make us of  firstord term unif [8] to find out if and how norm overlap in their influenc (i.e., the agent and valu of paramet in agent" action that norm mai affect). thi allow for a fine-grain  solut wherebi the influenc of conflict or inconsist norm is curtail for particular set of valu. for instanc, norm agent x is permit to send bid(ag1, 20) and agent ag2 is prohibit from do send bid(y, z) (where x, y, z ar variabl and ag1, ag2, 20 ar constant) ar in conflict becaus their agent, action and term (within the action) unifi. we solv the conflict by  annot norm with set of valu their variabl cannot have, thu curtail their influenc. in our exampl, the conflict is avoid if we requir that variabl y cannot be ag1 and that z cannot be 20. thi paper is organ as follow. in the next section we  provid a minimalist definit for norm-regul vo. in section 3 we formal defin norm conflict, and explain how thei ar  detect and resolv. in section 4 we describ how the machineri of the previou section can be adapt to detect and resolv norm inconsist. in section 5 we describ how our curtail norm ar us in norm-awar agent societi. in section 6 we explain how our machineri can be us to detect and solv indirect  conflict/inconsist, that is, those caus via relationship among action; we extend and adapt the machineri to accommod the deleg of norm. in section 7 we illustr our approach with an exampl of norm-regul softwar agent serv the grid. in section 8 we survei relat work and in section 9 we discuss our contribut and give direct for futur work. 644 978-81-904262-7-5 (rp) c 2007 ifaama 2. virtual organ virtual organ [17] allow variou parti to come togeth to share resourc and engag in problem solv. thi paradigm ha found strong applic in web-servic orchestr [14], e-scienc [16] and the grid [9]. vo, in their most gener  formul, can be seen as coordin artifact, allow softwar and human agent to engag in sophist form of interact. we formal repres our vo as finit-state machin in which the action of individu agent label the edg between discret state. thi provid us with a lowest common denomin: there ar much more sophist, conveni and express wai to repres interact among agent (e.g., auml [19] and  electron institut [20], to name a few), but for the sake of  generalis our approach, we shall assum ani higher-level formal can be map onto a finit-state machin (possibl with some loss of express). we show in figur 1 a simpl vo graphic repres as a finit-state machin1 . the label on the edg  con//?>=<89:;0 p(x)  q(y,z) //?>=<89:;1 s(a,b) //?>=<89:;/.-,()*+2 figur 1: sampl vo as a finit-state machin nect the state ar first-order atom formula, denot  gener as ϕ; thei stand for action perform by individu agent. we defin our virtual organ as follow: def. 1. a virtual organ i is the tripl s, s0, e, t where s = {s1, . . . , sn} is a finit and non-empti set of state, s0 ∈ s is the initi state, e is a finit set of edg (s, s , ϕ), s, s ∈ s connect s to s with a first-order atom formula ϕ as a label, and t ⊆ s is the set of termin state. notic that edg ar direct, so (s, t, ϕ) = (t, s, ϕ). the sampl vo of figur 1 is formal repres as i = {0, 1, 2}, 0, {(0, 0, p(x)), (0, 1, q(y, z)), (1, 2, s(a, b)}, {2} . we assum an  implicit existenti quantif on ani variabl in ϕ, so that, for instanc, s(a, b) stand for ∃a, b s(a, b). vo should allow for two kind of non-determin  correspond to choic autonom agent can make, viz., i) the on  aris when there is more than on edg leav a state; and ii) the on aris from variabl in the formula ϕ label an edg, for which the agent carri out the action instanti. these kind of non-determin ar desir as thei help defin gener and flexibl coordin mechan. anoth import concept we us is the role of agent in vo. role, as exploit in, for instanc, [18] and [20], help us  abstract from individu agent and defin a pattern of behaviour to which ani agent that adopt a role ought to conform. moreov, all agent with the same role ar guarante the same right, duti and opportun. we shall make us of two finit, non-empti set, agent = {ag1, . . . , agn} and role = {r1, . . . , rm},  repres, respect, the set of agent identifi and role label. we refer gener to first-order term, i.e., constant, variabl, and (nest) function as τ. 2.1 semant of vo the specif of a vo as a finit-state machin give rise to a possibl infinit set of histori of comput behaviour, in which the action label the path from the initi state to a final state ar record. although the action compris a vo ar carri out distributedli, we propos an explicit global account of all event. in practic, thi can be achiev if we requir individu 1 we adopt prolog"s convent [1] and us string start with a capit letter to repres variabl and string start with a small letter to repres constant. agent to declar/inform whatev action thei have carri out; thi assum trustworthi agent, natur2 . in order to record the authorship of the action, we annot the formula with the agent" uniqu identif. our explicit global account of all event is a set of ground atom formula ϕ, that is, we onli allow constant to appear as term of formula. each formula is a truth record of an action specifi in the vo. notic, howev, that in the vo specif we do not restrict the syntax of the formula: variabl mai appear in them, and when an agent perform an actual action then ani variabl of the specifi action must be assign valu. we thu defin: def. 2. a global execut state of a vo, denot as Ξ, is a finit, possibl empti, set of tupl a : r, ¯ϕ, t where a ∈ agent is an agent identifi, r ∈ role is a role label, ¯ϕ is a ground first-order atom formula, and t ∈ in is a time stamp. for instanc, ag1:buyer, p(a, 34), 20 state that agent ag1  adopt role buyer perform action p(a, 34) at instant 20. given a vo i = s, s0, e, t , an execut state Ξ and a state s ∈ s, we can defin a function which obtain a possibl next execut state, viz., h(i, Ξ, s) = Ξ ∪ { a:r, ¯ϕ, t }, for on (s, s , ϕ) ∈ e. such  function h must address the two kind of non-determin abov, as well as the choic on the potenti agent that can carri out the  action and their adopt role. we also defin a function to comput the set of all possibl execut state, h∗ (i, Ξ, s) = {Ξ ∪ { a: r, ¯ϕ, t }|(s, s , ϕ) ∈ e}. 2.2 norm-regul vo we advoc a separ of concern wherebi the virtual  organ is complement with an explicit and separ set of norm that further regul the behaviour of agent as thei take part in the enact of an organ. the freedom of choic given to agent (captur via the non-determin of vo, explain abov) must be curtail in some circumst. for instanc, we might need to describ that whoever carri out ϕ is oblig to carri out ϕ , so that if there is a choic point in which ϕ appear as a label of an edg, then that edg should be follow. rather than embed such norm aspect into the agent" design (sai, by explicitli encod norm aspect in the agent" behaviour) or into the vo itself (sai, by address except and deviant behaviour in the mechan itself), we adopt the view that a vo should be supplement with a separ set of norm that further regul the behaviour of agent as thei take part in the enact of the organ. thi separ of concern should facilit the design of mass; howev, the differ compon (vo and norm) must come togeth at some point in the design process. our norm ar defin as below: def. 3. a norm, gener refer to as ν, is ani construct of the form oτ:τ ϕ, pτ:τ ϕ, or fτ:τ ϕ, where τ, τ ar either  variabl or constant and ϕ is a first-order atom formula. we adopt the notat of [18]: oτ:τ ϕ repres an oblig on agent τ take up role τ to bring about ϕ; we recal that τ, τ ar variabl, constant and function appli to (nest) term. pτ:τ ϕ and fτ:τ ϕ stand for, respect, a permiss and a prohibit on agent τ, plai role τ to bring about ϕ. we shall assum that sort ar us to properli manipul variabl for agent identifi and role label. we propos to formal repres the norm posit of all agent enact a vo. by norm posit we mean the  social burden associ to individu [12], that is, their oblig, permiss and prohibit: 2 non-trustworthi agent can be accommod in thi propos, if we associ to each of them a governor agent which supervis the action of the extern agent and report on them. thi approach wa introduc in [12] and is explain in section 5. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 645 def. 4. a global norm state Ω is a finit and possibl empti set of tupl ω = ν, td, ta, te where ν is a norm as abov and td, ta, te ∈ in ar, respect, the time when ν wa  declar (introduc), when ν becom activ and when ν expir, td ≤ ta < te. it is worth notic that we do not requir the atom formula of norm to be ground: there could be variabl in them. we assum an implicit univers quantif on the variabl a, r of norm xa:rϕ (for the deontic modal x ∈ {o, p, f}), so that, for instanc, pa:rp(x, b, c) stand for ∀a ∈ agent.∀r ∈ role.∃x.pa:rp(x, b, c). we also refer to the tupl in Ω as norm. global norm state complement the execut state of vo with inform on the norm posit of individu agent. we can relat them via a function to obtain a norm-regul next execut state of a vo, that is, g(i, Ξ, s, Ω, t) = Ξ , t  stand for the time of the updat. for instanc, we might want all prohibit action to be exclud from the next execut state, that is, g(i, Ξ, s, Ω, t) = Ξ ∪ { a :r, ¯ϕ, t }, (s, s , ϕ) ∈ e and fa:rϕ, td, ta, te ∈ Ω, ta ≤ t ≤ te. we might equal wish that onli permit action be chosen for the next execut state. we do not legisl, or inde recommend, ani particular wai to  regul vo. we do, howev, offer simpl underpin to allow arbitrari polici to be put in place. in the same wai that a norm state is us to obtain the next execut state of a vo, we can us an execut state to  updat a norm state. for instanc, we might want to remov ani oblig specif to an agent and role, which ha been carri out by that specif agent and role, that is, f(Ξ, Ω) = Ω − obl, obl = { oa:rϕ, td, ta, te ∈ Ω| a:r, ¯ϕ, t ∈ Ξ}. the manag (i.e., creation and updat) of global  norm state is an interest area of research. a simpl but us approach is report in [11]: product rule gener depict how norm should be updat to reflect what agent have done and which norm current hold. in thi paper our focu is not to  propos how Ω"s should be manag; we assum some mechan which doe that. 3. norm conflict we now defin mean to detect and resolv norm conflict and inconsist. we make us of the concept of unif [1, 8] of first-order term τ, i.e., constant, variabl or (nest) function with term as paramet. initi we defin substitut: def. 5. a substitut σ is a finit and possibl empti set of pair x/τ, where x is a variabl and τ is a term. we defin the applic of a substitut as: 1. c · σ = c for a constant c 2. x · σ = τ · σ if x/τ ∈ σ; otherwis x · σ = x 3. pn (τ0, . . . , τn) · σ = pn (τ0 · σ, . . . , τn · σ). 4. (xτ1:τ2 ϕ) · σ = x(τ1·σ):(τ2·σ)(ϕ · σ) 5. ν, td, ta, te · σ = (ν · σ), td, ta, te where x gener refer to ani of the deontic modal o, p, f. unif between two term τ, τ consist of find a  substitut σ (also call, in thi context, the unifi of τ and τ ) such that τ · σ = τ · σ. mani algorithm have been propos to solv the unif problem, a fundament issu in autom theorem prove [8], and more recent work provid veri effici wai to obtain unifi. we shall make us of the follow definit: def. 6. relationship unifi(τ, τ , σ) hold iff there is a  possibl empti σ such that τ · σ = τ · σ. we also defin the unif of atom formula as unifi(pn (τ0, . . . , τn), pn (τ0, . . . , τn), σ) which hold iff τi · σ = τi · σ, 0 ≤ i ≤ n. the unifi relationship check if a substitut σ is inde a unifi for τ, τ but it can also be us to find such σ. we assum that unifi is a suitabl implement of a unif algorithm which i) alwai termin (possibl fail, if a unifi cannot be found); ii) is correct; and iii) ha a linear comput complex. 3.1 conflict detect a norm conflict aris when an atom formula label an edg in the vo, i.e. an action, is simultan permit and  prohibit [13]. in thi case, both norm ar in conflict with regard to their agent, role and paramet (term) of specif action. we propos to us unif to detect when a prohibit and a  permiss overlap and to emploi the unifi to resolv the conflict. for instanc, pa:rp(c, x) and fa:bp(y, z) ar in conflict as thei unifi under σ = {a/a, r/b, y/c, x/d}). if, howev, the  variabl in fa:bp(y, z) do not get the valu in σ then there will be no conflict. we thu propos to annot the prohibit in Ω with unifi, call here conflict set, and us these annot to determin what the variabl of the prohibit cannot be in futur unif in order to avoid a conflict. each prohibit is henceforth regard as have such an annot, denot as (fτ1:τ2 ϕ) Σc, td, ta, te . initi, thi annot is empti. we propos to curtail the influenc of prohibit, thu give agent more choic in the action thei mai perform. a similar approach could be taken wherebi permiss ar curtail, thu limit the avail agent" action. each of these polici is  possibl: we do not legisl over ani of them nor do we give  prefer over ani. in thi paper we ar interest in formalis such polici within a simpl mathemat framework. a prohibit can be in conflict with variou permiss in Ω. we, therefor, have to find the maxim set of conflict pair of permiss and prohibit in Ω, by perform a pairwis inspect. thi  requir identifi the substitut between two pair of norm that characteris a conflict. thi is formal captur by the follow definit: def. 7. a conflict aris between two tupl ω, ω ∈ Ω under a substitut σ, denot as cflct(ω, ω , σ), iff the follow  condit hold: 1. ω = (fτ1:τ2 ϕ) Σc, td, ta, te , ω = pτ1:τ2 ϕ , td, ta, te 2. unifi(τ1, τ1, σ), unifi(τ2, τ2, σ), and unifi(ϕ, ϕ , σ) 3. |te − te| ≤ |ta − ta| that is, a prohibit and a permiss conflict (condit 1) if, and onli if, the agent and role thei appli to and their action, respect, unifi under σ (condit 2) and their activ  period overlap (condit 3). substitut σ, the conflict set,  unifi the agent, role and atom formula of a permiss and a prohibit. the annot Σc doe not plai ani role when  detect conflict, but, as we show below, we have to updat the annot to reflect new curtail to solv conflict. for  instanc, cflct( (fa:bp(y, d)) ∅, 1, 3, 5 , pa:rp(c, x), 2, 3, 4 , {a/a, r/b, y/c, z/x}) hold. we defin below how we obtain the set of conflict norm of a norm state Ω: def. 8. the finit, possibl empti set of conflict norm of a norm state Ω, denot as cfl(Ω), is defin as cfl(Ω) = { ω, ω , σ |ω, ω ∈ Ω, cflct(ω, ω , σ)} 3.2 conflict resolut a fine-grain wai of resolv conflict can be done via  unif. we detect the overlap of the norm" influenc, i.e. how thei affect the behaviour of agent in the vo, and we curtail the 646 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) influenc of the prohibit. we illustr with venn diagram in figur 2 the overlap of norm influenc (left) which characteris a conflict and the curtail necessari to resolv the conflict (right). the illustr show the space of possibl valu for p(x, y ) and p(x, y ) pa:rp(c, x) fa:bp(y, z) p(x, y ) fa:bp(y, z) pa:rp(c, x) figur 2: overlap of influenc (left) and curtail (right) two portion of thi space defin the scope of influenc of norm pa:rp(c, x) and fa:bp(y, z). the scope of these norm overlap, illustr by the intersect of box on the left, in action with valu, for instanc, a, b, p(c, 2) , . . . , a, b, p(c, n) . the  curtail of the prohibit elimin the intersect: it move the scope of the norm influenc to outsid the influenc of the  permiss. if there were multipl overlap among on prohibit and variou permiss, which is like to happen, then the prohibit will be multipli curtail to move the scope of the norm to avoid all intersect. the algorithm shown in figur 3 depict how we obtain a  conflictfre set of norm. it map an exist set Ω possibl with  conflictalgorithm conflictresolut(Ω, Ω ) input Ω output Ω begin Ω := Ω for each ω ∈ Ω s.t. ω = (fa:r ¯ϕ) Σc, td, ta, te do if ω, ω , σ ∈ cfl(Ω) then Ω := Ω − {ω} end for for each ω ∈ Ω s.t. ω = (fτ1:τ2 ϕ) Σc, td, ta, te do Σmax c := [ ω,ω ,σc ∈cfl(Ω ) {σc} Ω := (Ω − {ω}) ∪ { (fτ1:τ2 ϕ) (Σc ∪ Σmax c ), td, ta, te } end for end figur 3: algorithm to resolv conflict in a set of norm ing norm onto a new set Ω in which the conflict (if ani) ar resolv. the algorithm form Ω as a set that is  conflict-freethi mean that prohibit ar annot with a conflict set that indic which bind for variabl have to be avoid. initi, Ω is set to be Ω. the algorithm oper in two stage. in the first stage (first for each loop), we remov all conflict prohibit ω = (fa:r ¯ϕ) Σc, td, ta, te with ground agent/role pair a : r and ground formula ¯ϕ: the onli wai to resolv  conflict aris from such prohibit is to remov them altogeth, as we cannot curtail a fulli ground norm. in the second stage  (second for each loop), the remain prohibit in Ω ar examin: the set cfl(Ω ) contain all conflict between permiss and the remain prohibit in Ω repres as tupl ω, ω , σc , with σc repres the conflict set. as a prohibit mai have conflict with variou permiss, the set cfl(Ω ) mai contain more than on tupl for each prohibit. in order to provid an Ω that reflect all these conflict for a specif prohibit, we have to form Σmax c contain all conflict set σc for a given  prohibit ω. the maxim set is us to updat the annot of the prohibit. it is import to explain the need for updat the conflict set of prohibit. norm state chang as a result of agent"  action [11]: exist permiss, prohibit and oblig ar revok and/or new on ar put in place as a result of agent"  interact with the environ and other agent. whenev new norm ar ad we must check for new conflict and  inconsist. if we onli appli our algorithm to a pair consist of an old and a new norm, then some re-process of pair of old norm (which were dealt with befor) can be save. the remov of norm from the set Ω is dealt with effici: each permiss to be  remov must be check first for conflict with ani exist  prohibit (re-process can be avoid if we record the conflict, instead of detect it again). if there is a conflict, then the conflict set will have been record in the prohibit"s annot; thi conflict set is thu remov from the prohibit"s annot. the remov of oblig follow a similar process. prohibit ar remov without the need to consid their relationship with other norm. our algorithm is correct in that it provid, for a given Ω, a new Ω in which i) all ground prohibit which conflict with  permiss have been remov; and ii) all remain annot  prohibit (fτ:τ ¯ϕ) Σc, td, ta, te will not unifi with ani of the permiss in Ω , provid the unifi doe not appear in Σc. the first requir is address by the first for each loop, which doe precis thi: it remov all ground prohibit which unifi with an oblig. the second requir is address by the second for each loop: each prohibit ha it annot Σc ad with Σmax c , thu accommod the unifi from all permiss that unifi with the prohibit. it is easi to see that the algorithm  alwai termin: each of it two loop go through a finit set,  process on element at a time. the set cfl(Ω) is comput in a finit number of step as ar the set oper perform within each loop. the algorithm ha, howev, exponenti complex3 , as the comput of cfl(Ω) requir a pairwis comparison of all element in Ω. we illustr our algorithm with the follow exampl. let there be the follow global norm state Ω: j (fa:rp(x, y )) {}, 2, 2, 9 , pa:rp(a, b), 3, 4, 8 , (fa:rp(a, b)) {}, 2, 4, 12 pa:rp(d, e), 3, 4, 9 , ff the first loop remov the ground prohibit, thu obtain the follow Ω : j (fa:rp(x, y )) {}, 2, 2, 9 , pa:bp(c, d), 3, 4, 8 , pe:f p(g, h), 3, 4, 9 ff we then have the follow set of conflict norm cfl(Ω ): 8 < : * (fa:rp(x, y )) {}, 2, 2, 9 , pa:bp(c, d), 3, 4, 8 , {a/a, r/b, x/c, y/d} + , * (fa:rp(x, y )) {}, 2, 2, 9 , pe:f p(g, h), 3, 4, 9 , {a/e, r/f, x/g, y/h} +9 = ; for each prohibit ω ∈ Ω we retriev all element from w, w , σ ∈ cfl(Ω ) and collect their σ"s in Σmax c . the final Ω is thu: 8 < : (fa:rp(x, y )) j {a/a, r/b, x/c, y/d} {a/e, r/f, x/g, y/h} ff , 2, 2, 9 , pa:rp(a, b), 3, 4, 8 , pa:rp(d, e), 3, 4, 9 , 9 = ; the annot set of conflict set should be understood as a record of past unif, which inform how prohibit should be us in the futur in order to avoid ani conflict with permiss. we show in section 5.1 how annot ar us by norm-awar agent. 4. norm inconsist if a substitut σ can be found that unifi an oblig and a prohibit, then a situat of norm inconsist occur [13]. the oblig demand that an agent perform an action that is forbidden. we can reus the machineri, introduc abov for  resolv conflict between permiss and prohibit, in order to a) detect and b) resolv such inconsist. with definit 7, we 3 the combinatori effort is not necessari anymor if instead we maintain a set of norm conflict-free: each time a new norm is to be introduc then we compar it with the exist on, thu make the mainten process of linear complex. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 647 express the natur of a conflict between a prohibit and  permiss. similarli, a situat of inconsist can be defin reus thi definit and replac the p deontic modal with o. we can reus the machineri for conflict resolut, develop previous, for resolv inconsist. the conflict resolut algorithm can be appli without chang to accumul a maxim conflict set Σmax c for each prohibit in Ω that unifi with oblig. 5. norm-awar agent societi we now describ how our norm-regul vo give rise to  normawar agent societi. we address open and heterogen mass: we accommod extern agent by provid each of them with a correspond governor agent [12]. thi is a kind of chaperon that interact with an extern agent, and observ and report on it behaviour. we show our architectur in figur 4 below: a number extern governor agent agent tupl space ag1 £ ¢   ¡ gov1 ⇐⇒ . . . . . . . . . . . . i, s, Ξ, Ω i, s , Ξ , Ω · · · agn £ ¢   ¡ govn ⇐⇒ figur 4: architectur for norm-awar agent societi of extern agent interact (denot by the  ) with their  correspond governor agent. the governor agent have access to the vo descript i, the current state s of the vo enact, the global execut state Ξ and the global norm state Ω.  governor agent ar abl to write to and read from (denot by the ⇐⇒) a share memori space (e.g., a blackboard-like solut implement as a tupl space), updat the global configur (denot by the  ) to reflect the dynam of the vo enact. governor agent ar necessari becaus we cannot anticip or  legisl over the design or behaviour of extern agent. we depict  below how the pair of governor/extern agent work togeth: ani non-determinist choic on the vo ar decid by the extern agent; ani norm aspect ar consid by the governor agent. the governor agent repres the extern agent within the vo. as such, it ha the uniqu identifi of the extern agent. the  governor agent keep an account of all role the extern agent is  current plai: in our vo, it is possibl for agent to take up more than on role simultan. we defin in figur 5 how governor agent work - we us a logic program for thi purpos. we show 1 main(id, role) ← 2 get tupl( i, s, Ξ, Ω )∧ 3 termin(id, role, i, Ξ, Ω) 4 main(id, role) ← 5 get tupl( i, s, Ξ, Ω )∧ 6 filter norm(id, role, Ω, Ωid )∧ 7 discuss norm(id, role, i, s, Ξ, Ωid , action)∧ 8 updat tupl(role, action, newrol)∧ 9 main(id, newrol) figur 5: governor agent as a logic program the line of our claus number 1-9. the first claus (line 1-3) depict the termin condit: get tupl/1 (line 2) retriev i, s, Ξ, Ω from the share tupl space and termin/4 check if the current vo enact (record in Ξ) ha come to an end. the team of governor agent synchronis their access to the tupl space [12], thu ensur each ha a chanc to function. the second claus (line 4-9) depict a gener loop when the termin condit of the first claus doe not hold. in thi case, the tupl is again retriev (line 5) and the governor agent proce (line 6) to analys the current global norm state Ω with a view to obtain the subset Ωid ⊆ Ω of norm refer to agent id under role role. predic filter norm/4 collect the norm which appli to agent id (the governor agent"s extern agent). in line 7 the governor agent, in possess of the applic norm as well as other relev inform, interact with the extern agent to decid on a set of action which ar norm-compliant - these action will be us to updat (line 8) the global execut state Ξ. in the process of updat the state of execut, a new set of role must be assign to the extern agent, repres as newrol. the governor agent keep loop (line 9) us the identifi for the extern agent and it new set of role. 5.1 us annot norm we now explain how annot norm ar us by norm-awar agent. we do so via the definit of predic check/2, which hold if it first argument, a candid action (in the format of the element of Ξ of def. 2), is within the influenc of an annot prohibit ω, it second paramet. the definit, as a logic  program, is shown in figur 6. it check (line 4) if the agent identifi 1 check(action, ω) ← 2 action = a:r, ¯ϕ, t ∧ 3 ω = (fτ1:τ2 ϕ) Σc, td, ta, te ∧ 4 unifi(a, τ1, σ) ∧ unifi(r, τ2, σ) ∧ unifi( ¯ϕ, ϕ, σ)∧ 5 foral(σ , (σc ∈ Σc, unifi(σc, σ, σ )), mgu)∧ 6 mgu = ∅∧ 7 ta ≤ t ≤ te figur 6: check if action is within influenc of curtail norm and role of the action unifi with the appropri term τ1, τ2 of ω and that the action ¯ϕ, ϕ themselv unifi, all under the same  unifi σ. it then verifi (line 5-6) that σ doe not unifi with ani of the conflict set in Σc. final, in line 7 it check if the time of the action is within the norm tempor influenc. the verif of non-unif of σ with ani element of Σc deserv an explan. the element of Σc ar unifi state what valu the variabl of the norm cannot have, that is, thei repres gap in the origin scope of the norm"s influenc. the test thu equat to ask if the action is outsid such gap, that is, the action is within the curtail scope of influenc of the norm. 6. action conflict & inconsist in our previou discuss, norm conflict and inconsist were detect via a direct comparison of the atom formula  repres the action. howev, conflict and inconsist mai also aris indirectli via relationship among action. for instanc, if p(x) amount to q(x, x), then norm pa:rp(x) and fa:rq(x, x) ar in conflict sinc pa:rp(x) can be rewritten as pa:rq(x, x) and we thu have both pa:rq(x, x) and fa:rq(x, x). in the discuss below we concentr on norm conflict, but norm inconsist can be dealt with similarli, if we chang the deontic modal p for o. relationship among action ar domain-depend. differ domain have distinct wai of relat their action; engin build ontolog to repres such relationship. we propos a simpl mean to account for such relationship and show how these can be connect to the mechan introduc abov. rather than make us of sophist formal for ontolog construct, we emploi a set of domain axiom, defin below: def. 9. the domain axiom, denot as Δ, ar a finit and  possibl empti set of formula ϕ → (ϕ1 ∧ · · · ∧ ϕn) where ϕ, ϕi, 1 ≤ i ≤ n, ar atom first-order formula. our exampl abov can be captur by Δ = {(p(x) → q(x, x)), (q(x, x) → p(x))}. by explicitli repres and manipul domain knowledg we achiev gener: the veri same  machineri can be us with differ domain. a set of norm can have differ conflict and inconsist, for distinct domain of  applic. 648 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 649 650 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 651 