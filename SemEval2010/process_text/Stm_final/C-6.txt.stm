design and implement of a distribut content manag system c. d. cranor, r. ethington, a. sehgal† , d. shur, c. sreenan‡ and j.e. van der merw at&t lab - research † univers of kentucki ‡ univers colleg cork florham park, nj, usa lexington, ky, usa cork, ireland abstract the converg of advanc in storag, encod, and network technolog ha brought us to an environ where huge amount of continu media content is routin store and exchang  between network enabl devic. keep track of (or manag) such content remain challeng due to the sheer volum of data. store live continu media (such as tv or radio content) add to the complex in that thi content ha no well defin start or end and is therefor cumbersom to deal with. network storag allow content that is logic view as part of the same collect to in fact be distribut across a network, make the task of  content manag all but imposs to deal with without a content manag system. in thi paper we present the design and  implement of the spectrum content manag system, which deal with rich media content effect in thi environ. spectrum ha a modular architectur that allow it applic to both stand-alon and variou network scenario. a uniqu  aspect of spectrum is that it requir on (or more) retent polici to appli to everi piec of content that is store in the system. thi mean that there ar no evict polici. content that no longer ha a retent polici appli to it is simpli remov from the  system. differ retent polici can easili be appli to the same content thu natur facilit share without duplic. thi approach also allow spectrum to easili appli time base polici which ar basic build block requir to deal with the storag of live continu media, to content. we not onli describ the detail of the spectrum architectur but also give typic us case. categori and subject descriptor c.2.4 [comput system organ]:  comput-commun network-distribut system; h.3.4 [inform  system]: inform storag and retriev-system and softwar gener term design, manag 1. introduct manipul and manag content is and ha alwai been on of the primari function of a comput. initi comput  applic includ text formatt and program compil. content wa initi manag by explicit user interact through the us of file and filesystem. as technolog ha advanc, both the type of content and the wai peopl wish to us it have greatli chang. new content type such as continu multimedia stream have  becom commonplac due to the converg of advanc in storag, encod, and network technolog. for exampl, by  combin improv in storag and encod, it is now possibl to store mani hour of tv-qualiti encod video on a singl disk drive. thi ha led to the introduct of stand alon digit video record or person video record (pvr) system such as  tivo [8] and replaytv [7]. anoth exampl is the combin of encod and broadband network technolog. thi combin ha allow user to access and share multimedia content in both local and remot area network with the network itself act as a huge data repositori. the prolifer of high qualiti content enabl by these  advanc in storag, encod, and network technolog creat the need for new wai to manipul and manag the data. the focu of our work is on the storag of media rich content and in  particular the storag of continu media content in either pre-packag or live form. the need for content manag in thi area is appar when on consid the follow: • increas in the capac and decreas in the cost of storag mean that even modest desktop system todai have the  abil to store massiv amount of content. manag such  content manual (or more correctli manual non-manag of such content) lead to great ineffici where unwant and forgotten content wast storag and where want  content cannot be found. • while true for all type of content the storag of  continu media content is especi problemat. first  continu media content is still veri demand in term of storag resourc which mean that a polici-less approach to  store it will not work for all but the smallest system.  second, the store of live content such as tv or radio is  inher problemat as these signal ar continu stream with no endpoint. thi mean that befor on can even think about manag such content there is a need to abstract it into someth that could be manipul and manag. 4 • when deal with store continu media there is a need to manag such content at both a fine-grain as well as an aggreg level. for exampl, an individu pvr user  want to keep onli the highlight of a particular sport event should not be requir to have to store the content pertain to the complet event. at the same time the user might want to think of content in the aggreg, e.g. remov all of the content that i have not watch for the last month except that content which wa explicitli mark for archiv. • as indic abov, try to keep track of content on a  standalon system without a content manag system is veri difficult. howev, when the actual storag devic ar  distribut across a network the task of keep track of content is almost imposs. thi scenario is increasingli common in network base content distribut system and is like to also becom import in home-network scenario. it would seem clear then that a content manag system that can effici handl media rich content while also exploit the network capabl of storag devic is need. thi system should allow effici storag of and access to content across  heterogen network storag devic accord to user prefer. the content manag system should translat user prefer into appropri low-level storag polici and should allow those prefer to be express at a fine level of granular (while not requir it in gener). the content manag system should  allow the user to manipul and reason about (i.e. chang the storag polici associ with) the storag of (part of) continu media content. address thi distribut content manag problem is  difficult due to the number of requir place on the system. for exampl: • the content manag system must oper on a larg number of heterogen system. in some case the system mai be manag content store on a local filesystem, while in other the content mai be store on a separ network storag applianc. the content manag mai be respons for implement the polici it us to refer content or that role mai be deleg to a separ comput. a  applic program interfac (api) and associ network  protocol ar need in order for the content manag system to provid a uniform interfac. • the content manag system should be flexibl and be abl to handl differ requir for content  manag polici. these polici reflect what content should be obtain, when it should be fetch, how long it should be  retain, and under what circumst it should be discard. thi mean that the content manag system should  allow multipl applic to refer content with a rich set of polici and that it should all work togeth seamlessli. • the content manag system need to be abl to  monitor refer for content and us that inform to place content in the right locat in the network for effici  applic access. • the content manag system must handl the interact between implicit and explicit popul of content at the  network edg. • the content system must be abl to effici manag larg set of content, includ continu stream. it need to be abl to packag thi content in such a wai that it is conveni for user to access. to address these issu we have design and implement the spectrum content manag system architectur. our layer  architectur is flexibl - it api allow the layer to resid either on a singl comput or on multipl network heterogen  comput. it allow multipl applic to refer content us differ polici. note that the spectrum architectur assum the exist of a content distribut network (cdn) that can  facilit the effici distribut of content (for exampl, the prism cdn architectur [2]). the rest of thi paper is organ as follow. section 2 describ the architectur of our content manag system. in section 3 we describ both our implement of the spectrum architectur and exampl of it us. relat work is describ in section 4, and section 5 contain our conclus and suggest for futur work. 2. the spectrum distribut  content manag system  architectur the spectrum architectur consist of three distinct manag layer that mai or mai not be distribut across multipl machin, as shown in figur 1. the three layer ar: content manag: contain applic specif inform that is us to manag all of an applic"s content accord to user prefer. for exampl, in a person video record (pvr) applic the content manag receiv request for content from a user interfac and interact with the lower  layer of the spectrum architectur to store and manag content on the devic. polici manag: implement and enforc variou storag polic that the content manag us to refer to content. the polici manag export an interfac to the content manag that  allow the content manag to request that a piec content be treat accord to a specif polici. spectrum allow for arbitrari polici to be realiz by provid a fix set of base-polici templat that can easili be parameter. it is our belief that for most implement thi will be adequ (if not, spectrum can easili be extend to dynam load new base-polici templat code at run time). a kei aspect of the polici manag is that it allow differ polici to be simultan appli to the same content (or part of the same content). furthermor content can onli exist in the system so long as it is referenc by at least on exist polici. polici conflict ar elimin by have the polici manag deal exclus with retent polici rather than with a mix of retent and evict polici. thi mean that content with no polici associ with it is immedi and automat remov from the system. thi approach  allow us to natur support share of content across  differ polici which is critic to the effici storag of larg object. note that a kei differ between the content manag and the polici manag is that the content manag manag  refer to multipl piec of content, i.e. it ha an  applicationview of content. on the other hand, the polici manag is onli concern with the polici us to manag  standalon piec of content. for exampl, in a pvr  applic, the content manag layer would know about the  differ group of manag content such as keep-indefinit, keep for on dai, and keep if avail diskspac.  howev, at the polici manag level, each piec of content ha 5 content manag polici manag storag manag content manag content manag content manag polici manag polici manag polici manag storag manag storag manag storag manag remot invoc figur 1: the compon of the spectrum architectur and the four wai thei can be configur it own polici (or polici) appli to it and is independ from other content. storag manag: store content in an effici manner while  facilit the object of the higher layer. specif the storag manag store content in sub-object chunk. thi approach ha advantag for the effici retriev of content but more importantli allow polici to be appli at a  subobject level which is critic import when deal with veri larg object such as part of continu media, e.g.  select piec of tv content be store on a pvr. note that the storag manag ha no knowledg of the polici be us by the content and polici manag. anoth uniqu part of our approach is that the interfac  between the layer can either be local or distribut. figur 1 show the four possibl case. the case on the far left of the figur show the simplest (non-distribut) case where all the layer ar  implement on a singl box. thi configur would be us in  selfcontain applic such as pvr. the next case over correspond to the case where there is a  central content manag that control distribut storag devic each of which is respons for implement polici base  storag. in thi case although the remot devic ar control by the central manag thei oper much more independ. for  exampl, onc thei receiv instruct from the central manag thei typic oper in autonom fashion. an exampl of thi type of configur is a content distribut network (cdn) that  distribut and store content base on a schedul determin by some central control. for exampl, the cdn could pre-popul edg devic with content that is expect to be veri popular or distribut larg file to branch offic dure off-peak hour in a bandwidth constrain enterpris environ. allow a singl polici manag to control sever storag  manag lead to the next combin of function and the most  distribut case. the need for thi sort of separ might occur for scalabl reason or when differ special storag devic or applianc ar requir to be control by a singl polici manag. the final case show a content manag combin with a  polici manag control a remot storag manag. thi separ would be possibl if the storag manag is somewhat autonom and doe not requir continu fine grain control by the polici manag. we now examin the function of the three layer in detail. 2.1 content manag the content manag layer is the primari interfac through which specif applic us the spectrum architectur. as such the content manag layer provid an api for the applic to  manipul all aspect of the spectrum architectur at differ level of granular. the content manag api ha function that handl: physic devic: thi set of function allow physic storag  devic to be ad to spectrum therebi put them under control of the content manag and make the storag  avail to the system. physic devic can be local or remot - thi is the onli place in the architectur where the  applic is requir to be awar of thi distinct. onc a devic is map into the applic through thi interfac, the system track it type and locat. user simpli refer to the content through an applic-provid label. store: store ar subset of physic storag devic. through these function an applic can creat a store on a physic devic and assign resourc (e.g. disk space) to it. store can onli be creat in physic devic that ar map into the system. polici group: polici group ar the mean wherebi an  applic specifi, instanti, and modifi the polici that ar appli to spectrum content. typic usag of thi set of function is to select on of a small set of base polici and to parameter thi specif instanc of the polici. polici group ar creat within exist store in the system. the spectrum architectur ha polici that ar normal  associ with storag that aim to optim disk usag. in addit a set of polici that take a sophist time specif enabl storag that is cogniz of time. for exampl, a  simpl time-base polici could evict content from the system at a certain absolut or rel time. a slightli more  involv time-base polici enabl by the spectrum  architectur could allow content to be store in roll window of a number of hour (for exampl, the most recent n-number of hour is kept in the system). time-base polic ar of particular us when deal with continu content like a live broadcast. 6 content: at the finest level of granular content can be ad to or remov from the system. content is specifi to the system by mean of a uniform resourc locat (url) which concis indic the locat of the content as well as the protocol to be us to retriev it. option a time  specif can be associ with content. thi allow content to be fetch into the system at some futur time, or at futur time interv. again, thi is particularli us for deal with the storag and manag of live content. 2.2 polici manag the polici manag layer of the spectrum architectur ha two main type of api function. first, there ar function that oper on manag storag area and polici-base refer (pref) to content store there. second, there ar set of function us to implement each manag polici. the first class of function is us by the content manag layer to access storag. oper includ: creat, open, and close: these oper ar us by the content manag to control it access to storag. the polici  manag"s creat oper is us to establish contact with a store for the first time. onc thi is done, the store can be open and close us the appropri routin. note that the paramet us to creat a store contain inform on how to reach it. for exampl, local store have a path associ with them, while remot store have a remot host and  remot path associ with them. the inform onli need to be pass to the polici manag onc at creat time. for open oper, the polici manag will us cach  inform to contact the store. lookup: the lookup oper provid a wai for the content  manag to queri the polici manag about what content is  current present for a given url. for continu media time rang of present media will be return. resourc: the resourc routin ar us to queri the polici  manag about it current resourc usag. there ar two resourc routin: on that appli to the store as a whole and anoth that appli to a particular polici refer. the resourc api is extens, we current support queri on disk usag and i/o load. pref establish/updat: the pref establish oper is us by the content manag to refer content on the store. if the  content is not present, thi call will result in the content be fetch (or be schedul to be fetch if the content is not current avail). paramet of thi function includ the url to store it under, the url to fetch data from if it is not present, the polici to store the content under, and the argument us to parameter the polici. the result of a success pref establish oper is a polici refer id string. thi id can be us with the updat oper to  either chang the storag polici paramet or delet the  refer entir. the second group of polici manag function ar us to  implement all the polic support by spectrum. we envis a small set of base-level polici function that can be parameter to  produc a wide rang of storag polic. for exampl, a polici that implement record a repeat time window can be  parameter to function daili, weekli, or monthli. note that the polici manag is onli concern with execut a specif polici. the higher-level reason for choos a given polici ar handl by the content and applic manag. a base polici is implement us six function: establish: call when a pref is establish with the requir url and base polici"s paramet. the establish routin  refer ani content alreadi present in the store and then  determin the next time it need to take action (e.g. start a download) and schedul a callback for that time. it can also regist to receiv callback if new content is receiv for a given url. updat: call to chang the paramet of a pref, or to discard the polici refer. newclip: call when a chunk of new content is receiv for a url of interest. the base polici typic arrang for  newclip to be call for a given url when the pref is establish. when newclip is call, the base polici check it  paramet to determin if it wish to add a refer to the clip just receiv. callback: call when the pref schedul a timer-base callback. thi is a us wakeup mechan for pref that need to be idl for a long period of time (e.g. between program). boot/shutdown: call when the content manag system is boot or shut down. the boot oper is typic us to schedul initi callback or start i/o oper. the shutdown oper is us to gracefulli shutdown i/o stream and save state. 2.3 storag manag the role of spectrum"s storag manag is to control all i/o  oper associ with a given store. spectrum"s storag manag support store content both on a local filesystem and on a remot fileserv (e.g. a storag applianc). for continu media, at the storag manag level content is store as a collect of time-base chunk. depend on the underli filesystem, a chunk could correspond to a singl file or a data node in a storag databas. the two main storag manag oper ar input and output. the input routin is us to store content in a store under a given name. the output routin is us to send data from the store to a client. for stream media both the input and output routin take time rang that schedul when the i/o oper should happen, and both routin return an i/o handl that can be us to modifi or cancel the i/o request in the futur. much like the polici manag, the storag manag also provid api function to creat, open, and close store. it also support  oper to queri the resourc usag and option support by the store. final, the storag manag also ha a discard routin that mai be us by the polici manag to inform the store to remov content from the store. 3. implement and us case in thi section we describ our implement of spectrum and describ how it can be us. 3.1 implement we have implement spectrum"s three layer in c as part of a librari that can be link with spectrum-base applic. each layer keep track of it state through a set of local data file that persist across reboot, thu allow spectrum to smoothli handl power cycl. for layer that resid on remot system (e.g. a  remot store) onli the meta-inform need to contact the remot 7 content manag polici manag storag manag storag fetcher program list graphic user interfac network enabl dvr program inform content dvr applic figur 2: spectrum in a network enabl dvr node is store local. our test applic us a local polici and storag manag to fetch content and store it in a normal  unixbas filesystem. to effici handl commun with layer run on  remot system, all spectrum"s api call support both synchron and asynchron mode through a uniform interfac defin by the reqinfo structur. each api call take a pointer to a  reqinfo structur as on of it argument. thi structur is us to hold the call state and return statu. for async call, the  reqinfo also contain a pointer to a callback function. to us a spectrum api function, the caller first choos either the sync or async mode and alloc a reqinfo structur. for sync call, the reqinfo can be alloc on the stack, otherwis it is alloc with malloc. for async call, a callback function must be provid when the reqinfo is alloc. next the caller invok the  desir spectrum api function pass the reqinfo structur as an argument. for sync call, the result of the call is return  immedi in the reqinfo structur. for success async call, a call in progress valu is return. later, when the async call complet or a timeout occur, the async callback function is call with the appropri inform need to complet process. the modular/layer design of the spectrum architectur  simplifi the object of distribut of function. furthermor, commun between function is typic of a master-slave(s) natur. thi mean that sever approach to distribut oper ar possibl that would satisfi the architectur requir. in our implement we have opt to realiz thi function with a simpl modular design. we provid a set of asynchron remot access stub routin that allow user to select the transport  protocol to us and to select the encod method that should be us with the data to be transfer. transport protocol can rang  simpl protocol such as udp up to more complex protocol such as http. we current ar us plain tcp for most of our transport. function call across the differ spectrum api can be  encod us a varieti of format includ plain text, xdr, and xml. we ar current us the expat xml librari [4] to encod our call. while we ar current transfer our xml encod  messag us a simpl tcp connect, in a real world set thi can easili be replac with an implement base on secur socket layer (ssl) to improv secur by ad ssl as a  transport protocol. an import aspect of spectrum is that it can manag content base on a given polici across heterogen platform. as we  explain previous in section 2.2, envis a small set of base-level polici function that can be parameter to produc a wide rang of storag polic. in order for thi to work properli, all  spectrumbas applic must understand the base-level polici and how thei can be parameter. to address thi issu, we treat each base-level polici as if it wa a separ program. each base-level polici should have a well known name and command line  option for parameter. in fact, in our implement we pass paramet to base-level polici as a string that can be pars us a getopt-like function. thi format is easili understood and  provid portabl sinc byte order is not an issu in a string. sinc thi part of spectrum is not on the critic data path, thi type of format is not a perform issu. 3.2 us the spectrum content manag system in thi section we show two exampl of the us of the spectrum content manag system in our environ. the focu of our previou work ha been content distribut for stream media content [2] and network enabl digit video record [3]. the spectrum system is applic to both scenario as follow. figur 2 show the network enabl dvr (ned) architectur. in thi case all layer of the spectrum architectur resid on the same physic devic in a local configur. the dvr  applic obtain program list from some network sourc, deal with user present through a graphic user interfac (gui), and  interfac with the spectrum system through the content manag layer api. thi combin of higher level function allow the user to select both content to be store and what storag polici to 8 content manag central content manag station content informationus interfac polici manag storag manag storag fetcher edg portal server polici manag storag manag storag fetcher edg portal server distribut content to media endpoint to media endpoint figur 3: spectrum in a content distribut architectur appli to such content. obtain the content (through the network or local) and the subsequ storag on the local system is then handl by the polici and storag manag. the us of spectrum in a stream content distribut  architectur (e.g. prism [2]) is depict in figur 3. in thi environ stream media content (both live, can-live and on-demand) is be distribut to edg portal from where stream endpoint ar be serv. in our environ content distribut and  storag is done from a central content manag station which control sever of the edg portal. the central station allow administr to manag the distribut and storag of content without requir continu commun between the content manag and the edg devic, i.e. onc instruct have been given to edg devic thei can oper independ until chang ar to be made. 3.3 spectrum oper exampl to illustr how spectrum handl refer to content,  consid a spectrum-base pvr applic program to store on dai worth of stream content in a roll window. to set up the roll window, the applic would us the content manag api to creat a polici group and polici refer to the desir content. the establish of the on-dai roll window polici refer would caus the polici manger to ask the storag manag to start receiv the stream. as each chunk of stream data arriv, the polici manag execut the polici refer"s newclip function. the newclip function add a refer to each arriv chunk, and schedul a callback a dai later. at that time, the polici will drop it now dai-old refer to the content and the content will be discard unless it is referenc by some other polici. now, consid the case where the user decid to save part of the content (e.g. a specif program) in the roll window for an extra week. to do thi, the applic request that the content manag add an addit new polici refer to the part of the content to preserv. thu, the preserv content ha two refer to it: on from the roll window and on from the request to preserv the content for an addit week. after on dai the refer from the roll window will be discard, but the content will be 9 ref2, etc. base data url1 url2 (media file...) (media file...) meta store (gener info...) url1 chunk pref rang media chunk, etc.url2 poli host ref1 ref1.file ref1.state figur 4: data layout of spectrum polici store preserv by the second refer. after the addit week ha past, the callback function for the second refer will be call. thi function will discard the remain refer to the content and as there ar no remain refer the content will be freed. in order to function in scenario like the on describ abov, spectrum"s polici manag must manag and maintain all the  refer to variou chunk of media. these refer ar persist and thu must be abl to surviv even if the machin maintain them is reboot. our spectrum polici manag implement accomplish thi us the file and directori structur shown in figur 4. there ar three class of data store, and each class ha it own top level directori. the directori ar: data: thi directori is us by the storag manag to store each activ url"s chunk of media. the media file can be  encod in ani format, for exampl mpeg, window media, or quicktim. note that thi directori is us onli if the storag manag is local. if the polici manag is us an extern storag manag (e.g. a storag applianc), then the media file ar store remot and ar onli remot  referenc by the polici manag. meta: thi directori contain gener meta inform about the storag manag be us and the data it is store.  gener inform is store in the store subdirectori and  includ the locat of the store (local or remot) and  inform about the type of chunk of data the store can handl. the meta directori also contain a subdirectori per-url that contain inform about the chunk of data store. the chunk file contain a list of chunk current store and their refer count. the pref file contain a list of activ polici refer that point to thi url. the rang file contain a list of time rang of data current store.  final, the media file describ the format of the media be store under the current url. poli: thi directori contain a set of host subdirectori. each host subdirectori contain the set of polici refer  creat by that host. inform on each polici refer is broken up into three file. for exampl, a polici refer name ref1 would be store in ref1, ref1.file, and ref1.state. the ref1 file contain inform about the polici refer that doe not chang frequent. thi  inform includ the base-polici and the paramet us to creat the refer. the ref1.file file contain the list of refer to chunk that pref ref1 own. final, the ref1.state file contain option polici-specif state inform that can chang over time. togeth, these file and directori ar us to track refer in our implement of spectrum. note that other implement ar possibl. for exampl, a carrier-grade spectrum manag might store all it polici and refer inform in a high-perform databas system. 10 4. relat work sever author have address the problem of the manag of content in distribut network. much of the work focus on the polici manag aspect. for exampl in [5], the problem of serv multimedia content via distribut server is  consid. content is distribut among server resourc in proport to user demand us a demand dissemin protocol. the  perform of the scheme is benchmark via simul. in [1] content is distribut among sub-cach. the author construct a system emploi variou compon, such as a central router, cach knowledg base, subcach, and a subcach evict judg. the cach knowledg base allow sophist polici to be  emploi. simul is us to compar the propos scheme with well-known replac algorithm. our work differ in that we ar consid more than the polici manag aspect of the problem. after carefulli consid the requir function to implement content manag in the network environ, we have partit the system into three simpl function, name content manag, polici manag and storag manag. thi ha allow us to easili implement and experi with a prototyp system. other relat work involv so call tv recommend  system which ar us in pvr to automat select content for user, e.g. [6]. in the case where spectrum is us in a pvr  configur thi type of system would perform a higher level function and could clearli benefit from the function of the spectrum architectur. final, in the commerci cdn environ vendor (e.g. cisco and netapp) have develop and implement content manag product and tool. unlik the spectrum architectur which allow edg devic to oper in a larg autonom fashion, the  vendor solut typic ar more tightli coupl to a central control and do not have the sophist time-base oper offer by spectrum. 5. conclus and futur work in thi paper we present the design and implement of the spectrum content manag architectur. spectrum allow  storag polici to be appli to larg volum of content to facilit effici storag. specif, the system allow differ polici to be appli to the same content without replic. spectrum can also appli polici that ar time-awar which effect deal with the storag of continu media content. final, the  modular design of the spectrum architectur allow both stand-alon and distribut realiz so that the system can be deploi in a varieti of applic. there ar a number of open issu that will requir futur work. some of these issu includ: • we envis spectrum be abl to manag content on  system rang from larg cdn down to smaller applianc such as tivo [8]. in order for these smaller system to  support spectrum thei will requir network and an extern api. when that api becom avail, we will have to work out how it can be fit into the spectrum architectur. • spectrum name content by url, but we have intention not defin the format of spectrum url, how thei map back to the content"s actual name, or how the name and url should be present to the user. while we previous touch on these issu elsewher [2], we believ there is more work to be done and that consensu-base standard on name need to be written. • in thi paper we"ve focus on content manag for  continu media object. we also believ the spectrum  architectur can be appli to ani type of document includ plain file, but we have yet to work out the detail necessari to support thi in our prototyp environ. • ani project that help allow multimedia content to be  easili share over the internet will have legal hurdl to  overcom befor it can achiev widespread accept. adapt spectrum to meet legal requir will like requir more technic work. 6. refer [1] k. . cheng and y. kambayashi. multicach-base content manag for web cach. proceed of the first intern confer on web inform system engin, jume 2000. [2] c. cranor, m. green, c. kalmanek, d. shur, s. sibal, c. sreenan, and j. van der merw. prism architectur: support enhanc stream servic in a content distribut network. ieee internet comput, juli/august 2001. [3] c. cranor, c. kalmanek, d. shur, s. sibal, c. sreenan, and j. van der merw. ned: a network-enabl digit video record. 11th ieee workshop on local and metropolitan area network, march 2001. [4] expat. expat.sourceforg.net. [5] z. ge, p. ji, and p. shenoi. a demand adapt and local awar (dala) stream media server cluster architectur. nossdav, mai 2002. [6] k. kurapati and s. gutta and d. schaffer and j. martino and j. zimmerman. a multi-agent tv recommend. proceed of the um 2001 workshop, juli 2001. [7] replaytv. www.sonicblu.com. [8] tivo. www.tivo.com. 11 