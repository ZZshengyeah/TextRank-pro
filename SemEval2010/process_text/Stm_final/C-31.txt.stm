apocrita: a distribut peer-to-peer file share system for intranet joshua j. reynold, robbi mcleod, qusai h. mahmoud distribut comput and wireless & telecommun technolog univers of guelph-humber toronto, on, m9w 5l7 canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca abstract mani organ ar requir to author document for variou purpos, and such document mai need to be access by all member of the organ. thi access mai be need for edit or simpli view a document. in some case these document ar share between author, via email, to be edit. thi can easili caus incorrect version to be sent or conflict creat between multipl user try to make amend to a document. there mai even be multipl differ document in the process of be edit. the user mai be requir to search for a particular document, which some search tool such as googl desktop mai be a solut for local document but will not find a document on anoth user"s machin. anoth problem aris when a document is made avail on a user"s machin and that user is offlin, in which case the document is no longer access. in thi paper we present apocrita, a revolutionari distribut p2p file share system for intranet. categori and subject descriptor c.2.4 [comput-commun network]: distribut system - distribut applic. gener term design, experiment, perform. 1. introduct the peer-to-peer (p2p) comput paradigm is becom a complet new form of mutual resourc share over the internet. with the increasingli common place broadband internet access, p2p technolog ha final becom a viabl wai to share document and media file. there ar alreadi program on the market that enabl p2p file share. these program enabl million of user to share file among themselv. while the util of p2p client is alreadi a gigant step forward compar to download file off websit, us such program ar not without their problem. the download file still requir a lot of manual manag by the user. the user still need to put the file in the proper directori, manag file with multipl version, delet the file when thei ar no longer want. we strive to make the process of share document within an intranet easier. mani organ ar requir to author document for variou purpos, and such document mai need to be access by all member of the organ. thi access mai be need for edit or simpli view a document. in some case these document ar sent between author, via email, to be edit. thi can easili caus incorrect version to be sent or conflict creat between multipl user try to make amend to a document. there mai even be multipl differ document in the process of be edit. the user mai be requir to search for a particular document, which some search tool such as googl desktop mai be a solut for local document but will not find a document on anoth user"s machin. furthermor, some organ do not have a file share server or the necessari network infrastructur to enabl on. in thi paper we present apocrita, which is a cost-effect distribut p2p file share system for such organ. the rest of thi paper is organ as follow. in section 2, we present apocrita. the distribut index mechan and protocol ar present in section 3. section 4 present the  peer-topeer distribut model. a proof of concept prototyp is present in section 5, and perform evalu ar discuss in section 6. relat work is present is section 7, and final conclus and futur work ar discuss in section 8. 2. apocrita apocrita is a distribut peer-to-peer file share system, and ha been design to make find document easier in an intranet environ. current, it is possibl for document to be locat on a user's machin or on a remot machin. it is even possibl that differ revis could resid on each node on the intranet. thi mean there must be a manual process to maintain document version. apocrita solv thi problem us two approach. first, due to the inher natur of apocrita, the document will onli resid on a singl logic locat. second, apocrita provid a method of revert to previou document version. apocrita permiss to make digit or hard copi of all or part of thi work for person or classroom us is grant without fee provid that copi ar not made or distribut for profit or commerci advantag and that copi bear thi notic and the full citat on the first page. to copi otherwis, or republish, to post on server or to redistribut to list, requir prior specif permiss and/or a fee. acms"07, march 23-24, 2007, winston-salem, nc, usa. copyright 2007 acm 978-1-59593-629-5/07/0003 â€¦$5.00. 174 will also distribut document across multipl machin to ensur high avail of import document. for exampl, if a machin contain an import document and the machin is current inaccess, the system is capabl of maintain avail of the document through thi distribut mechan. it provid a simpl interfac for search and access file that mai exist either local or remot. the distribut natur of the document is transpar to the user. apocrita support a decentr network model where the peer us a discoveri protocol to determin peer. apocrita is intend for network user on an intranet. the main focu is organ that mai not have a network larg enough to requir a file server and support infrastructur. it elimin the need for document to be manual share between user while be edit and reduc the possibl of conflict version be distribut. the system also provid some redund and in the event of a singl machin failur, no import document will be lost. it is oper system independ, and easi to access through a web browser or through a standalon applic. to decreas the time requir for index a larg number of document, the index process is distribut across avail idl node. local and remot file should be easili access through a virtual mountabl file system, provid transpar for user. 3. distribut index apocrita us a distribut index for all the document that ar avail on the intranet. each node will contain part of the full index, and be awar of what part of the index each other node ha. a node will be abl to contact each node that contain a uniqu portion of the index. in addit, each node ha a separ local index of it own document. but as discuss later, in the current implement, each node ha a copi of the entir index. index of the document is distribut. therefor, if a node is in the process of index mani document, it will break up the work over the node. onc a node"s local index is updat with the new document, the distribut index will then be updat. the current distribut index system consist of three separ modul: nodecontrol, filesend, and nodeindex. the respons of each modul is discuss later in thi section. 3.1 index protocol the protocol we have design for the distribut index is depict in figur 1. figur 1. apocrita distribut index protocol. idl queri: the idl queri is sent out from the initi node to determin which other node mai be abl to help with the overal index process. there ar no paramet sent with the command. the receiv node will respond with either a busi or idl command. if the idl command is receiv, the initi node will add the respond node to a list of avail distribut index helper. in the case of a busi command be receiv, the respond node is ignor. busi: onc a node receiv an idl queri, it will determin whether it can be consid a candid for distribut index. thi determin is base on the overal cpu usag of the node. if the node is us most of it cpu for other process, the node will respond to the idl queri with a busi command. idl: as with the case of the busi respons, the node receiv the idl queri will determin it elig for distribut index. to be consid a candid for distribut index, the overal cpu usag must be at a minimum to all for dedic index of the distribut document. if thi is the case, the node will respond with an idl command. incom file: onc the initi node assembl a set of idl node to assist with the distribut index, it will divid the document to be sent to the node. to do thi, it send an incom file messag, which contain the name of the file as well as the size in byte. after the incom file command ha been sent, the initi node will begin to stream the file to the other node. the initi node will loop through the file that ar to be sent to the other node; each file stream be preced by the incom file command with the appropri paramet. index file: onc the index node ha complet the index process of the set of file, it must send the result index back to the initi node. the index is compris of multipl file, which exist on the file system of the index node. as with the incom file command, the index node stream each index file after send an index file command. the index file command ha two paramet: the first be the name of the index, and the second is the size of the file in byte. send complet: when send the set of file for both the index and the file to be index, the node must notifi the correspond node when the process is complet. onc the initi node is finish send the set of document to be index, it will then send a send complet command indic to the index node that there ar no more file and the node can proce with index the file. in the case of the initi node send the index file, the index node will complet the transfer with the send complet command indic to the initi node that there ar no more index file to be sent and the initi node can then assembl those index file into the main index. the nodecontrol is respons for set up connect with node in the idl state to distribut the index process. us jxta [5], the node control will obtain a set of node. thi set of node is iter and each on is sent the idl queri command. the node that respond with idl ar then collect. the set of idl node includ the node initi the distribut index process, refer to as the local node. onc the collect of idl node is obtain, the node updat the set of control and evenli divid the set of document that ar to be index. for exampl, if there ar 100 document and 10 node (includ the local node) then each node will have 10 document to index. for each index node an instanc of the filesend object is creat. the filesend is awar of the set of document that node is respons for. onc a filesend object ha been creat for each node, the nodecontrol wait for each filesend to complet. when the filesend object have complet the nodecontrol will take the result index from 175 each node and pass them to an instanc of the indexcompil, which maintain the index and the list of filesend. onc the indexcompil ha complet it will return to the idl state and activ the directori scanner to monitor the local own set of document for chang that mai requir reindex. the nodeindex is respons for receiv document sent to it by the initi node and then index them us the lucen engin [7]. onc the index is complet the result index is stream back to the initi node as well as compil in the index node own local index. befor initi the index process it must be sent an idl queri messag. thi is the first command that set off the index process. the index node will determin whether it is consid idl base on the current cpu usag. as outlin in the protocol section if the node is not be us and ha a low overal cpu usag percentag it will return idl to the idl queri command. if the index node cpu usag is abov 50% for a specifi amount of time it is then consid to be busi and will respond to the idl queri command with busi. if a node is determin busi it return to it listen state wait for anoth idl queri from anoth initi node. if the node is determin to be idl it will enter the state where it will receiv file from the initi node that it is respons for index. onc all of the file ar receiv by the initi node, indic by a send complet messag, it start an instanc of the lucen index engin. the file ar store in a temporari directori separ from the node local document that it is respons for maintain an index of. the lucen index writer then index all of the transfer file. the index is store on the drive within a temporari directori separ from the current index. after the index of the file complet the index node enter the state where the index file ar sent back to the initi node. the index node loop through all of the file creat by lucen"s indexwrit and stream them to the initi node. onc these file ar sent back that index is then merg into the index node own full index of the exist file. it then enter the idl state where it will then listen for ani other node that requir distribut the index process. the filesend object is the initi node equival of the index node. it initi the commun between the initi node and the node that will assist in the distribut index. the initi node run mani instanc of the filesend node on for each other node it ha determin to be idl. upon instanti of the filesend it is pass the node that it is respons for contact and the set of file that must be sent. the filesend"s first job is to send the file that ar to be index by the other idl node. the file ar stream on at a time to the other node. it send each file us the incom file command. with that command it send the name of the file be sent and the size in byte. onc all file have been sent the filesend send the send complet command. the filesend creat an instanc of lucen"s indexwrit and prepar to creat the index in a temporari directori on the file system. the filesend will begin to receiv the file that ar to be save within the index. it receiv an index file command with the name of the file and the size in byte. thi file is then stream into the temporari index directori on the filesend node. after the transfer of the index file ha been complet the filesend notifi the instanc of the index compil that it is readi to combin the index. each instanc of the filesend ha it own uniqu section of temporari space to store the index that ha been transfer back from the index node. when notifi the indexcompil it will also pass the locat of the particular filesend directori locat of that index. 4. peer-to-peer distribut apocrita us a peer-to-peer distribut model in order to distribut file. file ar distribut sole from a serv node to a client node without regard for the avail of file piec from other client in the network. thi mean that the file transfer will be fast and effici and should not sever affect the usabl of serv node from the point of view of a local user. the jxta framework [5] is us in order to implement peer-to-peer function. thi ha been decid due to the extrem  shorttimelin of the project which allow us to take advantag of over five year of test and develop and support from mani larg organ emploi jxta in their own product. we ar not concern with ani potenti qualiti problem becaus jxta is consid to be the most matur and stabl peer-to-peer framework avail. us jxta terminolog, there ar three type of peer us in node classif. edg peer ar typic low-bandwidth, non-dedic node. due to these characterist, edg peer ar not us with apocrita. relai peer ar typic higher-bandwidth, dedic node. thi is the classif of all node in the apocrita network, and, as such, ar the default classif us. rendezv peer ar us to coordin messag pass between node in the apocrita network. thi mean that a minimum of on rendezv peer per subnet is requir. 4.1 peer discoveri the apocrita server subsystem us the jxta peer discoveri protocol (pdp) in order to find particip peer within the network as shown in figur 2. figur 2. apocrita peer discoveri process. 176 the pdp listen for peer advertis from other node in the apocrita swarm. if a peer advertis is detect, the server will attempt to join the peer group and start activ contribut to the network. if no peer ar found by the discoveri servic, the server will creat a new peer group and start advertis thi peer group. thi new peer group will be period advertis on the network; ani new peer join the network will attach to thi peer group. a distinct advantag of us the jxta pdp is that apocrita doe not have to be sensit to particular network nuanc such as maximum transmiss unit (mtu). in addit, apocrita doe not have to support on-to-mani packet deliveri method such as multicast and instead can reli on jxta for thi support. 4.2 index queri oper all node in the apocrita swarm have a complet and up-to-date copi of the network index store local. thi make queri the index for search result trivial. unlik the gnutella protocol, a queri doe not have to propag throughout the network. thi also mean that the time to return queri result is veri fast - much faster than protocol that reli on node in the network to pass the queri throughout the network and then wait for result. thi is demonstr in figur 3. figur 3. apocrita queri oper. each document in the swarm ha a uniqu document identif number (id). a node will queri the index and a result will be return with both the document id number as well as a list of peer with a copi of the match document id. it is then the respons of the search peer to contact the peer in the list to negoti file transfer between the client and server. 5. prototyp implement apocrita us the lucen framework [7], which is a project under develop by the apach softwar foundat. apach lucen is a high-perform, full-featur text search engin librari written entir in java. in the current implement, apocrita is onli capabl of index plain text document. apocrita us the jxta framework [5] as a peer-to-peer transport librari between node. jxta is us to pass both messag and file between node in the search network. by us jxta, apocrita take advantag of a reliabl, and proven peer-to-peer transport mechan. it us the pipe facil in order to pass messag and file between node. the pipe facil provid mani differ type of pipe advertis. thi includ an unsecur unicast pipe, a secur unicast pipe, and a propag unsecur pipe. messag pass is us to pass statu messag between node in order to aid in index, search, and retriev. for exampl, a node attempt to find an idl node to particip in index will queri node via the messag facil. idl node will repli with a statu messag to indic thei ar avail to start index. file pass is us within apocrita for file transfer. after a file ha been search for and locat within the peer group, a jxta socket will be open and file transfer will take place. a jxta socket is similar to a standard java socket, howev a jxta socket us jxta pipe in underli network transport. file pass us an unsecur unicast pipe in order to transfer data. file pass is also us within apocrita for index transfer. index transfer work exactli like a file transfer. in fact, the index transfer actual pass the index as a file. howev, there is on kei differ between file transfer and index transfer. in the case of file transfer, a socket is creat between onli two node. in the case of index transfer, a socket must be creat between all node in the network in order to pass the index, which allow for all node to have a full and complet index of the entir network. in order to facilit thi transfer effici, index transfer will us an unsecur propag pipe to commun with all node in the apocrita network. 6. perform evalu it is difficult to object benchmark the result obtain through apocrita becaus there is no other system current avail with the same goal as apocrita. we have, howev, evalu the perform of the critic section of the system. the critic section were determin to be the process that ar the most time intens. the evalu wa complet on standard lab comput on a 100mb/s ethernet lan; the machin run window xp with a pentium 4 cpu run at 2.4ghz with 512 mb of ram. the index time ha been run against both: the time magazin collect [8], which contain 432 document and 83 queri and their most relev result, and the npl collect [8] that ha a total of 11,429 document and 93 queri with expect result. each document rang in size between 4kb and 8kb. as figur 4 demonstr, the number of node involv in the index process affect the time taken to complet the index  processsometim even drastic. figur 4. node vs. index time. the differ in go from on index node to two index node is the most drastic and equat to an index time 37% faster than a singl index node. the differ between two 177 index node and three index node is still signific and repres a 16% faster time than two index node. as the number of index node increas the result ar less dramat. thi can be attribut to the time overhead associ with have mani node perform index. the time need to commun with a node is constant, so as the number of node increas, thi constant becom more preval. also, the complex of join the index result is a complex oper and is complic further as the number of index node increas. socket perform is also a veri import part of apocrita. benchmark were perform us a 65mb file on a system with both the client and server run local. thi wa done to isol possibl network issu. although less drastic, similar result were shown when the client and server run on independ hardwar. in order to mitig possibl unexpect error, each test wa run 10 time. figur 5. java socket vs. jxta socket. as figur 5 demonstr, the perform of jxta socket is abysm as compar to the perform of standard java socket. the minimum transfer rate obtain us java socket is 81,945kb/s while the minimum transfer rater obtain us jxta socket is much lower at 3, 805kb/s. the maximum transfer rater obtain us java socket is 97,412kb/s while the maximum transfer rate obtain us jxta socket is 5,530kb/s. final, the averag transfer rate us java socket is 87,540kb/s while the averag transfer rate us jxta socket is 4,293kb/s. the major problem found in these benchmark is that the underli network transport mechan doe not perform as quickli or effici as expect. in order to garner a perform increas, the jxta framework need to be substitut with a more tradit approach. the index time is also a bottleneck and will need to be improv for the overal qualiti of apocrita to be improv. 7. relat work sever decentr p2p system [1, 2, 3] exist todai that apocrita featur some of their function. howev, apocrita also ha uniqu novel search and index featur that make thi system uniqu. for exampl, majest-12 [4] is a distribut search and index project design for search the internet. each user would instal a client, which is respons for index a portion of the web. a central area for queri the index is avail on the majest-12 web page. the index itself is not distribut, onli the act of index is distribut. the distribut index aspect of thi project most close relat apocrita goal. yaci [6] is a peer-to-peer web search applic. yaci consist of a web crawler, an index, a built-in databas engin, and a p2p index exchang protocol. yaci is design to maintain a distribut index of the internet. it us a distribut hash tabl (dht) to maintain the index. the local node is us to queri but all result that ar return ar access on the internet. yaci us mani peer and dht to maintain a distribut index. apocrita will also us a distribut index in futur implement and mai benefit from us an implement of a dht. yaci howev, is design as a web search engin and, as such solv a much differ problem than apocrita. 8. conclus and futur work we present apocrita, a distribut p2p search and index system intend for network user on an intranet. it can help organ with no network file server or necessari network infrastructur to share document. it elimin the need for document to be manual share among user while be edit and reduc the possibl of conflict version be distribut. a proof of concept prototyp ha been construct, but the result from measur the network transport mechan and the index time were not as impress as initi envis. despit these shortcom, the experi gain from the design and implement of apocrita ha given us more insight into build challeng distribut system. for futur work, apocrita will have a smart content distribut model in which a singl instanc of a file can intellig and transpar replic throughout the network to ensur a copi of everi import file will alwai be avail regardless of the avail of specif node in the network. in addit, we plan to integr a revis control system into the content distribut portion of apocrita so that user could have the abil to updat an exist file that thei found and have the old revis maintain and the new revis propag. final, the current implement ha some overhead and redund due to the fact that the entir index is maintain on each individu node, we plan to design a distribut index. 9. refer [1] rodrigu, r., liskov, b., shrira, l.: the design of a robust peer-to-peer system. avail onlin: http://www.pmg.lc.mit.edu/~rodrigo/ew02-robust.pdf. [2] chawath, y., ratnasami, s., breslau, l., lanham, n., and chenker, s.: make gnutella-like p2p system scalabl. in proceed of sigcomm"03, karlsruh, germani. [3] harvest: a distribut search system: http://harvest.sourceforg.net. [4] majest-12: distribut search engin: http://www.majest12.co.uk. [5] jxta: http://www.jxta.org. [6] yaci: distribut p2p-base web index: http://www.yaci.net/yaci. [7] lucen search engin librari: http://lucen.apach.org. [8] test collect (time magazin and npl): www.dc.gla.ac.uk/idom/ir_resourc/test_collect. 178 