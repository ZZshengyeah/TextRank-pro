clear algorithm for barter exchang market: enabl nationwid kidnei exchang david j. abraham comput scienc depart carnegi mellon univers dabraham@cs.cmu.edu avrim blum comput scienc depart carnegi mellon univers avrim@cs.cmu.edu tuoma sandholm comput scienc depart carnegi mellon univers sandholm@cs.cmu.edu abstract in barter-exchang market, agent seek to swap their item with on anoth, in order to improv their own util. these swap consist of cycl of agent, with each agent receiv the item of the next agent in the cycl. we  focu mainli on the upcom nation kidnei-exchang  market, where patient with kidnei diseas can obtain  compat donor by swap their own will but incompat donor. with over 70,000 patient alreadi wait for a cadav kidnei in the us, thi market is seen as the onli ethic wai to significantli reduc the 4,000 death per year attribut to kidnei diseas. the clear problem involv find a social welfar  maxim exchang when the maximum length of a cycl is fix. long cycl ar forbidden, sinc, for incent reason, all transplant in a cycl must be perform simultan. also, in barter-exchang gener, more agent ar affect if on drop out of a longer cycl. we prove that the clear problem with thi cycl-length constraint is np-hard.  solv it exactli is on of the main challeng in establish a nation kidnei exchang. we present the first algorithm capabl of clear these market on a nationwid scale. the kei is increment  problem formul. we adapt two paradigm for the task: constraint gener and column gener. for each, we develop techniqu that dramat improv both runtim and memori usag. we conclud that column gener scale drastic better than constraint gener. our  algorithm also support sever gener, as demand by real-world kidnei exchang. our algorithm replac cplex as the clear algorithm of the allianc for pair donat, on of the lead  kidnei exchang. the match run ar conduct everi two week and transplant base on our optim have  alreadi been conduct. categori and subject descriptor j.4 [comput applic]: social and behavior  scienc-econom; f.2 [analysi of algorithm and  problem complex]: [gener] gener term algorithm, econom 1. introduct the role of kidnei is to filter wast from blood. kidnei failur result in accumul of thi wast, which lead to death in month. on treatment option is dialysi, in which the patient goe to a hospit to have hi/her blood filter by an extern machin. sever visit ar requir per week, and each take sever hour. the qualiti of life on dialysi can be extrem low, and in fact mani patient opt to withdraw from dialysi, lead to a natur death. onli 12% of dialysi patient surviv 10 year [23]. instead, the prefer treatment is a kidnei transplant. kidnei transplant ar by far the most common transplant. unfortun, the demand for kidnei far outstrip suppli. in the unit state in 2005, 4,052 peopl di wait for a life-save kidnei transplant. dure thi time, almost 30,000 peopl were ad to the nation wait list, while onli 9,913 peopl left the list after receiv a  deceaseddonor kidnei. the wait list current ha over 70,000 peopl, and the median wait time rang from 2 to 5 year, depend on blood type.1 for mani patient with kidnei diseas, the best option is to find a live donor, that is, a healthi person will to donat on of hi/her two kidnei. although there ar  marketplac for bui and sell live-donor kidnei, the commerci of human organ is almost univers  regard as uneth, and the practic is often explicitli  illeg, such as in the us. howev, in most countri, live donat is legal, provid it occur as a gift with no  financi compens. in 2005, there were 6,563 live donat in the us. the number of live donat would have been much higher if it were not for the fact that, frequent, a potenti donor 1 data from the unit network for organ share [21]. 295 and hi intend recipi ar blood-type or tissu-type  incompat. in the past, the incompat donor wa sent home, leav the patient to wait for a deceas-donor  kidnei. howev, there ar now a few region kidnei exchang in the unit state, in which patient can swap their  incompat donor with each other, in order to each obtain a compat donor. these market ar exampl of barter exchang. in a barter-exchang market, agent (patient) seek to swap their item (incompat donor) with each other. these swap consist of cycl of agent, with each agent receiv the item of the next agent in the cycl. barter exchang ar ubiquit: exampl includ peerflix (dvd) [11], read it swap it (book) [12], and intervac (holidai hous) [9]. for mani year, there ha even been a larg shoe exchang in the unit state [10]. peopl with differ-size feet us thi to avoid have to bui two pair of shoe. leg ampute have a separ exchang to share the cost of bui a singl pair of shoe. we can encod a barter exchang market as a direct graph g = (v, e) in the follow wai. construct on vertex for each agent. add a weight edg e from on agent vi to anoth vj, if vi want the item of vj. the weight we of e repres the util to vi of obtain vj"s item. a cycl c in thi graph repres a possibl swap, with each agent in the cycl obtain the item of the next agent. the weight wc of a cycl c is the sum of it edg weight. an exchang is a collect of disjoint cycl. the weight of an exchang is the sum of it cycl weight. a social welfar maxim exchang is on with maximum weight. figur 1 illustr an exampl market with 5 agent, {v1, v2, . . . , v5}, in which all edg have weight 1. the  market ha 4 cycl, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclus) maxim  exchang, name m1 = {c4} and m2 = {c1, c3}. exchang m1 ha both maximum weight and maximum cardin (i.e., it includ the most edg/vertic). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 figur 1: exampl barter exchang market. the clear problem is to find a maximum-weight  exchang consist of cycl with length at most some small constant l. thi cycl-length constraint aris natur for sever reason. for exampl, in a kidnei exchang, all oper in a cycl have to be perform simultan; otherwis a donor might back out after hi incompat partner ha receiv a kidnei. (on cannot write a bind contract to donat an organ.) thi give rise to a logist constraint on cycl size: even if all the donor ar oper on first and the same personnel and facil ar us to then oper on the done, a k-cycl requir between 3k and 6k doctor, around 4k nurs, and almost 2k oper room. due to such resourc constraint, the upcom nation kidnei exchang market will like allow onli cycl of length 2 and 3. anoth motiv for short cycl is that if the cycl fail to exchang, fewer agent ar affect. for  exampl, last-minut test in a kidnei exchang often reveal new incompat that were not detect in the initi test (base on which the compat graph wa  construct). more gener, an agent mai drop out of a cycl if hi prefer have chang, or he/she simpli fail to  fulfil hi oblig (such as send a book to anoth agent in the cycl) due to forget. in section 3, we show that (the decis version of) the clear problem is np-complet for l ≥ 3. on approach then might be to look for a good heurist or  approxim algorithm. howev, for two reason, we aim for an exact algorithm base on an integ-linear program (ilp) formul, which we solv us special tree search. • first, ani loss of optim could lead to unnecessari patient death. • second, an attract featur of us an ilp  formul is that it allow on to easili model a number of variat on the object, and to add addit  constraint to the problem. for exampl, if 3-cycl ar believ to be more like to fail than 2-cycl, then on can simpli give them a weight that is  appropri lower than 3/2 the weight of a 2-cycl. or, if for variou (e.g., ethic) reason on requir a  maximum cardin exchang, on can at least in a second pass find the solut (out of all maximum cardin solut) that ha the fewest 3-cycl. other  variat on can solv for includ find variou form of fault toler (non-disjoint) collect of cycl in the event that certain pair that were thought to be compat turn out to be incompat after all. in thi paper, we present the first algorithm capabl of clear these market on a nationwid scale. straight-forward ilp encod ar too larg to even construct on current hardwar - not to talk about solv them. the kei then is increment problem formul. we adapt two  paradigm for the task: constraint gener and column  gener. for each, we develop a host of (mainli  problemspecif) techniqu that dramat improv both runtim and memori usag. 1.1 prior work sever recent paper have us simul and  marketclear algorithm to explor the impact of a nation  kidnei exchang [13, 20, 6, 14, 15, 17]. for exampl,  us edmond"s maximum-match algorithm [4], [20] show that a nation pairwis-exchang market (us length-2  cycl onli) would result in more transplant, reduc wait time, and save of $750 million in heath care cost over 5 year. those result ar conserv in two wai. firstli, the simul market contain onli 4,000 initi patient, with 250 patient ad everi 3 month. it ha been  report to us that the market could be almost doubl thi size. secondli, the exchang were restrict to length-2  cycl (becaus that is all that can be model as maximum match, and solv us edmond"s algorithm).  allow length-3 cycl lead to addit signific gain. thi ha been demonstr on kidnei exchang market with 100 patient by us cplex to solv an integ-program encod of the clear problem [15]. in thi paper, we 296 present an altern algorithm for thi integ program that can clear market with over 10,000 patient (and that same number of will donor). allow cycl of length more than 3 often lead to no improv in the size of the exchang [15]. (furthermor, in a simplifi theoret model, ani kidnei exchang can be convert into on with cycl of length at most 4 [15].) whilst thi doe not hold for gener barter exchang, or even for all kidnei exchang market, in section 5.2.3 we make us of the observ that short cycl suffic to  dramat increas the speed of our algorithm. at a high-level, the clear problem for barter exchang is similar to the clear problem (aka winner  determin problem) in combinatori auction. in both set, the idea is to gather all the pertin inform about the agent into a central clear point and to run a central clear algorithm to determin the alloc. both  problem ar np-hard. both ar best solv us tree search techniqu. sinc 1999, signific work ha been done in comput scienc and oper research on faster optim tree search algorithm for clear combinatori auction. (for a recent review, see [18].) howev, the kidnei  exchang clear problem (with a limit of 3 or more on  cycl size) is differ from the combinatori auction clear problem in signific wai. the most import differ is that the natur formul of the combinatori  auction problem tend to easili fit in memori, so time is the bottleneck in practic. in contrast, the natur formul of the kidnei exchang problem (with l = 3) take at least cubic space in the number of patient to even model, and therefor memori becom a bottleneck much befor time doe when us standard tree search, such as  branch-andcut in cplex, to tackl the problem. (on a 1gb comput and a realist standard instanc gener, discuss later, cplex 10.010 run out of memori on five of the ten  900patient instanc and ten of the ten 1,000-patient instanc that we gener.) therefor, the approach that have been develop for combinatori auction cannot handl the kidnei exchang problem. 1.2 paper outlin the rest of the paper is organ as follow. section 2 discuss the process by which we gener realist kidnei exchang market data, in order to benchmark the clear algorithm. section 3 contain a proof that the market  clear decis problem is np-complet. section 4 and 5 each contain an ilp formul of the clear problem. we also detail in those section our techniqu us to solv those program on larg instanc. section 6 present experi on the variou techniqu. section 7 discuss recent  field of our algorithm. final, we present our conclus in section 8, and suggest futur research direct. 2. market characterist and instanc gener we test the algorithm on simul kidnei exchang  market, which ar gener by a process describ in saidman et al. [17]. thi process is base on the extens nationwid data maintain by the unit network for organ share (uno) [21], so it gener a realist instanc  distribut. sever paper have us variat of thi process to demonstr the effect of a nation kidnei exchang (extrapol from small instanc or restrict the  clear to 2-cycl) [6, 20, 14, 13, 15, 17]. briefli, the process involv gener patient with a random blood type, sex, and probabl of be tissu-type incompat with a randomli chosen donor. these  probabl ar base on actual real-world popul data. each patient is assign a potenti donor with a random blood type and relat to the patient. if the patient and potenti donor ar incompat, the two ar enter into the  market. blood type and tissu type inform is then us to decid on which patient and donor ar compat. on complic, handl by the gener, is that if the  patient is femal, and she ha had a child with her potenti donor, then the probabl that the two ar incompat increas. (thi is becaus the mother develop antibodi to her partner dure pregnanc.) final, although our  algorithm can handl more gener weight function, patient have a util of 1 for compat donor, sinc their surviv probabl is not affect by the choic of donor [3]. thi mean that the maximum-weight exchang ha maximum cardin. tabl 1 give lower and upper bound on the size of a maximum-cardin exchang in the kidnei-exchang  market. the lower bound were found by clear the market with length-2 cycl onli, while the upper bound had no  restrict on cycl length. for each market size, the bound were comput over 10 randomli gener market. note that there can be a larg amount of variabl in the  market - in on 5000 patient market, less than 1000 patient were in the maximum-cardin exchang. maximum exchang size length-2 cycl onli arbitrari cycl patient mean max mean max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 tabl 1: upper and lower bound on exchang size. tabl 2 give addit characterist of the kidnei-exchang market. note that a market with 5000 patient can alreadi have more than 450 million cycl of length 2 and 3. edg length 2 & 3 cycl patient mean max mean max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 tabl 2: market characterist. 297 3. problem complex in thi section, we prove that (the decis version of) the market clear problem with short cycl is np-complet. theorem 1. given a graph g = (v, e) and an integ l ≥ 3, the problem of decid if g admit a perfect cycl cover contain cycl of length at most l is np-complet. proof. it is clear that thi problem is in np. for  nphard, we reduc from 3d-match, which is the  problem of, given disjoint set x, y and z of size q, and a set of tripl t ⊆ x × y × z, decid if there is a disjoint subset m of t with size q. on straightforward idea is to construct a tripartit graph with vertex set x ∪ y ∪ z and direct edg (xa, yb), (yb, zc), and (zc, xa) for each tripl ti = {xa, yb, zc} ∈ t. howev, it is not too hard to see that thi encod fail becaus a perfect cycl cover mai includ a cycl with no correspond tripl. instead then, we us the follow reduct. given an instanc of 3d-match, construct on vertex for each  element in x, y and z. for each tripl, ti = {xa, yb, zc} construct the gadget in figur 2, which is a similar to on in garei and johnson [5, pp 68-69]. note that the gadget intersect onli on vertic in x ∪ y ∪ z. it is clear that thi construct can be done in polynomi time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i l−1 l−1 l−1 x_a^i x_a ... 2 31 1 figur 2: np-complet gadget for tripl ti and maximum cycl length l. let m be a perfect 3d-match. we will show the  construct admit a perfect cycl cover by short cycl. if ti = {xa, yb, zc} ∈ m, add from ti"s gadget the three  lengthl cycl contain xa, yb and zc respect. also add the cycl ª xi a, yi b, zi c « . otherwis, if ti /∈ m, add the three  lengthl cycl contain xi a, yi b and zi c respect. it is clear that all vertic ar cover, sinc m partit x × y × z. convers, suppos we have a perfect cover by short  cycl. note that the construct onli ha short cycl of length 3 and l, and no short cycl involv distinct  vertic from two differ gadget. it is easi to see then that in a perfect cover, each gadget ti contribut cycl  accord to the case abov: ti ∈ m, or ti /∈ m. henc, there exist a perfect 3d-match in the origin instanc. 4. solut approach base on an edg formul in thi section, we consid a formul of the clear problem as an ilp with on variabl for each edg. thi encod is base on the follow classic algorithm for solv the direct cycl cover problem with no cycl-length constraint. given a market g = (v, e), construct a bipartit graph with on vertex for each agent, and on vertex for each item. add an edg ev with weight 0 between each agent v and it own item. at thi point, the encod is a perfect match. now, for each edg e = (vi, vj) in the origin market, add an edg e with weight we between agent vi and the item of vj. perfect match in thi encod correspond exactli with cycl cover, sinc whenev an agent"s item is taken, it must receiv some other agent"s item. it follow that the unrestrict clear problem can be solv in polynomi time by find a maximum-weight perfect match.  figur 3 contain the bipartit graph encod of the exampl market from figur 1. the weight-0 edg ar encod by dash line, while the market edg ar in bold. item agent v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 figur 3: perfect match encod of the market in figur 1. altern, we can solv the problem by encod it as an ilp with on variabl for each edg in the origin market graph g. thi ilp, given below, ha the advantag that it can be extend natur to deal with cycl length constraint. therefor, for the rest of thi section, thi is the approach we will pursu. max e∈e wee such that for all vi ∈ v , the conserv constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capac constraint eout=(vi,vj ) eout ≤ 1 ar satisfi. if cycl ar allow to have length at most l, it is easi to see that we onli need to make the follow chang to the ilp. for each length-l path (throughout the  paper, we do not includ cycl in the definit of path) p = ep1 , ep2 , . . . , epl , add a constraint ep1 + ep2 + . . . + epl ≤ l − 1, which preclud path p from be in ani feasibl solut. unfortun, in a market with onli 1000 patient, the number of length-3 path is in excess of 400 million, and so we cannot even construct thi ilp without run out of memori. therefor, we us a tree search with an increment  formul approach. specif, we us cplex, though 298 we add constraint as cut plane dure the tree search process. we begin with onli a small subset of the constraint in the ilp. sinc thi ilp is small, cplex can solv it lp relax. we then check whether ani of the miss  constraint ar violat by the fraction solut. if so, we gener a set of these constraint, add them to the ilp, and repeat. even onc all constraint ar satisfi, there mai be no integr solut match the fraction upper bound, and even if there were, the lp solver might not find it. in these case, cplex branch on a variabl (we us cplex"s default branch strategi), and gener on new search node correspond to each of the children. at each node of the search tree that is visit, thi process of solv the lp and ad constraint is repeat. clearli, thi approach yield an optim solut onc the tree search finish. we still need to explain the detail of the constraint seeder (i.e., select which constraint to begin with) and the  constraint gener (i.e., select which violat constraint to includ). we describ these briefli in the next two  subsect, respect. 4.1 constraint seeder the main constraint seeder we develop forbid ani path of length l − 1 that doe not have an edg close the cycl from it head to it tail. while it is computation  expens to find these constraint, their addit focus the search awai from path that cannot be in the final solut. we also tri seed the lp with a random collect of constraint from the ilp. 4.2 constraint gener we experi with sever constraint gener. in each, given a fraction solut, we construct the subgraph of edg with posit valu. thi graph is much smaller than the origin graph, so we can perform the follow comput effici. in our first constraint gener, we simpli search for length-l path with valu sum more than l − 1. for ani such path, we restrict it sum to be at most l − 1. note that if there is a cycl c with length |c| > l, it could contain as mani as |c| violat path. in our second constraint gener, we onli add on  constraint for such cycl: the sum of edg in the cycl can be at most |c|(l − 1)/l . thi gener made the algorithm slower, so we went in the other direct in develop our final gener. it add on constraint per violat path p, and furthermor, it add a constraint for each path with the same interior vertic (not count the endpoint) as p. thi improv the overal speed. 4.3 experiment perform it turn out that even with these improv, the edg formul approach cannot clear a kidnei exchang with 100 vertic in the time the cycl formul (describ later in section 5) can clear on with 10,000 vertic. in other word, column gener base approach turn out to be drastic better than constraint gener base approach. therefor, in the rest of the paper, we will focu on the cycl formul and the column gener base approach. 5. solut approach base on a cycl formul in thi section, we consid a formul of the clear problem as an ilp with on variabl for each cycl. thi encod is base on the follow classic algorithm for solv the direct cycl cover problem when cycl have length 2. given a market g = (v, e), construct a new graph on v with a weight wc edg for each cycl c of length 2. it is easi to see that match in thi new graph correspond to cycl cover by length-2 cycl in the origin market graph. henc, the market clear problem with l = 2 can be solv in polynomi time by find a maximum-weight match. c_1 v 1 v 2 v 3 v 4 c_3c_2 figur 4: maximum-weight match encod of the market in figur 1. we can gener thi encod for arbitrari l. let c(l) be the set of all cycl of g with length at most l. then the follow ilp find the maximum-weight cycl cover by c(l) cycl: max c∈c(l) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ v with c ∈ {0, 1} ∀c ∈ c(l) 5.1 edg vs cycl formul in thi section, we consid the merit of the edg  formul and cycl formul. the edg formul can be solv in polynomi time when there ar no constraint on the cycl size. the cycl formul can be solv in polynomi time when the cycl size is at most 2. we now consid the case of short cycl of length at most l, where l ≥ 3. our tree search algorithm us the lp relax of these formul to provid upper bound on the optim solut. these bound help prune subtre and guid the search in the usual wai. theorem 2. the lp relax of the cycl formul weakli domin the lp relax of the edg formul. proof. consid an optim solut to the lp  relax of the cycl formul. we show how to construct an equival solut in the edg formul. for each edg in the graph, set it valu as the sum of valu of all the cycl of which it is a member. also, defin the valu of a vertex in the same manner. becaus of the cycl  constraint, the conserv and capac constraint of the edg encod ar clearli satisfi. it remain to show that none of the path constraint ar violat. let p be ani length-l path in the graph. sinc p ha l−1 interior vertic (not count the endpoint), the valu sum of these interior vertic is at most l−1. now, for ani cycl c of length at most l, the number of edg it ha in p, which we denot by ec(p), is at most the number of interior vertic it ha in p, which we denot by vc(p). henc, È e∈p e = È c∈c(l) c∗ec(p) ≤ È c∈c(l) c∗vc(p) = È v∈p v = l−1. 299 the convers of thi theorem is not true. consid a graph which is simpli a cycl with n edg. clearli, the lp  relax of the cycl formul ha optim valu 0, sinc there ar no cycl of size at most l. howev, the edg  formul ha a solut of size n/2, with each edg have valu 1/2. henc, the cycl formul is tighter than the edg  formul. addition, for a graph with m edg, the edg formul requir o(m3 ) constraint, while the cycl  formul requir onli o(m2 ). 5.2 column gener for the lp tabl 2 show how the number of cycl of length at most 3 grow with the size of the market. with on variabl per cycl in the cycl formul, cplex cannot even clear market with 1,000 patient without run out of  memori (see figur 6). to address thi problem, we us an increment formul approach. the first step in lp-guid tree search is to solv the lp relax. sinc the cycl formul doe not fit in memori, thi lp stage would fail immedi without an increment formul approach. howev, motiv by the observ that an exchang solut can includ onli a tini fraction of the cycl, we explor the approach of us column (i.e., cycl) gener. the idea of column gener is to start with a restrict lp contain onli a small number of column (variabl, i.e., cycl), and then to repeatedli add column until an optim solut to thi partial formul lp is an  optim solut to the origin (aka master) lp. we explain thi further by wai of an exampl. consid the market in figur 1 with l = 2. figur 5 give the correspond master lp, p, and it dual, d. primal p max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 dual d min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 figur 5: cycl formul. let p be the restrict of p contain column c1 and c3 onli. let d be the dual of p , that is, d is just d without the constraint c2. becaus p and d ar small, we can solv them to obtain opt(p ) = opt(d ) = 4, with cop t (p ) = c1 = c3 = 1 and vop t (d ) = v1 = v2 = v3 = v4 = 1 . while cop t (p ) must be a feasibl solut of p, it turn out (fortun) that vop t (d ) is feasibl for d, so that opt(d ) ≥ opt(d). we can verifi thi by check that vop t (d ) satisfi the constraint of d not alreadi in  di.e. constraint c2. it follow that opt(p ) = opt(d ) ≥ opt(d) = opt(p), and so vop t (p ) is provabl an  optim solut for p, even though p is contain a onli strict subset of the column of p. of cours, it mai turn out (unfortun) that vop t (d ) is not feasibl for d. thi can happen abov if vop t (d ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 . although we can still see that opt(d ) = opt(d), in gener we cannot prove thi becaus d and p ar too larg to solv. instead, becaus constraint c2 is violat, we add column c2 to p , updat d , and repeat. the problem of find a violat constraint is call the price problem. here, the price of a column (cycl in our set) is the differ between it weight, and the dual-valu sum of the cycl"s vertic. if ani column of p ha a posit price, it correspond constraint is violat and we have not yet proven optim. in thi case, we must continu gener column to add to p . 5.2.1 price problem for smaller instanc, we can maintain an explicit  collect of all feasibl cycl. thi make the price problem easi and effici to solv: we simpli travers the collect of cycl, and look for cycl with posit price. we can even find cycl with the most posit price, which ar the on most like to improv the object valu of restrict lp [1]. thi approach doe not scale howev. a market with 5000 patient can have as mani as 400 million cycl of length at most 3 (see tabl 2). thi is too mani cycl to keep in memori. henc, for larger instanc, we have to gener feasibl cycl while look for on with a posit price. we do thi us a depth-first search algorithm on the market graph (see figur 1). in order to make thi search faster, we  explor vertic in non-decreas valu order, as these vertic ar more like to belong to cycl with posit weight. we also us sever prune rule to determin if the current search path can lead to a posit weight cycl. for  exampl, at a given vertex in the search, we can prune base on the fact that everi vertex we visit from thi point onward will have valu at least as great the current vertex. even with these prune rule, column gener is a bottleneck. henc, we also implement the follow  optim. whenev the search exhaust prove that a vertex belong to no posit price cycl, we mark the vertex and do not us it as the root of a depth-first search until it dual valu decreas. in thi wai, we avoid unnecessarili repeat our comput effort from a previou column gener iter. final, it can sometim be benefici for column  gener to includ sever posit-price column in on  iter, sinc it mai be faster to gener a second column, onc the first on is found. howev, we avoid thi for the follow reason. if we attempt to find more posit-price column than there ar to be found, or if the column ar far apart in the search space, we end up have to gener and check a larg part of the collect of feasibl cycl. in our experi, we have seen thi occur in market with hundr of million of cycl, result in prohibit  expens comput cost. 5.2.2 column seed even if there is onli a small gap to the master lp  relax, column gener requir mani iter to  improv the object valu of the restrict lp. each of these 300 iter is expens, as we must solv the price problem, and re-solv the restrict lp. henc, although we could  begin with no column in the restrict lp, it is much faster to seed the lp with enough column that the optim  object valu is not too far from the master lp. of cours, we cannot includ so mani column that we run out of memori. we experi with sever column seeder. in on class of seeder, we us a heurist to find an exchang, and then add the cycl of that exchang to the initi restrict lp. we implement two heurist. the first is a greedi algorithm: for each vertex in a random order, if it is  uncov, we attempt to includ a cycl contain it and other uncov vertic. the other heurist us  special maximum-weight match code [16] to find an optim cover by length-2 cycl. these heurist perform extrem well, especi  take into account the fact that thei onli add a small  number of column. for exampl, tabl 1 show that an  optim cover by length-2 cycl ha almost as much weight as the exchang with unrestrict cycl size. howev, we have enough memori to includ hundr-of-thousand of addit column and therebi get closer still to the upper bound. our best column seeder construct a random collect of feasibl cycl. sinc a market with 5000 patient can have as mani as 400 million feasibl cycl, it take too long to gener and travers all feasibl cycl, and so we do not includ a uniformli random collect. instead, we perform a random walk on the market graph (see, for exampl, figur 1), in which, after each step of the walk, we test whether there is an edg back onto our path that form a feasibl cycl. if we find a cycl, it is includ in the restrict lp, and we start a new walk from a random vertex. in our experi (see section 6), we us thi algorithm to seed the lp with 400,000 cycl. thi last approach outperform the heurist seeder  describ abov. howev, in our algorithm, we us a  combin that take the union of all column from all three  seeder. in figur 6, we compar the perform of the  combin seeder against the combin without the random collect seeder. we do not plot the perform of the  algorithm without ani seeder at all, becaus it can take hour to clear market we can otherwis clear in a few minut. 5.2.3 prove optim recal that our aim is to find an optim solut to the master lp relax. us column gener, we can prove that a restrict-primal solut is optim onc all column have non-posit price. unfortun though, our clear problem ha the so-call tail-off effect [1, section 6.3], in which, even though the restrict primal is optim in hindsight, a larg number of addit iter ar requir in order to prove optim (i.e., elimin all posit-price column). there is no good gener solut to the tail-off effect. howev, to mitig thi effect, we take advantag of the follow problem-specif observ. recal from  section 1.1 that, almost alwai, a maximum-weight exchang with cycl of length at most 3 ha the same weight as an  unrestrict maximum-weight exchang. (thi doe not mean that the solver for the unrestrict case will find a  solut with short cycl, howev.) furthermor, the  unrestrict clear problem can be solv in polynomi time (recal section 4). henc, we can effici comput an upper bound on the master lp relax, and, whenev the restrict primal achiev thi upper bound, we have proven optim without necessarili have to elimin all posit-price column! in order for thi to improv the run time of the overal algorithm, we need to be abl to clear the unrestrict  market in less time than it take column gener to elimin all the posit-price cycl. even though the first  problem is polynomi-time solvabl, thi is not trivial for larg instanc. for exampl, for a market with 10,000 patient and 25 million edg, special maximum-weight  match code [16] wa too slow, and cplex ran out of memori on the edg formul encod from section 4. to make thi idea work then, we us column gener to solv the edg formul. thi involv start with a small random subset of the edg, and then ad posit price edg on-by-on until none remain. we conduct thi secondari column  gener not in the origin market graph g, but in the perfect match bipartit graph of figur 3. we do thi so that we onli need to solv the lp, not the ilp, sinc the integr gap in the perfect match bipartit graph is 1-i.e. there alwai exist an integr solut that achiev the fraction upper bound. the result speedup to the overal algorithm is  dramat, as can be seen in figur 6. 5.2.4 column manag if the optim valu of the initi restrict lp p is far from the the master lp p, then a larg number of column ar gener befor the gap is close. thi lead to  memori problem on market with as few as 4,000 patient. also, even befor memori becom an issu, the column  gener iter becom slow becaus of the addit  overhead of solv a larger lp. to address these issu, we implement a column  manag scheme to limit the size of the restrict lp.  whenev we add column to the lp, we check to see if it contain more than a threshold number of column. if thi is the case, we select remov column until it is again below the threshold2 . as we discuss earlier, onli a tini  fraction of all the cycl will end up in the final solut. it is unlik that we delet such a cycl, and even if we do, it can alwai be gener again. of cours, we must not be too aggress with the threshold, becaus do so mai offset the per-iter perform gain by significantli  increas the number of iter requir to get a suitabl column set in the lp at the same time. there ar some column we never delet, for exampl those we have branch on (see section 5.3.2), or those with a non-zero lp valu. amongst the rest, we delet those with the lowest price, sinc those correspond to the dual  constraint that ar most satisfi. thi column manag scheme work well and ha enabl us to clear market with 10,000 patient, as seen in figur 6. 5.3 branch-and-price search for the ilp given a larg market clear problem, we can  successfulli solv it lp relax to optim by us the  column gener enhanc describ abov. howev, the solut we find ar usual fraction. thu the next 2 base on memori size, we set the threshold at 400,000. 301 step involv perform a branch-and-price tree search [1] to find an optim integr solut. briefli, thi is the idea of branch-and-price. whenev we set a fraction variabl to 0 or 1 (branch), both the master lp, and the restrict we ar work with, ar chang (constrain). by default then, we need to perform column gener (go through the effort of price) at each node of the search tree to prove that the constrain restrict is optim for constrain master lp. (howev, as discuss in section 5.2.3, we comput the integr upper bound for the root node base on relax the cycl length constraint complet, and whenev ani node"s lp in the tree achiev that valu, we do not need to continu price column at that node.) for the clear problem with cycl of length at most 3, we have found that there is rare a gap between the optim integr and fraction solut. thi mean we can larg avoid the expens per node price step: whenev the constrain restrict lp ha the same optim valu as it parent in the tree search, we can prove lp optim, as in section 5.2.3, without have to includ ani addit column in the restrict lp. although cplex can solv ilp, it doe not support branch-and-price (for exampl, becaus there can be  problemspecif complic involv the interact between the branch rule and the price problem). henc, we  implement our own branch-and-price algorithm, which explor the search tree in depth-first order. we also experi with the a* node select order [7, 2]. howev, thi search strategi requir significantli more memori, which we found wa better emploi in make the column gener phase faster (see section 5.2.2). the remain major compon of the algorithm ar describ in the next two subsect. 5.3.1 primal heurist befor branch on a fraction variabl, we us primal heurist to construct a feasibl integr solut. these solut ar lower bound on the final optim integr  solut. henc, whenev a restrict fraction solut is no better than the best integr solut found so far, we prune the current subtre. a primal heurist is effect if it is effici and construct tight lower bound. we experi with two primal heurist. the first is a simpl round algorithm [8]: includ all cycl with fraction valu at least 0.5, and then, ensur feasibl, greedili add the remain cycl. whilst thi heurist is effici, we found that the lower bound it construct rare enabl much prune. we also tri us cplex as a primal heurist. at ani given node of the search tree, we can convert the  restrict lp relax back to an ilp by reintroduc the integr constraint. cplex ha sever built-in primal heurist, which we can appli to thi ilp. moreov, we can us cplex"s own tree search to find an optim integr  solut. in gener, thi tree search is much faster than our own. if cplex find an integr solut that match the  fraction upper bound at the root node, we ar done.  otherwis, no such integr solut exist, or we don"t yet have the right combin of cycl in the restrict lp. for kidnei-exchang market, it is usual the second reason that appli (see section 5.2.2 and 5.2.4). henc, at some point in the tree search, onc more column have been  gener as a result of branch, the cplex heurist will find an optim integr solut. although cplex tree search is faster than our own, it is not so fast that we can appli it to everi node in our search tree. henc, we make the follow optim. firstli, we add a constraint that requir the object valu of the ilp to be as larg as the fraction target. if thi is not the case, we want to abort and proce to gener more column with our branch-and-price search. secondli, we limit the number of node in cplex"s search tree. thi is becaus we have observ that no integr solut exist, cplex can take a veri long time to prove that. final, we onli appli the cplex heurist at a node if it ha a suffici differ set of cycl from it parent. us cplex as a primal heurist ha a larg impact becaus it make the search tree smaller, so all the  computation expens price work is avoid at node that ar not gener in thi smaller tree. 5.3.2 cycl brancher we experi with two branch strategi, both of which select on variabl per node. the first strategi,  branch by certainti, randomli select a variabl from those whose lp valu is closest to 1. the second strategi,  branch by uncertainti, randomli select a variabl whose lp valu is closest to 0.5. in either case, two children of the node ar gener correspond to two subtre, on in which the variabl is set to 0, the other in which it is set to 1. our depth-first search alwai choos to explor first the subtre in which the valu of the variabl is closest to it fraction valu. for our clear problem with cycl of length at most 3, we found branch by uncertainti to be superior, rare requir ani backtrack. 6. experiment result all our experi were perform in linux (red hat 9.0), us a dell pc with a 3ghz intel pentium 4  processor, and 1gb of ram. wherev we us cplex (e.g., in solv the lp and as a primal heurist, as discuss in the previou section), we us cplex 10.010. figur 6 show the runtim perform of four clear algorithm. for each market size list, we randomli  gener 10 market, and attempt to clear them us each of the algorithm. the first algorithm is cplex on the full cycl  formul. thi algorithm fail to clear ani market with 1000 patient or more. also, it run time on market smaller than thi is significantli wors than the other algorithm. the other algorithm ar variat of the increment  column gener approach describ in section 5. we begin with the follow set (all optim ar switch on): categori set column seeder combin of greedi exchang and maximum-weight match heurist, and random walk seeder (400,000 cycl). column gener on column at a time. column manag on, with 400,000 column limit. optim prover on. primal heurist round & cplex tree search. branch rule uncertainti. 302 the combin of these optim allow us to easili clear market with over 10,000 patient. in each of the next two algorithm, we turn on of these optim off to highlight it effect. first, we restrict the seeder so that it onli begin with 10,000 cycl. thi set is faster for smaller instanc, sinc the lp relax ar smaller, and faster to solv. howev, at 5000 vertic, thi effect start to be offset by the addit column gener that must be perform. for larger instanc, thi restrict seeder is clearli wors. final, we restor the seeder to it optim set, but thi time, remov the optim prover describ in  section 5.2.3. as in mani column gener problem, the tail-off effect is substanti. by take advantag of the properti of our problem, we manag to clear a market with 10,000 patient in about the same time it would otherwis have taken to clear a 6000 patient market. 7. field the technolog our algorithm and implement replac cplex as the clear algorithm of the allianc for pair donat, on of the lead kidnei exchang, in decemb 2006. we conduct a match run everi two week, and the first  transplant base on our solut have alreadi been conduct. while there ar (for polit/inter-person reason) at least four kidnei exchang in the us current, everyon understand that a unifi unfrag nation exchang would save more live. we ar in discuss with addit kidnei exchang that ar interest in adopt our  technolog. thi wai our technolog (and the process around it) will hopefulli serv as a substrat that will eventu help in unifi the exchang. at least comput  scalabl is no longer an obstacl. 8. conclusionandfutureresearch in thi work we have develop the most scalabl exact algorithm for barter exchang to date, with special focu on the upcom nation kidnei-exchang market in which patient with kidnei diseas will be match with  compat donor by swap their own will but incompat donor. with over 70,000 patient alreadi wait for a cadav kidnei in the us, thi market is seen as the onli ethic wai to significantli reduc the 4,000 death per year attribut to kidnei diseas. our work present the first algorithm capabl of clear these market on a nationwid scale. it optim solv the kidnei exchang clear problem with 10,000  donordone pair. thu there is no need to resort to approxim solut. the best prior technolog (vanilla cplex)  cannot handl instanc beyond about 900 donor-done pair becaus it run out of memori. the kei to our  improv is increment problem formul. we adapt two paradigm for the task: constraint gener and column gener. for each, we develop a host of techniqu that substanti improv both runtim and memori  usag. some of the techniqu us domain-specif  observ while other ar domain independ. we conclud that column gener scale dramat better than  constraint gener. for column gener in the lp, our enhanc includ price techniqu, column seed techniqu, techniqu for prove optim without  have to bring in all posit-price column (and us anoth column-gener process in a differ formul to do so), and column remov techniqu. for the  branch-andpric search in the integ program that surround the lp, our enhanc includ primal heurist and we also  compar branch strategi. undoubtedli, further  paramet tune and perhap addit speed improv  techniqu could be us to make the algorithm even faster. our algorithm also support sever gener, as desir by real-world kidnei exchang. these includ  multipl altern donor per patient, weight edg in the market graph (to encod differ in expect life year ad base on degre of compat, patient ag and weight, etc., as well as the probabl of last-minut  incompat), angel-trigger chain (chain of transplant trigger by altruist donor who do not have patient  associ with them, each chain end with a left-over kidnei), and addit issu (such as differ score for save  differ altruist donor or left-over kidnei for futur match run base on blood type, tissu type, and likelihood that the organ would not disappear from the market by the donor get second thought). becaus we us an ilp  methodolog, we can also support a varieti of side constraint, which often plai an import role in market in practic [19]. we can also support forc part of the alloc, for exampl, thi acut sick teenag ha to get a kidnei if possibl. our work ha treat the kidnei exchang as a batch problem with full inform (at least in the short run,  kidnei exchang will most like continu to run in batch mode everi so often). two import direct for futur work ar to explicitli address both onlin and limit-inform aspect of the problem. the onlin aspect is that done and donor will be  arriv into the system over time, and it mai be best to not execut the myopic optim exchang now, but rather save part of the current market for later match. in fact, some work ha been done on thi in certain restrict  set [22, 24]. the limit-inform aspect is that even in batch mode, the graph provid as input is not complet correct: a number of donor-done pair believ to be compat turn out to be incompat when more expens last-minut test ar perform. therefor, it would be desir to  perform an optim with thi in mind, such as output a low-degre robust subgraph to be test befor the final match is produc, or to output a conting plan in case of failur. we ar current explor a number of  question along these line but there is certainli much more to be done. acknowledg we thank economist al roth and utku unver, as well as kidnei transplant surgeon michael ree, for alert us to the fact that prior technolog wa inadequ for the  clear problem on a nation scale, suppli initi data set, and discuss on detail of the kidnei exchang process. we also thank don sheehi for bring to our attent the idea of shoe exchang. thi work wa support in part by the nation scienc foundat under grant ii-0427858 and ccf-0514922. 9. refer [1] c. barnhart, e. l. johnson, g. l. nemhaus, m. w. p. savelsbergh, and p. h. vanc. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 clearingtim(second) number of patient our algorithm our algorithm with restrict column seeder our algorithm with no optim prover cplex cycl formul figur 6: experiment result: averag runtim with standard deviat bar. branch-and-price: column gener for solv huge integ program. oper research, 46:316-329, mai-june 1998. [2] r. dechter and j. pearl. gener best-first search strategi and the optim of a*. journal of the acm, 32(3):505-536, 1985. [3] f. l. delmonico. exchang kidnei - advanc in live-donor transplant. new england journal of medicin, 350:1812-1814, 2004. [4] j. edmond. path, tree, and flower. canadian journal of mathemat, 17:449-467, 1965. [5] m. r. garei and d. s. johnson. comput and intract; a guid to the theori of np-complet. 1990. [6] s. e. gentri, d. l. segev, and r. a. montgomeri. a comparison of popul serv by kidnei pair donat and list pair donat. american journal of transplant, 5(8):1914-1921, august 2005. [7] p. hart, n. nilsson, and b. raphael. a formal basi for the heurist determin of minimum cost path. ieee transact on system scienc and cybernet, 4(2):100-107, 1968. [8] k. hoffman and m. padberg. solv airlin crew-schedul problem by branch-and-cut. manag scienc, 39:657-682, 1993. [9] intervac. http://intervac-onlin.com/. [10] nation odd shoe exchang. http://www.oddsho.org/. [11] peerflix. http://www.peerflix.com. [12] read it swap it. http://www.readitswapit.co.uk/. [13] a. e. roth, t. sonmez, and m. u. unver. kidnei exchang. quarterli journal of econom, 119(2):457-488, mai 2004. [14] a. e. roth, t. sonmez, and m. u. unver. a kidnei exchang clearinghous in new england. american econom review, 95(2):376-380, mai 2005. [15] a. e. roth, t. sonmez, and m. u. unver. effici kidnei exchang: coincid of want in a market with compat-base prefer. american econom review, forthcom. [16] e. rothberg. gabow"s n3 maximum-weight match algorithm: an implement. the first dimac implement challeng, 1990. [17] s. l. saidman, a. e. roth, t. snmez, m. u. unver, and f. l. delmonico. increas the opportun of live kidnei donat by match for two and three wai exchang. transplant, 81(5):773-782, 2006. [18] t. sandholm. optim winner determin algorithm. in combinatori auction, cramton, shoham, and steinberg, ed. mit press, 2006. [19] t. sandholm and s. suri. side constraint and non-price attribut in market. in ijcai-2001 workshop on distribut constraint reason, page 55-61, seattl, wa, 2001. to appear in game and econom behavior. [20] d. l. segev, s. e. gentri, d. s. warren, b. reeb, and r. a. montgomeri. kidnei pair donat and optim the us of live donor organ. journal of the american medic associ, 293(15):1883-1890, april 2005. [21] unit network for organ share (uno). http://www.uno.org/. [22] m. u. unver. dynam kidnei exchang. work paper. [23] unit state renal data system (usrd). http://www.usrd.org/. [24] s. a. zenio. optim control of a pair-kidnei exchang program. manag scienc, 48(3):328-342, march 2002. 304 