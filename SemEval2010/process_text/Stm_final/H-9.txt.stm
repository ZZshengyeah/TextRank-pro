learn from web search log to organ search result xuanhui wang depart of comput scienc univers of illinoi at urbana-champaign urbana, il 61801 xwang20@cs.uiuc.edu chengxiang zhai depart of comput scienc univers of illinoi at urbana-champaign urbana, il 61801 czhai@cs.uiuc.edu abstract effect organ of search result is critic for  improv the util of ani search engin. cluster search result is an effect wai to organ search result, which allow a user to navig into relev document quickli.  howev, two defici of thi approach make it not alwai work well: (1) the cluster discov do not necessarili correspond to the interest aspect of a topic from the user"s perspect; and (2) the cluster label gener ar not inform enough to allow a user to identifi the right cluster. in thi paper, we propos to address these two  defici by (1) learn interest aspect of a topic from web search log and organ search result accordingli; and (2) gener more meaning cluster label us past queri word enter by user. we evalu our propos method on a commerci search engin log data. compar with the tradit method of cluster search result, our method can give better result organ and more  meaning label. categori and subject descriptor: h.3.3  [inform search and retriev]: cluster, search process gener term: algorithm, experiment 1. introduct the util of a search engin is affect by multipl  factor. while the primari factor is the sound of the  underli retriev model and rank function, how to organ and present search result is also a veri import factor that can affect the util of a search engin significantli. compar with the vast amount of literatur on retriev model, howev, there is rel littl research on how to improv the effect of search result organ. the most common strategi of present search result is a simpl rank list. intuit, such a present  strategi is reason for non-ambigu, homogen search result; in gener, it would work well when the search  result ar good and a user can easili find mani relev  document in the top rank result. howev, when the search result ar divers (e.g., due to ambigu or multipl aspect of a topic) as is often the case in web search, the rank list present would not be effect; in such a case, it would be better to group the search result into cluster so that a user can easili navig into a particular interest group. for exampl, the result in the first page return from googl for the ambigu queri jaguar (as of dec. 2nd, 2006) contain at least four differ sens of jaguar (i.e., car, anim, softwar, and a sport team); even for a more refin queri such as jaguar team pictur, the result ar still quit ambigu,  includ at least four differ jaguar team - a wrestl team, a jaguar car team, southwestern colleg jaguar softbal team, and jacksonvil jaguar footbal team. moreov, if a user want to find a place to download a jaguar softwar, a queri such as download jaguar is also not veri effect as the domin result ar about download jaguar brochur, jaguar wallpap, and jaguar dvd. in these exampl, a cluster view of the search result would be much more us to a user than a simpl rank list. cluster is also us when the search result ar poor, in which case, a user would otherwis have to go through a long list sequenti to reach the veri first relev document. as a primari altern strategi for present search result, cluster search result ha been studi rel extens [9, 15, 26, 27, 28]. the gener idea in virtual all the exist work is to perform cluster on a set of  toprank search result to partit the result into natur cluster, which often correspond to differ subtop of the gener queri topic. a label will be gener to indic what each cluster is about. a user can then view the label to decid which cluster to look into. such a strategi ha been shown to be more us than the simpl rank list present in sever studi [8, 9, 26]. howev, thi cluster strategi ha two defici which make it not alwai work well: first, the cluster discov in thi wai do not necessarili correspond to the interest aspect of a topic from the user"s perspect. for exampl, user ar often interest in find either phone code or zip code when enter the queri area code. but the cluster discov by the current method mai partit the result into local code and intern code. such cluster would not be veri us for user; even the best cluster would still have a low precis. second, the cluster label gener ar not inform enough to allow a user to identifi the right cluster. there ar two reason for thi problem: (1) the cluster ar not correspond to a user"s interest, so their label would not be veri meaning or us. (2) even if a cluster realli correspond to an interest aspect of the topic, the label mai not be inform becaus it is usual gener base on the content in a cluster, and it is possibl that the user is not veri familiar with some of the term. for exampl, the ambigu queri jaguar mai mean an anim or a car. a cluster mai be label as panthera onca. although thi is an accur label for a cluster with the anim sens of jaguar, if a user is not familiar with the phrase, the label would not be help. in thi paper, we propos a differ strategi for  partit search result, which address these two defici through impos a user-orient partit of the search result. that is, we try to figur out what aspect of a search topic ar like interest to a user and organ the result accordingli. specif, we propos to do the follow: first, we will learn interest aspect of similar topic from search log and organ search result base on these interest aspect. for exampl, if the current queri ha occur mani time in the search log, we can look at what kind of page view by the user in the result and what kind of word ar us togeth with such a queri. in case when the queri is ambigu such as jaguar we can expect to see some clear cluster correspond differ sens of jaguar. more importantli, even if a word is not ambigu (e.g., car), we mai still discov interest aspect such as car rental and car price (which happen to be the two primari aspect discov in our search log data). such aspect can be veri us for organ futur search result about car. note that in the case of car,  cluster gener us regular cluster mai not necessarili reflect such interest aspect about car from a user"s perspect, even though the gener cluster ar  coher and meaning in other wai. second, we will gener more meaning cluster label us past queri word enter by user. assum that the past search log can help us learn what specif aspect ar interest to user given the current queri topic, we could also expect that those queri word enter by user in the past that ar associ with the current queri can provid meaning descript of the distinct aspect. thu thei can be better label than those extract from the ordinari content of search result. to implement the idea present abov, we reli on search engin log and build a histori collect contain the past queri and the associ clickthrough. given a new queri, we find it relat past queri from the histori collect and learn aspect through appli the star cluster  algorithm [2] to these past queri and clickthrough. we can then organ the search result into these aspect us categor techniqu and label each aspect by the most repres past queri in the queri cluster. we evalu our method for result organ us log of a commerci search engin. we compar our method with the default search engin rank and the tradit cluster of search result. the result show that our method is effect for improv search util and the label  gener us past queri word ar more readabl than those gener us tradit cluster approach. the rest of the paper is organ as follow. we first review the relat work in section 2. in section 3, we  describ search engin log data and our procedur of build a histori collect. in section 4, we present our approach in detail. we describ the data set in section 5 and the experiment result ar discuss in section 6. final, we conclud our paper and discuss futur work in section 7. 2. relat work our work is close relat to the studi of cluster search result. in [9, 15], the author us scatter/gather algorithm to cluster the top document return from a  tradit inform retriev system. their result valid the cluster hypothesi [20] that relev document tend to form cluster. the system grouper wa describ in [26, 27]. in these paper, the author propos to cluster the result of a real search engin base on the snippet or the content of return document. sever cluster  algorithm ar compar and the suffix tree cluster  algorithm (stc) wa shown to be the most effect on. thei also show that us snippet is as effect as us whole document. howev, an import challeng of document cluster is to gener meaning label for cluster. to overcom thi difficulti, in [28], supervis learn  algorithm were studi to extract meaning phrase from the search result snippet and these phrase were then us to group search result. in [13], the author propos to us a monothet cluster algorithm, in which a document is assign to a cluster base on a singl featur, to organ search result, and the singl featur is us to label the correspond cluster. cluster search result ha also  attract a lot of attent in industri and commerci web servic such as vivisimo [22]. howev, in all these work, the cluster ar gener sole base on the search result. thu the obtain cluster do not necessarili reflect user" prefer and the gener label mai not be inform from a user"s viewpoint. method of organ search result base on text  categor ar studi in [6, 8]. in thi work, a text  classifi is train us a web directori and search result ar then classifi into the predefin categori. the author design and studi differ categori interfac and thei found that categori interfac ar more effect than list interfac. howev predefin categori ar often too  gener to reflect the finer granular aspect of a queri. search log have been exploit for sever differ  purpos in the past. for exampl, cluster search queri to find those frequent ask question (faq) is studi in [24, 4]. recent, search log have been us for suggest queri substitut [12], person search [19], web site design [3], latent semant analysi [23], and learn retriev  rank function [16, 10, 1]. in our work, we explor past queri histori in order to better organ the search result for  futur queri. we us the star cluster algorithm [2], which is a graph partit base approach, to learn interest  aspect from search log given a new queri. thu past queri ar cluster in a queri specif manner and thi is anoth differ from previou work such as [24, 4] in which all queri in log ar cluster in an oﬄin batch manner. 3. search engin log search engin log record the activ of web user, which reflect the actual user" need or interest when conduct id queri url time 1 win zip http://www.winzip.com xxxx 1 win zip http://www.swinzip.com/winzip xxxx 2 time zone http://www.timeandd.com xxxx ... ... ... ... tabl 1: sampl entri of search engin log.  differ id"s mean differ session. web search. thei gener have the follow  inform: text queri that user submit, the url that thei click after submit the queri, and the time when thei click. search engin log ar separ by session. a session includ a singl queri and all the url that a user click after issu the queri [24]. a small sampl of search log data is shown in tabl 1. our idea of us search engin log is to treat these log as past histori, learn user" interest us thi histori data automat, and repres their interest by  repres queri. for exampl, in the search log, a lot of queri ar relat to car and thi reflect that a larg number of user ar interest in inform about car. differ user ar probabl interest in differ aspect of car. some ar look for rent a car, thu mai submit a queri like car rental; some ar more interest in bui a us car, and mai submit a queri like us car; and other mai care more about bui a car accessori, so thei mai us a queri like car audio. by mine all the queri which ar relat to the concept of car, we can learn the aspect that ar like interest from a user"s perspect. as an exampl, the follow is some aspect about car learn from our search log data (see section 5). 1. car rental, hertz car rental, enterpris car rental, ... 2. car price, us car, car valu, ... 3. car accid, car crash, car wreck, ... 4. car audio, car stereo, car speaker, ... in order to learn aspect from search engin log, we  preprocess the raw log to build a histori data collect. as shown abov, search engin log consist of session. each session contain the inform of the text queri and the click web page url, togeth with the time that the user did the click. howev, thi inform is limit sinc url alon ar not inform enough to tell the  intend mean of a submit queri accur. to gather rich inform, we enrich each url with addit text content. specif, given the queri in a session, we obtain it top-rank result us the search engin from which we obtain our log data, and extract the snippet of the url that ar click on accord to the log inform in the correspond session. all the titl, snippet, and url of the click web page of that queri ar us to repres the session. differ session mai contain the same queri. thu the number of session could be quit huge and the  inform in the session with the same queri could be  redund. in order to improv the scalabl and reduc data spars, we aggreg all the session which contain  exactli the same queri togeth. that is, for each uniqu queri, we build a pseudo-document which consist of all the descript of it click in all the session aggreg. the keyword contain in the queri themselv can be regard as brief summari of the pseudo-document. all these pseudo-document form our histori data collect, which is us to learn interest aspect in the follow section. 4. our approach our approach is to organ search result by aspect learn from search engin log. given an input queri, the gener procedur of our approach is: 1. get it relat inform from search engin log. all the inform form a work set. 2. learn aspect from the inform in the work set. these aspect correspond to user" interest given the input queri. each aspect is label with a  repres queri. 3. categor and organ the search result of the input queri accord to the aspect learn abov. we now give a detail present of each step. 4.1 find relat past queri given a queri q, a search engin will return a rank list of web page. to know what the user ar realli interest in given thi queri, we first retriev it past similar queri in our preprocess histori data collect. formal, assum we have n pseudo-document in our histori data set: h = {q1, q2, ..., qn }. each qi  correspond to a uniqu queri and is enrich with clickthrough inform as discuss in section 3. to find q"s relat queri in h, a natur wai is to us a text retriev  algorithm. here we us the okapi method [17], on of the state-of-the-art retriev method. specif, we us the follow formula to calcul the similar between queri q and pseudo-document qi:   w∈q ¡ qi c(w, q) × idf(w) × (k1 + 1) × c(w, qi) k1((1 − b) + b |qi| avdl ) + c(w, qi) where k1 and b ar okapi paramet set empir, c(w, qi) and c(w, q) ar the count of word w in qi and q respect, idf(w) is the invers document frequenc of word w, and avdl is the averag document length in our histori  collect. base on the similar score, we rank all the document in h. the top rank document provid us a work set to learn the aspect that user ar usual interest in. each document in h correspond to a past queri, and thu the top rank document correspond to q"s relat past queri. 4.2 learn aspect by cluster given a queri q, we us hq = {d1, ..., dn} to repres the top rank pseudo-document from the histori collect h. these pseudo-document contain the aspect that user ar interest in. in thi subsect, we propos to us a cluster method to discov these aspect. ani cluster algorithm could be appli here. in thi paper, we us an algorithm base on graph partit: the star cluster algorithm [2]. a good properti of the star cluster in our set is that it can suggest a good label for each cluster natur. we describ the star cluster algorithm below. 4.2.1 star cluster given hq, star cluster start with construct a  pairwis similar graph on thi collect base on the vector space model in inform retriev [18]. then the cluster ar form by dens subgraph that ar star-shape. these cluster form a cover of the similar graph. formal, for each of the n pseudo-document {d1, ..., dn} in the collect hq, we comput a tf-idf vector. then, for each pair of document di and dj (i = j), their similar is comput as the cosin score of their correspond vector vi and vj , that is sim(di, dj ) = co(vi, vj) = vi · vj |vi| · |vj | . a similar graph gσ can then be construct as follow us a similar threshold paramet σ. each document di is a vertex of gσ. if sim(di, dj) > σ, there would be an edg connect the correspond two vertic. after the similar graph gσ is built, the star cluster algorithm cluster the document us a greedi algorithm as follow: 1. associ everi vertex in gσ with a flag, initi as unmark. 2. from those unmark vertic, find the on which ha the highest degre and let it be u. 3. mark the flag of u as center. 4. form a cluster c contain u and all it neighbor that ar not mark as center. mark all the select neighbor as satellit. 5. repeat from step 2 until all the vertic in gσ ar mark. each cluster is star-shape, which consist a singl center and sever satellit. there is onli on paramet σ in the star cluster algorithm. a big σ enforc that the connect document have high similar, and thu the cluster tend to be small. on the other hand, a small σ will make the cluster big and less coher. we will studi the impact of thi paramet in our experi. a good featur of the star cluster algorithm is that it output a center for each cluster. in the past queri  collect hq, each document correspond to a queri. thi center queri can be regard as the most repres on for the whole cluster, and thu provid a label for the cluster natur. all the cluster obtain ar relat to the input queri q from differ perspect, and thei repres the possibl aspect of interest about queri q of user. 4.3 categor search result in order to organ the search result accord to user" interest, we us the learn aspect from the relat past queri to categor the search result. given the top m web page return by a search engin for q: {s1, ..., sm}, we group them into differ aspect us a categor algorithm. in principl, ani categor algorithm can be us here. here we us a simpl centroid-base method for  categor. natur, more sophist method such as svm [21] mai be expect to achiev even better  perform. base on the pseudo-document in each discov aspect ci, we build a centroid prototyp pi by take the averag of all the vector of the document in ci: pi = 1 |ci|   l∈ci vl. all these pi"s ar us to categor the search result.  specif, for ani search result sj, we build a tf-idf vector. the centroid-base method comput the cosin similar between the vector represent of sj and each centroid prototyp pi. we then assign sj to the aspect with which it ha the highest cosin similar score. all the aspect ar final rank accord to the number of search result thei have. within each aspect, the search result ar rank accord to their origin search engin rank. 5. data collect we construct our data set base on the msn search log data set releas by the microsoft live lab in 2006 [14]. in total, thi log data span 31 dai from 05/01/2006 to 05/31/2006. there ar 8,144,000 queri, 3,441,000 distinct queri, and 4,649,000 distinct url in the raw data. to test our algorithm, we separ the whole data set into two part accord to the time: the first 2/3 data is us to simul the histor data that a search engin  accumul, and we us the last 1/3 to simul futur queri. in the histori collect, we clean the data by onli  keep those frequent, well-format, english queri (queri which onli contain charact ‘a", ‘b", ..., ‘z", and space, and appear more than 5 time). after clean, we get 169,057 uniqu queri in our histori data collect total. on averag, each queri ha 3.5 distinct click. we build the pseudo-document for all these queri as describ in section 3. the averag length of these pseudo-document is 68 word and the total data size of our histori collect is 129mb. we construct our test data from the last 1/3 data.  accord to the time, we separ thi data into two test set equal for cross-valid to set paramet. for each test set, we us everi session as a test case. each session  contain a singl queri and sever click. (note that we do not aggreg session for test case. differ test case mai have the same queri but possibl differ click.) sinc it is infeas to ask the origin user who submit a queri to judg the result for the queri, we follow the work [11] and opt to us the click associ with the queri in a session to approxim relev document. us click as judgment, we can then compar differ algorithm for  organ search result to see how well these algorithm can help user reach the click url. organ search result into differ aspect is expect to help inform queri. it thu make sens to focu on the inform queri in our evalu. for each test case, i.e., each session, we count the number of differ click and filter out those test case with fewer than 4 click under the assumpt that a queri with more click is more like to be an inform queri. sinc we want to test whether our algorithm can learn from the past queri, we also filter out those test case whose queri can not retriev at least 100 pseudo-document from our histori collect. final, we obtain 172 and 177 test case in the first and second test set respect. on averag, we have 6.23 and 5.89 click for each test case in the two test set respect. 6. experi in the section, we describ our experi on the search result organ base past search engin log. 6.1 experiment design we us two baselin method to evalu the propos method for organ search result. for each test case, the first method is the default rank list from a search engin (baselin). the second method is to organ the search result by cluster them (cluster-base). for fair comparison, we us the same cluster algorithm as our  logbas method (i.e., star cluster). that is, we treat each search result as a document, construct the similar graph, and find the star-shape cluster. we compar our method (log-base) with the two baselin method in the follow experi. for both cluster-base and log-base method, the search result within each cluster is rank base on their origin rank given by the search engin. to compar differ result organ method, we adopt a similar method as in the paper [9]. that is, we compar the qualiti (e.g., precis) of the best cluster, which is defin as the on with the largest number of relev document. organ search result into cluster is to help user  navig into relev document quickli. the abov metric is to simul a scenario when user alwai choos the right  cluster and look into it. specif, we download and organ the top 100 search result into aspect for each test case. we us precis at 5 document (p@5) in the best cluster as the primari measur to compar differ method. p@5 is a veri meaning measur as it tell us the perceiv  precis when the user open a cluster and look at the first 5 document. we also us mean reciproc rank (mrr) as anoth metric. mrr is calcul as mrr = 1 |t|   q∈t 1 rq where t is a set of test queri, rq is the rank of the first relev document for q. to give a fair comparison across differ organ  algorithm, we forc both cluster-base and log-base  method to output the same number of aspect and forc each search result to be in on and onli on aspect. the  number of aspect is fix at 10 in all the follow experi. the star cluster algorithm can output differ number of cluster for differ input. to constrain the number of cluster to 10, we order all the cluster by their size, select the top 10 as aspect candid. we then re-assign each search result to on of these select 10 aspect that ha the highest similar score with the correspond aspect centroid. in our experi, we observ that the size of the best cluster ar all larger than 5, and thi ensur that p@5 is a meaning metric. 6.2 experiment result our main hypothesi is that organ search result base on the user" interest learn from a search log data set is more benefici than to organ result us a simpl list or cluster search result. in the follow, we test our  hypothesi from two perspect - organ and label. method test set 1 test set 2 mmr p@5 mmr p@5 baselin 0.7347 0.3325 0.7393 0.3288 cluster-base 0.7735 0.3162 0.7666 0.2994 log-base 0.7833 0.3534 0.7697 0.3389 cluster/baselin 5.28% -4.87% 3.69% -8.93% log/baselin 6.62% 6.31% 4.10% 3.09% log/cluster 1.27% 11.76% 0.40% 13.20% tabl 2: comparison of differ method by mmr and p@5. we also show the percentag of rel improv in the lower part. comparison test set 1 test set 2 impr./decr. impr./decr. cluster/baselin 53/55 50/64 log/baselin 55/44 60/45 log/cluster 68/47 69/44 tabl 3: pairwis comparison w.r.t the number of test case whose p@5"s ar improv versu  decreas w.r.t the baselin. 6.2.1 overal perform we compar three method, basic search engin  rank (baselin), tradit cluster base method  (clusterbas), and our log base method (log-base), in tabl 2  us mrr and p@5. we optim the paramet σ"s for each collect individu base on p@5 valu. thi show the best perform that each method can achiev. in thi  tabl, we can see that in both test collect, our method is better than both the baselin and the cluster-base method. for exampl, in the first test collect, the  baselin method of mmr is 0.734, the cluster-base method is 0.773 and our method is 0.783. we achiev higher  accuraci than both cluster-base method (1.27% improv) and the baselin method (6.62% improv). the p@5 valu ar 0.332 for the baselin, 0.316 for cluster-base method, but 0.353 for our method. our method improv over the baselin by 6.31%, while the cluster-base method even decreas the accuraci. thi is becaus cluster-base method organ the search result onli base on the  content. thu it could organ the result differ from user" prefer. thi confirm our hypothesi of the bia of the cluster-base method. compar our method with the cluster-base method, we achiev signific  improv on both test collect. the p-valu of the  signific test base on p@5 on both collect ar 0.01 and 0.02 respect. thi show that our log-base method is effect to learn user" prefer from the past queri  histori, and thu it can organ the search result in a more us wai to user. we show the optim result abov. to test the  sensit of the paramet σ of our log-base method, we us on of the test set to tune the paramet to be optim and then us the tune paramet on the other set. we compar thi result (log tune outsid) with the optim  result of both cluster-base (cluster optim) and log-base method (log optim) in figur 1. we can see that, as expect, the perform us the paramet tune on a separ set is wors than the optim perform.  howev, our method still perform much better than the optim result of cluster-base method on both test collect. 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 test set 1 test set 2 p@5 cluster optim log optim log tune outsid figur 1: result us paramet tune from the other test collect. we compar it with the  optim perform of the cluster-base and our  logbas method. 0 10 20 30 40 50 60 1 2 3 4 bin number #queri improv decreas figur 2: the correl between perform chang and result divers. in tabl 3, we show pairwis comparison of the three method in term of the number of test case for which p@5 is increas versu decreas. we can see that our method improv more test case compar with the other two method. in the next section, we show more detail analysi to see what type of test case can be improv by our method. 6.2.2 detail analysi to better understand the case where our log-base method can improv the accuraci, we test two properti: result  divers and queri difficulti. all the analysi below is base on test set 1. divers analysi: intuit, organ search  result into differ aspect is more benefici to those queri whose result ar more divers, as for such queri, the  result tend to form two or more big cluster. in order to test the hypothesi that log-base method help more those queri with divers result, we comput the size ratio of the biggest and second biggest cluster in our log-base  result and us thi ratio as an indic of divers. if the ratio is small, it mean that the first two cluster have a small differ thu the result ar more divers. in thi case, we would expect our method to help more. the  result ar shown in figur 2. in thi figur, we partit the ratio into 4 bin. the 4 bin correspond to the ratio rang [1, 2), [2, 3), [3, 4), and [4, +∞) respect. ([i, j) mean that i ≤ ratio < j.) in each bin, we count the number of test case whose p@5"s ar improv versu decreas with respect to the rank baselin, and plot the number in thi figur. we can observ that when the ratio is smaller, the log-base method can improv more test case. but when 0 5 10 15 20 25 30 1 2 3 4 bin number #queri improv decreas figur 3: the correl between perform chang and queri difficulti. the ratio is larg, the log-base method can not improv over the baselin. for exampl, in bin 1, 48 test case ar improv and 34 ar decreas. but in bin 4, all the 4 test case ar decreas. thi confirm our hypothesi that our method can help more if the queri ha more divers result. thi also suggest that we should turn off the option of re-organ search result if the result ar not veri divers (e.g., as indic by the cluster size ratio). difficulti analysi: difficult queri have been studi in recent year [7, 25, 5]. here we analyz the effect of our method in help difficult queri. we quantifi the queri difficulti by the mean averag precis (map) of the origin search engin rank for each test case. we then order the 172 test case in test set 1 in an increas order of map valu. we partit the test case into 4 bin with each have a roughli equal number of test case. a small map mean that the util of the origin rank is low. bin 1 contain those test case with the lowest map"s and bin 4 contain those test case with the highest map"s. for each bin, we comput the number of test case whose p@5"s ar improv versu decreas. figur 3 show the result. clearli, in bin 1, most of the test case ar improv (24 vs 3), while in bin 4, log-base method mai decreas the perform (3 vs 20). thi show that our method is more benefici to difficult queri, which is as expect sinc cluster search result is intend to help difficult queri. thi also show that our method doe not realli help easi queri, thu we should turn off our organ option for easi queri. 6.2.3 paramet set we examin paramet sensit in thi section. for the star cluster algorithm, we studi the similar threshold paramet σ. for the okapi retriev function, we studi the paramet k1 and b. we also studi the impact of the number of past queri retriev in our log-base method. figur 4 show the impact of the paramet σ for both cluster-base and log-base method on both test set. we vari σ from 0.05 to 0.3 with step 0.05. figur 4 show that the perform is not veri sensit to the paramet σ. we can alwai obtain the best result in rang 0.1 ≤ σ ≤ 0.25. in tabl 4, we show the impact of okapi paramet. we vari k1 from 1.0 to 2.0 with step 0.2 and b from 0 to 1 with step 0.2. from thi tabl, it is clear that p@5 is also not veri sensit to the paramet set. most of the valu ar larger than 0.35. the default valu k1 = 1.2 and b = 0.8 give approxim optim result. we further studi the impact of the amount of histori 0.2 0.25 0.3 0.35 0.4 0.05 0.1 0.15 0.2 0.25 0.3 p@5 similar threhold: sigma cluster-base 1 log-base 1 cluster-base 2 log-base 2 figur 4: the impact of similar threshold σ on both cluster-base and log-base method. we show the result on both test collect. b 0.0 0.2 0.4 0.6 0.8 1.0 1.0 0.3476 0.3406 0.3453 0.3616 0.3500 0.3453 1.2 0.3418 0.3383 0.3453 0.3593 0.3534 0.3546 k1 1.4 0.3337 0.3430 0.3476 0.3604 0.3546 0.3465 1.6 0.3476 0.3418 0.3523 0.3534 0.3581 0.3476 1.8 0.3465 0.3418 0.3546 0.3558 0.3616 0.3476 2.0 0.3453 0.3500 0.3534 0.3558 0.3569 0.3546 tabl 4: impact of okapi paramet k1 and b. inform to learn from by vari the number of past queri to be retriev for learn aspect. the result on both test collect ar shown in figur 5. we can see that the perform gradual increas as we enlarg the number of past queri retriev. thu our method could potenti learn more as we accumul more histori. more importantli, as time goe, more and more queri will have suffici histori, so we can improv more and more queri. 6.2.4 an illustr exampl we us the queri area code to show the differ in the result of the log-base method and the cluster-base method. thi queri mai mean phone code or zip code. tabl 5 show the repres keyword extract from the three biggest cluster of both method. in the  clusterbas method, the result ar partit base on locat: local or intern. in the log-base method, the result ar disambigu into two sens: phone code or zip code. while both ar reason partit, our  evalu indic that most user us such a queri ar often interest in either phone code or zip code. sinc the p@5 valu of cluster-base and log-base method ar 0.2 and 0.6, respect. therefor our log-base method is more effect in help user to navig into their desir result. cluster-base method log-base method citi, state telephon, citi, intern local, area phone, dial intern zip, postal tabl 5: an exampl show the differ between the cluster-base method and our log-base method 0.16 0.18 0.2 0.22 0.24 0.26 0.28 0.3 1501201008050403020 p@5 #queri retriev test set 1 test set 2 figur 5: the impact of the number of past queri retriev. 6.2.5 label comparison we now compar the label between the cluster-base method and log-base method. the cluster-base method ha to reli on the keyword extract from the snippet to construct the label for each cluster. our log-base method can avoid thi difficulti by take advantag of queri.  specif, for the cluster-base method, we count the frequenc of a keyword appear in a cluster and us the most  frequent keyword as the cluster label. for log-base method, we us the center of each star cluster as the label for the correspond cluster. in gener, it is not easi to quantifi the readabl of a cluster label automat. we us exampl to show the differ between the cluster-base and the log-base  method. in tabl 6, we list the label of the top 5 cluster for two exampl jaguar and appl. for the cluster-base method, we separ keyword by comma sinc thei do not form a phrase. from thi tabl, we can see that our log-base method give more readabl label becaus it gener  label base on user" queri. thi is anoth advantag of our wai of organ search result over the cluster  approach. label comparison for queri jaguar log-base method cluster-base method 1. jaguar anim 1. jaguar, auto, accessori 2. jaguar auto accessori 2. jaguar, type, price 3. jaguar cat 3. jaguar, panthera, cat 4. jaguar repair 4. jaguar, servic, boston 5. jaguar anim pictur 5. jaguar, collect, apparel label comparison for queri appl log-base method cluster-base method 1. appl comput 1. appl, support, product 2. appl ipod 2. appl, site, comput 3. appl crisp recip 3. appl, world, visit 4. fresh appl cake 4. appl, ipod, amazon 5. appl laptop 5. appl, product, new tabl 6: cluster label comparison. 7. conclus and futur work in thi paper, we studi the problem of organ search result in a user-orient manner. to attain thi goal, we reli on search engin log to learn interest aspect from user" perspect. given a queri, we retriev it relat queri from past queri histori, learn the aspect by  cluster the past queri and the associ clickthrough  inform, and categor the search result into the aspect learn. we compar our log-base method with the  tradit cluster-base method and the baselin of search  engin rank. the experi show that our log-base method can consist outperform cluster-base method and improv over the rank baselin, especi when the queri ar difficult or the search result ar divers.  furthermor, our log-base method can gener more  meaning aspect label than the cluster label gener base on search result when we cluster search result. there ar sever interest direct for further  extend our work: first, although our experi result have clearli shown promis of the idea of learn from search log to organ search result, the method we have  experi with ar rel simpl. it would be interest to explor other potenti more effect method. in  particular, we hope to develop probabilist model for learn aspect and organ result simultan. second, with the propos wai of organ search result, we can  expect to obtain inform feedback inform from a user (e.g., the aspect chosen by a user to view). it would thu be interest to studi how to further improv the  organ of the result base on such feedback inform. final, we can combin a gener search log with ani  person search log to custom and optim the organ of search result for each individu user. 8. acknowledg we thank the anonym review for their valuabl  comment. thi work is in part support by a microsoft live lab research grant, a googl research grant, and an nsf career grant ii-0347933. 9. refer [1] e. agichtein, e. brill, and s. t. dumai. improv web search rank by incorpor user behavior inform. in sigir, page 19-26, 2006. [2] j. a. aslam, e. pelekov, and d. ru. the star cluster algorithm for static and dynam inform organ. journal of graph algorithm and applic, 8(1):95-129, 2004. [3] r. a. baeza-yate. applic of web queri mine. in ecir, page 7-22, 2005. [4] d. beeferman and a. l. berger. agglom cluster of a search engin queri log. in kdd, page 407-416, 2000. [5] d. carmel, e. yom-tov, a. darlow, and d. pelleg. what make a queri difficult? in sigir, page 390-397, 2006. [6] h. chen and s. t. dumai. bring order to the web: automat categor search result. in chi, page 145-152, 2000. [7] s. cronen-townsend, y. zhou, and w. b. croft. predict queri perform. in proceed of acm sigir 2002, page 299-306, 2002. [8] s. t. dumai, e. cutrel, and h. chen. optim search by show result in context. in chi, page 277-284, 2001. [9] m. a. hearst and j. o. pedersen. reexamin the cluster hypothesi: scatter/gather on retriev result. in sigir, page 76-84, 1996. [10] t. joachim. optim search engin us clickthrough data. in kdd, page 133-142, 2002. [11] t. joachim. evalu retriev perform us clickthrough data., page 79-96. physica/springer verlag, 2003. in j. frank and g. nakhaeizadeh and i. renz, text mine. [12] r. jone, b. rei, o. madani, and w. greiner. gener queri substitut. in www, page 387-396, 2006. [13] k. kummamuru, r. lotlikar, s. roi, k. singal, and r. krishnapuram. a hierarch monothet document cluster algorithm for summar and brows search result. in www, page 658-665, 2004. [14] microsoft live lab. acceler search in academ research, 2006. http://research.microsoft.com/ur/us/fundingopp/rfp/ search 2006 rfp.aspx. [15] p. pirolli, p. k. schank, m. a. hearst, and c. diehl. scatter/gather brows commun the topic structur of a veri larg text collect. in chi, page 213-220, 1996. [16] f. radlinski and t. joachim. queri chain: learn to rank from implicit feedback. in kdd, page 239-248, 2005. [17] s. e. robertson and s. walker. some simpl effect approxim to the 2-poisson model for probabilist weight retriev. in sigir, page 232-241, 1994. [18] g. salton, a. wong, and c. s. yang. a vector space model for automat index. commun. acm, 18(11):613-620, 1975. [19] x. shen, b. tan, and c. zhai. context-sensit inform retriev us implicit feedback. in sigir, page 43-50, 2005. [20] c. j. van rijsbergen. inform retriev, second edit. butterworth, london, 1979. [21] v. n. vapnik. the natur of statist learn theori. springer-verlag, berlin, 1995. [22] vivisimo. http://vivisimo.com/. [23] x. wang, j.-t. sun, z. chen, and c. zhai. latent semant analysi for multipl-type interrel data object. in sigir, page 236-243, 2006. [24] j.-r. wen, j.-y. nie, and h. zhang. cluster user queri of a search engin. in www, page 162-168, 2001. [25] e. yom-tov, s. fine, d. carmel, and a. darlow. learn to estim queri difficulti: includ applic to miss content detect and distribut inform retriev. in sigir, page 512-519, 2005. [26] o. zamir and o. etzioni. web document cluster: a feasibl demonstr. in sigir, page 46-54, 1998. [27] o. zamir and o. etzioni. grouper: a dynam cluster interfac to web search result. comput network, 31(11-16):1361-1374, 1999. [28] h.-j. zeng, q.-c. he, z. chen, w.-y. ma, and j. ma. learn to cluster web search result. in sigir, page 210-217, 2004. 