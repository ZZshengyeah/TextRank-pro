frugal ratio and improv truth mechan for vertex cover ∗ edith elkind hebrew univers of jerusalem, israel, and univers of southampton, southampton, so17 1bj, u.k. lesli ann goldberg univers of liverpool liverpool l69 3bx, u.k. paul goldberg univers of liverpool liverpool l69 3bx, u.k. abstract in set-system auction, there ar sever overlap team of agent, and a task that can be complet by ani of these team. the  auction"s goal is to hire a team and pai as littl as possibl.  exampl of thi set includ shortest-path auction and vertex-cover auction. recent, karlin, kemp and tamir introduc a new  definit of frugal ratio for thi problem. inform, the frugal ratio is the ratio of the total payment of a mechan to a desir payment bound. the ratio captur the extent to which the  mechan overpai, rel to perceiv fair cost in a truth auction. in thi paper, we propos a new truth polynomi-time auction for the vertex cover problem and bound it frugal ratio. we show that the solut qualiti is with a constant factor of optim and the frugal ratio is within a constant factor of the best possibl worst-case bound; thi is the first auction for thi problem to have these properti. moreov, we show how to transform ani  truth auction into a frugal on while preserv the approxim ratio. also, we consid two natur modif of the definit of karlin et al., and we analys the properti of the result  payment bound, such as monoton, comput hard, and robust with respect to the draw-resolut rule. we studi the relationship between the differ payment bound, both for  gener set system and for specif set-system auction, such as path auction and vertex-cover auction. we us these new definit in the proof of our main result for vertex-cover auction via a  bootstrap techniqu, which mai be of independ interest. categori and subject descriptor f.2 [theori of comput]: analysi of algorithm and  problem complex; j.4 [comput applic]: social and  behavior scienc-econom gener term algorithm, econom, theori 1. introduct in a set system auction there is a singl buyer and mani vendor that can provid variou servic. it is assum that the buyer"s  requir can be satisfi by variou subset of the vendor; these subset ar call the feasibl set. a wide-studi class of  setsystem auction is path auction, where each vendor is abl to sell access to a link in a network, and the feasibl set ar those set whose link contain a path from a given sourc to a given  destin; the studi of these auction ha been initi in the semin paper by nisan and ronen [19] (see also [1, 10, 9, 6, 15, 7, 20]). we assum that each vendor ha a cost of provid hi servic, but submit a possibl larger bid to the auction. base on these bid, the auction select a feasibl subset of vendor, and make payment to the vendor in thi subset. each select vendor enjoi a profit of payment minu cost. vendor want to maximis profit, while the buyer want to minimis the amount he pai. a natur goal in thi set is to design a truth auction, in which vendor have an incent to bid their true cost. thi can be achiev by pai each select vendor a premium abov her bid in such a wai that the vendor ha no incent to overbid. an interest question in mechan design is how much the auction will have to overpai in order to ensur truth bid. in the context of path auction thi topic wa first address by archer and tardo [1]. thei defin the frugal ratio of a  mechan as the ratio between it total payment and the cost of the cheapest path disjoint from the path select by the mechan. thei show that, for a larg class of truth mechan for thi problem, the frugal ratio is as larg as the number of edg in the shortest path. talwar [21] extend thi definit of frugal ratio to gener set system, and studi the frugal ratio of the classic vcg mechan [22, 4, 14] for mani specif set system, such as minimum span tree and set cover. while the definit of frugal ratio propos by [1] is  wellmotiv and ha been instrument in studi truth  mechan for set system, it is not complet satisfactori. consid, for exampl, the graph of figur 1 with the cost cab = cbc = a b c d figur 1: the diamond graph 336 ccd = 0, cac = cbd = 1. thi graph is 2-connect and the vcg payment to the win path abcd is bound. howev, the graph contain no a-d path that is disjoint from abcd, and henc the frugal ratio of vcg on thi graph remain undefin. at the same time, there is no monopoli, that is, there is no  vendor that appear in all feasibl set. in auction for other type of set system, the requir that there exist a feasibl solut  disjoint from the select on is even more sever: for exampl, for vertex-cover auction (where vendor correspond to the vertic of some underli graph, and the feasibl set ar vertex cover) the requir mean that the graph must be bipartit. to deal with thi problem, karlin et al. [16] suggest a better benchmark, which is defin for ani monopoli-free set system. thi quantiti, which thei denot by ν, intuit correspond to the valu of a cheapest nash equilibrium. base on thi new definit, the author  construct new mechan for the shortest path problem and show that the overpay of these mechan is within a constant factor of optim. 1.1 our result vertex cover auction we propos a truth polynomi-time auction for vertex cover that output a solut whose cost is within a factor of 2 of optim, and whose frugal ratio is at most 2Δ, where Δ is the maximum degre of the graph (theorem 4). we complement thi result by prove (theorem 5) that for ani Δ and n, there ar graph of maximum degre Δ and size Θ(n) for which ani truth mechan ha frugal ratio at least Δ/2. thi mean that the solut qualiti of our auction is with a factor of 2 of  optim and the frugal ratio is within a factor of 4 of the best  possibl bound for worst-case input. to the best of our knowledg, thi is the first auction for thi problem that enjoi these  properti. moreov, we show how to transform ani truth mechan for the vertex-cover problem into a frugal on while preserv the approxim ratio. frugal ratio our vertex cover result natur suggest two modif of the definit of ν in [16]. these modif can be made independ of each other, result in four  differ payment bound tumax, tumin, ntumax, and ntumin, where ntumin is equal to the origin payment bound ν of in [16]. all four payment bound aris as nash equilibria of certain game (see the full version of thi paper [8]); the differ between them can be seen as the price of initi and the price of  cooper (see section 3). while our main result about vertex cover auction (theorem 4) is with respect to ntumin = ν, we make us of the new definit by first compar the payment of our mechan to a weaker bound ntumax, and then  bootstrap from thi result to obtain the desir bound. inspir by thi applic, we embark on a further studi of these payment bound. our result here ar as follow: 1. we observ (proposit 1) that the four payment bound  alwai obei a particular order that is independ of the choic of the set system and the cost vector, name, tumin ≤ ntumin ≤ ntumax ≤ tumax. we provid exampl (proposit 5 and corollari 1 and 2) show that for the vertex cover problem ani two consecut bound can differ by a factor of n − 2, where n is the number of agent. we then show (theorem 2) that thi  separ is almost best possibl for gener set system by prove that for ani set system tumax/tumin ≤ n. in contrast, we  demonstr (theorem 3) that for path auction tumax/tumin ≤ 2. we provid exampl (proposit 2, 3 and 4) show that thi bound is tight. we see thi as an argument for the studi of  vertexcov auction, as thei appear to be more repres of the  gener team -select problem than the wide studi path auction. 2. we show (theorem 1) that for ani set system, if there is a cost vector for which tumin and ntumin differ by a factor of α, there is anoth cost vector that separ ntumin and ntumax by the same factor and vice versa; the same is true for the pair (ntumin, ntumax) and (ntumax, tumax). thi  symmetri is quit surpris, sinc, e.g., tumin and ntumax ar  obtain from ntumin by two veri differ transform. thi observ suggest that the four payment bound should be  studi in a unifi framework; moreov, it lead us to believ that the bootstrap techniqu of theorem 4 mai have other applic. 3. we evalu the payment bound introduc here with respect to a checklist of desir featur. in particular, we note that the payment bound ν = ntumin of [16] exhibit some  counterintuit properti, such as nonmonoton with respect to ad a new feasibl set (proposit 7), and is np-hard to comput  (theorem 6), while some of the other payment bound do not suffer from these problem. thi can be seen as an argument in favour of us weaker but effici comput bound ntumax and tumax. relat work vertex-cover auction have been studi in the past by talwar [21] and calinescu [5]. both of these paper ar base on the definit of frugal ratio us in [1]; as mention befor, thi mean that their result onli appli to bipartit graph. talwar [21] show that the frugal ratio of vcg is at most Δ. howev, sinc find the cheapest vertex cover is an np-hard problem, the vcg  mechan is computation infeas. the first (and, to the best of our knowledg, onli) paper to investig polynomi-time truth mechan for vertex cover is [5]. thi paper studi an auction that is base on the greedi alloc algorithm, which ha an  approxim ratio of log n. while the main focu of [5] is the more gener set cover problem, the result of [5] impli a frugal ratio of 2Δ2 for vertex cover. our result improv on those of [21] as our mechan is polynomi-time comput, as well as on those of [5], as our mechan ha a better approxim ratio, and we prove a stronger bound on the frugal ratio; moreov, thi bound also appli to the mechan of [5]. 2. preliminari in most of thi paper, we discuss auction for set system. a set system is a pair (e, f), where e is the ground set, |e| = n, and f is a collect of feasibl set, which ar subset of e. two particular type of set system ar of interest to us - shortest path system, in which the ground set consist of all edg of a network, and the feasibl set ar path between two specifi vertic s and t, and vertex cover system, in which the element of the ground set ar the vertic of a graph, and the feasibl set ar vertex cover of thi graph. in set system auction, each element e of the ground set is own by an independ agent and ha an associ non-neg cost ce. the goal of the centr is to select (purchas) a feasibl set. each element e in the select set incur a cost of ce. the element that ar not select incur no cost. the auction proce as follow: all element of the ground set make their bid, the centr select a feasibl set base on the bid and make payment to the agent. formal, an auction is defin by an alloc rule a : rn → f and a payment rule p : rn → rn . the alloc rule take as input a vector of bid and decid which of the set in f should be select. the payment rule also take as input a vector of bid and decid how much to pai to each agent. the standard requir ar individu ration, i.e., the payment to each agent should be at least as high as hi incur cost (0 for agent not in the select set and ce for agent in the 337 select set) and incent compat, or truth, i.e., each agent"s domin strategi is to bid hi true cost. an alloc rule is monoton if an agent cannot increas hi chanc of get select by rais hi bid. formal, for ani bid vector b and ani e ∈ e, if e ∈ a(b) then e ∈ a(b1, . . . , be, . . . , bn) for ani be > be. given a monoton alloc rule a and a bid vector b, the threshold bid te of an agent e ∈ a(b) is the highest bid of thi agent that still win the auction, given that the bid of other particip remain the same. formal, te = sup{be ∈ r | e ∈ a(b1, . . . , be, . . . , bn)}. it is well known (see, e.g. [19, 13]) that ani auction that ha a monoton alloc rule and pai each agent hi threshold bid is truth; convers, ani truth auction ha a monoton alloc rule. the vcg mechan is a truth mechan that maximis the social welfar and pai 0 to the lose agent. for set system auction, thi simpli mean pick a cheapest feasibl set, pai each agent in the select set hi threshold bid, and pai 0 to all other agent. note, howev, that the vcg mechan mai be difficult to implement, sinc find a cheapest feasibl set mai be intract. if u is a set of agent, c(u) denot p w∈u cw. similarli, b(u) denot p w∈u bw. 3. frugal ratio we start by reproduc the definit of the quantiti ν from [16, definit 4]. let (e, f) be a set system and let s be a cheapest feasibl set with respect to the true cost ce. then ν(c, s) is the solut to the follow optimis problem. minimis b = p e∈s be subject to (1) be ≥ ce for all e ∈ e (2) p e∈s\t be ≤ p e∈t \s ce for all t ∈ f (3) for everi e ∈ s, there is a te ∈ f such that e ∈ te andp e ∈s\te be = p e ∈te\s ce the bound ν(c, s) can be seen as an outcom of a two-stage process, where first each agent e ∈ s make a bid be state how much it want to be paid, and then the centr decid whether to accept these bid. the behaviour of both parti is affect by the follow consider. from the centr"s point of view, the set s must remain the most attract choic, i.e., it must be among the cheapest feasibl set under the new cost ce = ce for e ∈ s, ce = be for e ∈ s (condit (2)). the reason for that is that if (2) is violat for some set t, the centr would prefer t to s. on the other hand, no agent would agre to a payment that doe not cover hi cost (condit (1)), and moreov, each agent tri to maximis hi profit by bid as high as possibl, i.e., none of the agent can increas hi bid without violat condit (2) (condit (3)). the centr want to minimis the total payout, so ν(c, s) correspond to the best possibl outcom from the centr"s point of view. thi definit captur mani import aspect of our intuit about ‘fair" payment. howev, it can be modifi in two wai, both of which ar still quit natur, but result in differ payment bound. first, we can consid the worst rather than the best possibl  outcom for the centr. that is, we can consid the maximum total payment that the agent can extract by jointli select their bid subject to (1), (2), and (3). such a bound correspond to  maximis b subject to (1), (2), and (3) rather than minimis it. if it is the agent who make the origin bid (rather than the centr), thi kind of bid behaviour is plausibl. on the other hand, in a game in which the centr propos payment to the agent in s and the agent accept them as long as (1), (2) and (3) ar satisfi, we would be like to observ a total payment of ν(c, s). henc, the differ between these two definit can be seen as the price of initi. second, the agent mai be abl to make payment to each other. in thi case, if thei can extract more monei from the centr by agre on a vector of bid that violat individu ration (i.e., condit (1)) for some bidder, thei might be will to do so, as the agent who ar paid below their cost will be compens by other member of the group. the bid must still be realist, i.e., thei have to satisfi be ≥ 0. the result chang in payment can be seen as the price of co-oper and correspond to replac condit (1) with the follow weaker condit (1∗ ): be ≥ 0 for all e ∈ e. (1∗ ) by consid all possibl combin of these modif, we obtain four differ payment bound, name • tumin(c, s), which is the solut to the optimis  problem minimis b subject to (1∗ ), (2), and (3). • tumax(c, s), which is the solut to the optimis  problem maximis b subject to (1∗ ), (2), and (3). • ntumin(c, s), which is the solut to the optimis problem minimis b subject to (1), (2), and (3). • ntumax(c, s), which is the solut to the optimis problem maximis b subject to (1), (2), (3). the abbrevi tu and ntu correspond, respect, to  transfer util and non-transfer util, i.e., the agent"  abil/inabl to make payment to each other. for concret, we will take tumin(c) to be tumin(c, s) where s is the  lexicograph least amongst the cheapest feasibl set. we  defin tumax(c), ntumin(c), ntumax(c) and ν(c) similarli, though we will see in section 6.3 that, in fact, ntumin(c, s) and ntumax(c, s) ar independ of the choic of s. note that the quantiti ν(c) from [16] is ntumin(c). the second modif (transfer util) is more intuit appeal in the context of the maximis problem, as both  assum some degre of co-oper between the agent. while the second modif can be made without the first, the result payment bound tumin(c, s) is too strong to be a realist  benchmark, at least for gener set system. in particular, it can be smaller than the total cost of the cheapest feasibl set s (see section 6). nevertheless, we provid the definit as well as some result about tumin(c, s) in the paper, both for complet and  becaus we believ that it mai help to understand which properti of the payment bound ar import for our proof. anoth  possibl would be to introduc an addit constraint p e∈s be ≥p e∈s ce in the definit of tumin(c, s) (note that thi  condit hold automat for tumax(c, s), as tumax(c, s) ≥ ntumax(c, s)); howev, such a definit would have no direct game-theoret interpret, and some of our result (in  particular, the on in section 4) would no longer be true. remark 1. for the payment bound that ar deriv from  maximis problem, (i.e., tumax(c, s) and ntumax(c, s)),  constraint of type (3) ar redund and can be drop. henc, tumax(c, s) and ntumax(c, s) ar solut to linear  program, and therefor can be comput in polynomi time as long as we have a separ oracl for constraint in (2). in contrast, 338 ntumin(c, s) can be np-hard to comput even if the size of f is polynomi (see section 6). the first and third inequ in the follow observ  follow from the fact that condit (1∗ ) is strictli weaker than  condit (1). proposit 1. tumin(c, s) ≤ ntumin(c, s) ≤ ntumax(c, s) ≤ tumax(c, s). let m be a truth mechan for (e, f). let pm(c) denot the total payment of m when the actual cost ar c. a frugal ratio of m with respect to a payment bound is the ratio between the payment of m and thi payment bound. in particular, φtumin(m) = sup c pm(c)/tumin(c), φtumax(m) = sup c pm(c)/tumax(c), φntumin(m) = sup c pm(c)/ntumin(c), φntumax(m) = sup c pm(c)/ntumax(c). we conclud thi section by show that there exist set system and respect cost vector for which all four payment bound ar differ. in the next section, we quantifi thi differ, both for gener set system, and for specif type of set system, such as path auction or vertex cover auction. exampl 1. consid the shortest-path auction on the graph of figur 1. the cheapest feasibl set ar all path from a to d. it can be verifi, us the reason of proposit 2 and 3 below, that for the cost vector cab = ccd = 2, cbc = 1, cac = cbd = 5, we have • tumax(c) = 10 (with bab = bcd = 5, bbc = 0), • ntumax(c) = 9 (with bab = bcd = 4, bbc = 1), • ntumin(c) = 7 (with bab = bcd = 2, bbc = 3), • tumin(c) = 5 (with bab = bcd = 0, bbc = 5). 4. compar payment bound 4.1 path auction we start by show that for path auction ani two consecut payment bound can differ by at least a factor of 2. proposit 2. there is an instanc of the shortest-path  problem for which we have ntumax(c)/ntumin(c) ≥ 2. proof. thi construct is due to david kemp [17].  consid the graph of figur 1 with the edg cost cab = cbc = ccd = 0, cac = cbd = 1. under these cost, abcd is the cheapest path. the inequ in (2) ar bab + bbc ≤ cac = 1, bbc + bcd ≤ cbd = 1. by condit (3), both of these  inequ must be tight (the former on is the onli inequ  involv bab, and the latter on is the onli inequ involv bcd). the inequ in (1) ar bab ≥ 0, bbc ≥ 0, bcd ≥ 0. now, if the goal is to maximis bab + bbc + bcd, the best choic is bab = bcd = 1, bbc = 0, so ntumax(c) = 2. on the other hand, if the goal is to minimis bab + bbc + bcd, on should set bab = bcd = 0, bbc = 1, so ntumin(c) = 1. proposit 3. there is an instanc of the shortest-path  problem for which we have tumax(c)/ntumax(c) ≥ 2. proof. again, consid the graph of figur 1. let the edg cost be cab = ccd = 0, cbc = 1, cac = cbd = 1. abcd is the lexicograph-least cheapest path, so we can assum that s = {ab, bc, cd}. the inequ in (2) ar the same as in the previou exampl, and by the same argument both of them ar, in fact, equal. the inequ in (1) ar bab ≥ 0, bbc ≥ 1, bcd ≥ 0. our goal is to maximis bab + bbc + bcd. if we have to respect the inequ in (1), we have to set bab = bcd = 0, bbc = 1, so ntumax(c) = 1. otherwis, we can set bab = bcd = 1, bbc = 0, so tumax(c) ≥ 2. proposit 4. there is an instanc of the shortest-path  problem for which we have ntumin(c)/tumin(c) ≥ 2. proof. thi construct is also base on the graph of figur 1. the edg cost ar cab = ccd = 1, cbc = 0, cac = cbd = 1. abcd is the lexicograph least cheapest path, so we can assum that s = {ab, bc, cd}. again, the inequ in (2) ar the same, and both ar, in fact, equal. the inequ in (1) ar bab ≥ 1, bbc ≥ 0, bcd ≥ 1. our goal is to minimis bab + bbc +bcd. if we have to respect the inequ in (1), we have to set bab = bcd = 1, bbc = 0, so ntumin(c) = 2. otherwis, we can set bab = bcd = 0, bbc = 1, so tumin(c) ≤ 1. in section 4.4 (theorem 3), we show that the separ result in proposit 2, 3, and 4 ar optim. 4.2 connect between separ result the separ result for path auction ar obtain on the same graph us veri similar cost vector. it turn out that thi is not coincident. name, we can prove the follow theorem. theorem 1. for ani set system (e, f), and ani feasibl set s, max c tumax(c, s) ntumax(c, s) = max c ntumax(c, s) ntumin(c, s) , max c ntumax(c, s) ntumin(c, s) = max c ntumin(c, s) tumin(c, s) , where the maximum is over all cost vector c for which s is a cheapest feasibl set. the proof of the theorem follow directli from the four lemma prove below; more precis, the first equal in theorem 1 is obtain by combin lemma 1 and 2, and the second equal is obtain by combin lemma 3 and 4. we prove lemma 1 here; the proof of lemma 2- 4 ar similar and can be found in the full version of thi paper [8]. lemma 1. suppos that c is a cost vector for (e, f) such that s is a cheapest feasibl set and tumax(c, s)/ntumax(c, s) = α. then there is a cost vector c such that s is a cheapest feasibl set and ntumax(c , s)/ntumin(c , s) ≥ α. proof. suppos that tumax(c, s) = x and ntumax(c, s) = y where x/y = α. assum without loss of gener that s consist of element 1, . . . , k, and let b1 = (b1 1, . . . , b1 k) and b2 = (b2 1, . . . , b2 k) be the bid vector that correspond to tumax(c, s) and ntumax(c, s), respect. construct the cost vector c by set ci = ci for i ∈ s, ci = min{ci, b1 i } for i ∈ s. clearli, s is a cheapest set under c . moreov, as the cost of element outsid of s remain the same, the right-hand side of all constraint in (2) did not chang, so ani bid vector that satisfi (2) and (3) with respect to c, also satisfi them with respect to c . we will construct two bid vector b3 and b4 that satisfi condit (1), (2), and (3) for the cost vector c , and 339 x x x x x 0 x 12 3 x 4 5 6 figur 2: graph that separ payment bound for vertex cover, n = 7 have p i∈s b3 i = x, p i∈s b4 i = y . as ntumax(c , s) ≥ x and ntumin(c , s) ≤ y , thi impli the lemma. we can set b3 i = b1 i : thi bid vector satisfi condit (2) and (3) sinc b1 doe, and we have b1 i ≥ min{ci, b1 i } = ci, which mean that b3 satisfi condit (1). furthermor, we can set b4 i = b2 i . again, b4 satisfi condit (2) and (3) sinc b2 doe, and sinc b2 satisfi condit (1), we have b2 i ≥ ci ≥ ci, which mean that b4 satisfi condit (1). lemma 2. suppos c is a cost vector for (e, f) such that s is a cheapest feasibl set and ntumax(c, s)/ntumin(c, s) = α. then there is a cost vector c such that s is a cheapest feasibl set and tumax(c , s)/ntumax(c , s) ≥ α. lemma 3. suppos that c is a cost vector for (e, f) such that s is a cheapest feasibl set and ntumax(c, s)/ntumin(c, s) = α. then there is a cost vector c such that s is a cheapest feasibl set and ntumin(c , s)/tumin(c , s) ≥ α. lemma 4. suppos that c is a cost vector for (e, f) such that s is a cheapest feasibl set and ntumin(c, s)/tumin(c, s) = α. then there is a cost vector c such that s is a cheapest feasibl set and ntumax(c , s)/ntumin(c , s) ≥ α. 4.3 vertex-cover auction in contrast to the case of path auction, for vertex-cover  auction the gap between ntumin(c) and ntumax(c) (and henc between ntumax(c) and tumax(c), and between tumin(c) and ntumin(c)) can be proport to the size of the graph. proposit 5. for ani n ≥ 3, there is a an n-vertex graph and a cost vector c for which tumax(c)/ntumax(c) ≥ n − 2. proof. the underli graph consist of an (n − 1)-cliqu on the vertic x1, . . . , xn−1, and an extra vertex x0 adjac to xn−1. the cost ar cx1 = cx2 = · · · = cxn−2 = 0, cx0 = cxn−1 = 1. we can assum that s = {x0, x1, . . . , xn−2} (thi is the lexicograph first vertex cover of cost 1). for thi set system, the constraint in (2) ar bxi + bx0 ≤ cxn−1 = 1 for i = 1, . . . , n − 2. clearli, we can satisfi condit (2) and (3) by set bxi = 1 for i = 1, . . . , n − 2, bx0 = 0. henc, tumax(c) ≥ n − 2. for ntumax(c), there is an addit constraint bx0 ≥ 1, so the best we can do is to set bxi = 0 for i = 1, . . . , n − 2, bx0 = 1, which impli ntumax(c) = 1. combin proposit 5 with lemma 1 and 3, we deriv the follow corollari. corollari 1. for ani n ≥ 3, we can construct an instanc of the vertex cover problem on a graph of size n that satisfi ntumax(c)/ntumin(c) ≥ n − 2. corollari 2. for ani n ≥ 3, we can construct an instanc of the vertex cover problem on a graph of size n that satisfi ntumin(c)/tumin(c) ≥ n − 2. j+2ix ij p \ p ij+2p \ p yijixix j j+1 i j+2ij+1 y y i i j+2ie j e j+1 e ij+1 p \ p figur 3: proof of theorem 3: constraint for ˆpij and ˆpij+2 do not overlap 4.4 upper bound it turn out that the lower bound prove in the previou  subsect is almost tight. more precis, the follow theorem show that no two payment bound can differ by more than a factor of n; moreov, thi is the case not just for the vertex cover problem, but for gener set system. we bound the gap between tumax(c) and tumin(c). sinc tumin(c) ≤ ntumin(c) ≤ ntumax(c) ≤ tumax(c), thi bound appli to ani pair of payment bound. theorem 2. for ani set system (e, f) and ani cost vector c, we have tumax(c)/tumin(c) ≤ n. proof. assum wlog that the win set s consist of  element 1, . . . , k. let c1, . . . , ck be the true cost of element in s, let b1, . . . , bk be their bid that correspond to tumin(c), and let b1 , . . . , bk be their bid that correspond to tumax(c). consid the condit (2) and (3) for s. on can pick a subset l of at most k inequ in (2) so that for each i = 1, . . . , k there is at least on inequ in l that is tight for bi. suppos that the jth inequ in l is of the form bi1 + · · · + bit ≤ c(tj \ s). for bi, all inequ in l ar, in fact, equal. henc, by ad up all of them we obtain k p i=1,...,k bi ≥ p j=1,...,k c(tj \ s). on the other hand, all these inequ appear in condit (2), so thei must hold for bi , i.e., p i=1,...,k bi ≤ p j=1,...,k c(tj \ s). combin these two inequ, we obtain ntumin(c) ≥ ktumin(c) ≥ tumax(c). remark 2. the final line of the proof of theorem 2 show that, in fact, the upper bound on tumax(c)/tumin(c) can be strengthen to the size of the win set, k. note that in  proposit 5, as well as in corollari 1 and 2, k = n−1, so these result do not contradict each other. for path auction, thi upper bound can be improv to 2,  match the lower bound of section 4.1. theorem 3. for ani instanc of the shortest path problem, tumax(c) ≤ 2 tumin(c). proof. given a network (g, s, t), assum without loss of  gener that the lexicograph-least cheapest s-t path, p, in g is {e1, . . . , ek}, where e1 = (s, v1), e2 = (v1, v2), . . . , ek = (vk−1, t). let c1, . . . , ck be the true cost of e1, . . . , ek, and let b = (b1, . . . , bk) and b = (b1 , . . . , bk ) be bid vector that  correspond to tumin(c) and tumax(c), respect. for ani i = 1, . . . , k, there is a constraint in (2) that is tight for bi with respect to the bid vector b , i.e., an s-t path pi that avoid ei and satisfi b (p \pi) = c(pi \p). we can assum without loss of gener that pi coincid with p up to some vertex xi, then deviat from p to avoid ei, and final return to p at a vertex 340 yi and coincid with p from then on (clearli, it might happen that s = xi or t = yi). inde, if pi deviat from p more than onc, on of these deviat is not necessari to avoid ei and can be replac with the respect segment of p without increas the cost of pi. among all path of thi form, let ˆpi be the on with the largest valu of yi, i.e., the rightmost on. thi path correspond to an inequ ii of the form bxi+1 + · · · + byi ≤ c( ˆpi \ p). as in the proof of theorem 2, we construct a set of tight  constraint l such that everi variabl bi appear in at least on of these constraint; howev, now we have to be more care about the choic of constraint in l. we construct l induct as follow. start by set l = {i1}. at the jth step, suppos that all  variabl up to (but not includ) bij appear in at least on inequ in l. add iij to l. note that for ani j we have yij+1 > yij . thi is becaus the inequ ad to l dure the first j step did not cover bij+1 . see figur 3. sinc yij+2 > yij+1 , we must also have xij+2 > yij : otherwis, ˆpij+1 would not be the rightmost constraint for bij+1 . therefor, the variabl in iij+2 and iij do not overlap, and henc no bi can appear in more than two inequ in l. now we follow the argument of the proof of theorem 2 to finish. by ad up all of the (tight) inequ in l for bi we obtain 2 p i=1,...,k bi ≥ p j=1,...,k c( ˆpj \ p). on the other hand, all these inequ appear in condit (2), so thei must hold for bi , i.e., p i=1,...,k bi ≤ p j=1,...,k c( ˆpj \ p), so tumax(c) ≤ 2tumin(c). 5. truth mechan for  vertex cover recal that for a vertex-cover auction on a graph g = (v, e), an alloc rule is an algorithm that take as input a bid bv for each vertex and return a vertex cover ˆs of g. as explain in  section 2, we can combin a monoton alloc rule with threshold payment to obtain a truth auction. two natur exampl of monoton alloc rule ar aopt, i.e., the algorithm that find an optim vertex cover, and the greedi algorithm agr. howev, aopt cannot be guarante to run in polynomi time unless p = np and agr ha approxim ratio of log n. anoth approxim algorithm for vertex cover, which ha  approxim ratio 2, is the local ratio algorithm alr [2, 3]. thi algorithm consid the edg of g on by on. given an edg e = (u, v), it comput = min{bu, bv} and set bu = bu − , bv = bv − . after all edg have been process, alr return the set of vertic {v | bv = 0}. it is not hard to check that if the order in which the edg ar consid is independ of the bid, then thi algorithm is monoton as well. henc, we can us it to construct a truth auction that is guarante to select a vertex cover whose cost is within a factor of 2 from the optim. howev, while the qualiti of the solut produc by alr is much better than that of agr, we still need to show that it total payment is not too high. in the next subsect, we bound the  frugal ratio of alr (and, more gener, all algorithm that satisfi the condit of local optim, defin later) by 2Δ, where Δ is the maximum degre of g. we then prove a match lower bound show that for some graph the frugal ratio of ani truth  auction is at least Δ/2. 5.1 upper bound we sai that an alloc rule is local optim if whenev bv >p w∼v bw, the vertex v is not chosen. note that for ani such rule the threshold bid of v satisfi tv ≤ p w∼v bw. claim 1. the algorithm aopt, agr, and alr ar local optim. theorem 4. ani vertex cover auction m that ha a local optim and monoton alloc rule and pai each agent hi threshold bid ha frugal ratio φntumin(m) ≤ 2Δ. to prove theorem 4, we first show that the total payment of ani local optim mechan doe not exce Δc(v ). we then demonstr that ntumin(c) ≥ c(v )/2. by combin these two result, the theorem follow. lemma 5. consid a graph g = (v, e) with maximum  degre Δ. let m be a vertex-cover auction on g that satisfi the condit of theorem 4. then for ani cost vector c, the total  payment of m satisfi pm(c) ≤ Δc(v ). proof. first note that ani such auction is truth, so we can assum that each agent"s bid is equal to hi cost. let ˆs be the vertex cover select by m. then by local optim pm(c) = x v∈ ˆs tv ≤ x v∈ ˆs x w∼v cw ≤ x w∈v Δcw = Δc(v ). we now deriv a lower bound on tumax(c); while not essenti for the proof of theorem 4, it help us build the intuit necessari for that proof. lemma 6. for a vertex cover instanc g = (v, e) in which s is a minimum vertex cover, tumax(c, s) ≥ c(v \ s) proof. for a vertex w with at least on neighbour in s, let d(w) denot the number of neighbour that w ha in s. consid the bid vector b in which, for each v ∈ s, bv = p w∼v,w∈s cw d(w) . then p v∈s bv = p v∈s p w∼v,w∈s cw/d(w) = p w /∈s cw = c(v \ s). to finish we want to show that b is feasibl in the sens that it satisfi (2). consid a vertex cover t, and extend the bid vector b by assign bv = cv for v /∈ s. then b(t) = c(t \s)+b(s∩t) ≥ c(t \s)+ x v∈s∩t x w∈s∩t :w∼v cw d(w) , and sinc all edg between s ∩ t and s go to s ∩ t, the  righthand-side is equal to c(t \s)+ x w∈s∩t cw = c(t \s)+c(s ∩t) = c(v \s) = b(s). next, we prove a lower bound on ntumax(c, s); we will then us it to obtain a lower bound on ntumin(c). lemma 7. for a vertex cover instanc g = (v, e) in which s is a minimum vertex cover, ntumax(c, s) ≥ c(v \ s) proof. if c(s) ≥ c(v \ s), by condit (1) we ar done. therefor, for the rest of the proof we assum that c(s) < c(v \ s). we show how to construct a bid vector (be)e∈s that satisfi condit (1) and (2) such that b(s) ≥ c(v \ s); clearli, thi impli ntumax(c, s) ≥ c(v \ s). recal that a network flow problem is describ by a direct graph Γ = (vΓ, eΓ), a sourc node s ∈ vΓ, a sink node t ∈ vΓ, and a vector of capac constraint ae, e ∈ eΓ. consid a network (vΓ, eΓ) such that vΓ = v ∪{s, t}, eΓ = e1 ∪e2 ∪e3, where e1 = {(s, v) | v ∈ s}, e2 = {(v, w) | v ∈ s, w ∈ 341 v \ s, (v, w) ∈ e}, e3 = {(w, t) | w ∈ v \ s}. sinc s is a vertex cover for g, no edg of e can have both of it endpoint in v \ s, and by construct, e2 contain no edg with both endpoint in s. therefor, the graph (v, e2) is bipartit with part (s, v \ s). set the capac constraint for e ∈ eΓ as follow: a(s,v) = cv, a(w,t) = cw, a(v,w) = +∞ for all v ∈ s, w ∈ v \ s. recal that a cut is a partit of the vertic in vΓ into two set c1 and c2 so that s ∈ c1, t ∈ c2; we denot such a cut by c = (c1, c2). abus notat, we write e = (u, v) ∈ c if u ∈ c1, v ∈ c2 or u ∈ c2, v ∈ c1, and sai that such an edg e = (u, v) cross the cut c. the capac of a cut c is comput as cap(c) = p (v,w)∈c a(v,w). we have cap(s, v ∪{t}) = c(s), cap({s} ∪ v, t) = c(v \ s). let cmin = ({s} ∪ s ∪ w , {t} ∪ s ∪ w ) be a minimum cut in Γ, where s , s ⊆ s, w , w ⊆ v \ s. see figur 4. as cap(cmin) ≤ cap(s, v ∪ {t}) = c(s) < +∞, and ani edg in e2 ha infinit capac, no edg (u, v) ∈ e2 cross cmin. consid the network Γ = (vΓ , eΓ ), where vΓ = {s} ∪ s ∪ w ∪ {t}, eΓ = {(u, v) ∈ eΓ | u, v ∈ vΓ }. clearli, c = ({s} ∪ s ∪ w , {t}) is a minimum cut in Γ (otherwis, there would exist a smaller cut for Γ). as cap(c ) = c(w ), we have c(s ) ≥ c(w ). now, consid the network Γ = (vΓ , eΓ ), where vΓ = {s} ∪ s ∪ w ∪ {t}, eΓ = {(u, v) ∈ eΓ | u, v ∈ vΓ }. similarli, c = ({s}, s ∪ w ∪ {t}) is a minimum cut in Γ , cap(c ) = c(s ). as the size of a maximum flow from s to t is equal to the capac of a minimum cut separ s and t, there exist a flow f = (fe)e∈eΓ of size c(s ). thi flow ha to satur all edg between s and s , i.e., f(s,v) = cv for all v ∈ s . now, increas the capac of all edg between s and s to +∞. in the modifi network, the capac of a minimum cut (and henc the size of a maximum flow) is c(w ), and a maximum flow f = (fe)e∈eΓ can be construct by greedili augment f. set bv = cv for all v ∈ s , bv = f(s,v) for all v ∈ s . as f is construct by augment f, we have bv ≥ cv for all v ∈ s, i.e., condit (1) is satisfi. now, let us check that no vertex cover t ⊆ v can violat  condit (2). set t1 = t ∩ s , t2 = t ∩ s , t3 = t ∩ w , t4 = t ∩ w ; our goal is to show that b(s \ t1) + b(s \ t2) ≤ c(t3)+c(t4). consid all edg (u, v) ∈ e such that u ∈ s \t1. if (u, v) ∈ e2 then v ∈ t3 (no edg in e2 can cross the cut), and if u, v ∈ s then v ∈ t1∪t2. henc, t1∪t3∪s is a vertex cover for g, and therefor c(t1)+ c(t3)+ c(s ) ≥ c(s) = c(t1)+ c(s \ t1) + c(s ). consequ, c(t3) ≥ c(s \ t1) = b(s \ t1). now, consid the vertic in s \t2. ani edg in e2 that start in on of these vertic ha to end in t4 (thi edg ha to be cover by t, and it cannot go across the cut). therefor, the total flow out of s \t2 is at most the total flow out of t4, i.e., b(s \t2) ≤ c(t4). henc, b(s \ t1) + b(s \ t2) ≤ c(t3) + c(t4). final, we deriv a lower bound on the payment bound that is of interest to us, name, ntumin(c). lemma 8. for a vertex cover instanc g = (v, e) in which s is a minimum vertex cover, ntumin(c, s) ≥ c(v \ s) proof. suppos for contradict that c is a cost vector with minimum-cost vertex cover s and ntumin(c, s) < c(v \s). let b be the correspond bid vector and let c be a new cost vector with cv = bv for v ∈ s and cv = cv for v ∈ s. condit (2) guarante that s is an optim solut to the cost vector c . now comput a bid vector b correspond to ntumax(c , s). we s" w"" s"" w" s t t1 t3 t2 t4 0 00 1 11 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 00 00 11 11 0 00 1 11 0 00 1 11 0 00 1 11 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111 00000 0000000000 0000000000 00000 0000000000 0000000000 00000 0000000000 11111 1111111111 1111111111 11111 1111111111 1111111111 11111 1111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 0000 00000000 00000000 0000 00000000 00000000 0000 00000000 1111 11111111 11111111 1111 11111111 11111111 1111 11111111 00 0000 0000 00 0000 0000 00 0000 11 1111 1111 11 1111 1111 11 1111000 000000 000000 000 000000 000000 000 000000 000000 000 000 111 111111 111111 111 111111 111111 111 111111 111111 111 111 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 00000000000000 0000000 00000000000000 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 11111111111111 1111111 11111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 000000000000 000000 000000000000 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 111111111111 111111 111111111111 000 000000 000000 000 000000 000000 000 000000 000000 000 000000 111 111111 111111 111 111111 111111 111 111111 111111 111 111111 figur 4: proof of lemma 7. dash line correspond to edg in e \ e2 claim that bv = cv for ani v ∈ s. inde, suppos that bv > cv for some v ∈ s (bv = cv for v ∈ s by construct). as b satisfi condit (1)-(3), among the inequ in (2) there is on that is tight for v and the bid vector b. that is, b(s \ t) = c(t \ s). by the construct of c , c (s \ t) = c (t \ s). now sinc bw ≥ cw for all w ∈ s, bv > cv impli b (s \t) > c (s \t) = c (t \s). but thi violat (2). so we now know b = c . henc, we have ntumax(c , s) = p v∈s bv = ntumin(c, s) < c(v \ s), give a contradict to the fact that ntumax(c , s) ≥ c (v \s) which we prove in lemma 7. as ntumin(c, s) satisfi condit (1), it follow that we have ntumin(c, s) ≥ c(s). togeth will lemma 8, thi impli ntumin(c, s) ≥ max{c(v \ s), c(s)} ≥ c(v )/2. combin with lemma 5, thi complet the proof of theorem 4. remark 3. as ntumin(c) ≤ ntumax(c) ≤ tumax(c), our bound of 2Δ extend to the smaller frugal ratio that we  consid, i.e., φntumax(m) and φtumax(m). it is not clear whether it extend to the larger frugal ratio φtumin(m). howev, the frugal ratio φtumin(m) is not realist becaus the payment bound tumin(c) is inappropri low - we show in section 6 that tumin(c) can be significantli smaller than the total cost of a cheapest vertex cover. extens we can also appli our result to monoton vertex-cover algorithm that do not necessarili output local-optim solut. to do so, we simpli take the vertex cover produc by ani such algorithm and transform it into a local-optim on, consid the vertic in lexicograph order and replac a vertex v with it neighbour whenev bv > p u∼v bu. note that if a vertex u ha been ad to the vertex cover dure thi process, it mean that it ha a neighbour whose bid is higher than bu, so after on pass all vertic in the  vertex cover satisfi bv ≤ p u∼v bu. thi procedur is monoton in bid, and it can onli decreas the cost of the vertex cover.  therefor, us it on top of a monoton alloc rule with  approx342 imat ratio α, we obtain a monoton local-optim alloc rule with approxim ratio α. combin it with threshold  payment, we get an auction with φntumin ≤ 2Δ. sinc ani truth auction ha a monoton alloc rule, thi procedur transform ani truth mechan for the vertex-cover problem into a frugal on while preserv the approxim ratio. 5.2 lower bound in thi subsect, we prove that the upper bound of theorem 4 is essenti optim. our proof us the techniqu of [9], where the author prove a similar result for shortest-path auction. theorem 5. for ani Δ > 0 and ani n, there exist a graph g of maximum degre Δ and size n > n such that for ani truth mechan m on g we have φntumin(m) ≥ Δ/2. proof. given n and Δ, set k = n/2Δ . let g be the graph that consist of k block b1, . . . , bk of size 2Δ each, where each bi is a complet bipartit graph with part li and ri, |li| = |ri| = Δ. we will consid two famili of cost vector for g. under a cost vector x ∈ x, each block bi ha on vertex of cost 1; all other vertic cost 0. under a cost vector y ∈ y , there is on block that ha two vertic of cost 1, on in each part, all other block have on vertex of cost 1, and all other vertic cost 0. clearli, |x| = (2Δ)k , |y | = k(2Δ)k−1 Δ2 . we will now construct a bipartit graph w with the vertex set x ∪ y as follow. consid a cost vector y ∈ y that ha two vertic of cost 1 in bi; let these vertic be vl ∈ li and vr ∈ ri. by chang the cost of either of these vertic to 0, we obtain a cost vector in x. let xl and xr be the cost vector obtain by chang the cost of vl and vr, respect. the vertex cover chosen by m(y) must either contain all vertic in li or it must contain all vertic in ri. in the former case, we put in w an edg from y to xl and in the latter case we put in w an edg from y to xr (if the vertex cover includ all of bi, w contain both of these edg). the graph w ha at least k(2Δ)k−1 Δ2 edg, so there must exist an x ∈ x of degre at least kΔ/2. let y1, . . . , ykΔ/2 be the other endpoint of the edg incid to x, and for each i = 1, . . . , kΔ/2, let vi be the vertex whose cost is differ under x and yi; note that all vi ar distinct. it is not hard to see that ntumin(x) ≤ k: the cheapest vertex cover contain the all-0 part of each block, and we can satisfi  condit (1)-(3) by let on of the vertic in the all-0 part of each block to bid 1, while all other the vertic in the cheapest set bid 0. on the other hand, by monoton of m we have vi ∈ m(x) for i = 1, . . . , kΔ/2 (vi is in the win set under yi, and x is obtain from yi by decreas the cost of vi), and moreov, the threshold bid of each vi is at least 1, so the total payment of m on x is at least kΔ/2. henc, φntumin(m) ≥ m(x)/ntumin(x) ≥ Δ/2. remark 4. the lower bound of theorem 5 can be generalis to randomis mechan, where a randomis mechan is  consid to be truth if it can be repres as a probabl  distribut over truth mechan. in thi case, instead of choos the vertex x ∈ x with the highest degre, we put both (y, xl) and (y, xr) into w , label each edg with the probabl that the respect part of the block is chosen, and pick x ∈ x with the highest weight degre. the argument can be further extend to a more permiss definit of truth for randomis  mechan, but thi discuss is beyond the scope of thi paper. 6. properti of payment bound in thi section we consid sever desir properti of  payment bound and evalu the four payment bound propos in thi paper with respect to them. the particular properti that we ar interest in ar independ of the choic of s (section 6.3), monoton (section 6.4.1), comput hard (section 6.4.2), and the relationship with other reason bound, such as the total cost of the cheapest set (section 6.1), or the total vcg payment (section 6.2). 6.1 comparison with total cost our first requir is that a payment bound should not be less than the total cost of the select set. payment bound ar us to evalu the perform of set-system auction. the latter have to satisfi individu ration, i.e., the payment to each agent must be at least as larg as hi incur cost; it is onli reason to requir the payment bound to satisfi the same requir. clearli, ntumax(c) and ntumin(c) satisfi thi requir due to condit (1), and so doe tumax(c), sinc tumax(c) ≥ ntumax(c). howev, tumin(c) fail thi test. the exampl of proposit 4 show that for path auction, tumin(c) can be smaller than the total cost by a factor of 2. moreov, there ar set system and cost vector for which tumin(c) is smaller than the cost of the cheapest set s by a factor of Ω(n). consid, for  exampl, the vertex-cover auction for the graph of proposit 5 with the cost cx1 = · · · = cxn−2 = cxn−1 = 1, cx0 = 0. the cost of a cheapest vertex cover is n − 2, and the lexicograph first vertex cover of cost n−2 is {x0, x1, . . . , xn−2}. the constraint in (2) ar bxi + bx0 ≤ cxn−1 = 1. clearli, we can satisfi  condit (2) and (3) by set bx1 = · · · = bxn−2 = 0, bx0 = 1, which mean that tumin(c) ≤ 1. thi observ suggest that the payment bound tumin(c) is too strong to be realist, sinc it can be substanti lower than the cost of the cheapest feasibl set. nevertheless, some of the posit result that were prove in [16] for ntumin(c) go through for tumin(c) as well. in particular, on can show that if the feasibl set ar the base of a  monopolyfre matroid, then φtumin(vcg) = 1. to show that φtumin(vcg) is at most 1, on must prove that the vcg payment is at most tumin(c). thi is shown for ntumin(c) in the first paragraph of the proof of theorem 5 in [16]. their argument doe not us  condit (1) at all, so it also appli to tumin(c). on the other hand, φtumin(vcg) ≥ 1 sinc φtumin(vcg) ≥ φntumin(vcg) and φntumin(vcg) ≥ 1 by proposit 7 of [16] (and also by proposit 6 below). 6.2 comparison with vcg payment anoth measur of suitabl for payment bound is that thei should not result in frugal ratio that ar less then 1 for  wellknown truth mechan. if thi is inde the case, the payment bound mai be too weak, as it becom too easi to design  mechan that perform well with respect to it. it particular, a reason requir is that a payment bound should not exce the total payment of the classic vcg mechan. the follow proposit show that ntumax(c), and  therefor also ntumin(c) and tumin(c), do not exce the vcg payment pvcg(c). the proof essenti follow the argument of proposit 7 of [16] and can be found in the full version of thi paper [8]. proposit 6. φntumax(vcg) ≥ 1. proposit 6 show that none of the payment bound tumin(c), ntumin(c) and ntumax(c) exce the payment of vcg.  howev, the payment bound tumax(c) can be larger that the total 343 vcg payment. in particular, for the instanc in proposit 5, the vcg payment is smaller than tumax(c) by a factor of n − 2. we have alreadi seen that tumax(c) ≥ n − 2. on the other hand, under vcg, the threshold bid of ani xi, i = 1, . . . , n − 2, is 0: if ani such vertex bid abov 0, it is delet from the win set togeth with x0 and replac with xn−1. similarli, the threshold bid of x0 is 1, becaus if x0 bid abov 1, it can be replac with xn−1. so the vcg payment is 1. thi result is not surpris: the definit of tumax(c)  implicitli assum there is co-oper between the agent, while the comput of vcg payment doe not take into account ani interact between them. inde, co-oper enabl the agent to extract higher payment under vcg. that is, vcg is not  groupstrategyproof. thi suggest that as a payment bound, tumax(c) mai be too liber, at least in a context where there is littl or no co-oper between agent. perhap tumax(c) can be a good benchmark for measur the perform of mechan  design for agent that can form coalit or make side payment to each other, in particular, group-strategyproof mechan. anoth set in which bound φtumax is still of some  interest is when, for the underli problem, the optim alloc and vcg payment ar np-hard to comput. in thi case, find a polynomi-time comput mechan with good frugal  ratio with respect to tumax(c) is a non-trivial task, while bound the frugal ratio with respect to more challeng payment bound could be too difficult. to illustr thi point, compar the proof of lemma 6 and lemma 7: both requir some effort, but the latter is much more difficult than the former. 6.3 the choic of s all payment bound defin in thi paper correspond to the total bid of all element in the cheapest feasibl set, where ti ar  broken lexicograph. while thi definit ensur that our  payment bound ar well-defin, the particular choic of the  drawresolut rule appear arbitrari, and on might wonder if our  payment bound ar suffici robust to be independ of thi choic. it turn out that is inde the case for ntumin(c) and ntumax(c), i.e., these bound do not depend on the draw-resolut rule. to see thi, suppos that two feasibl set s1 and s2 have the same cost. in the comput of ntumin(c, s1), all vertic in s1 \s2 would have to bid their true cost, sinc otherwis s2 would  becom cheaper than s1. henc, ani bid vector for s1 can onli have be = ce for e ∈ s1 ∩ s2, and henc constitut a valid bid vector for s2 and vice versa. a similar argument appli to ntumax(c). howev, for tumin(c) and tumax(c) thi is not the case. for exampl, consid the set system e = {e1, e2, e3, e4, e5}, f = {s1 = {e1, e2}, s2 = {e2, e3, e4}, s3 = {e4, e5}} with the cost c1 = 2, c2 = c3 = c4 = 1, c5 = 3. the cheapest set ar s1 and s2. now tumax(c, s1) ≤ 4, as the total bid of the element in s1 cannot exce the total cost of s3. on the other hand, tumax(c, s2) ≥ 5, as we can set b2 = 3, b3 = 0, b4 = 2. similarli, tumin(c, s1) = 4, becaus the inequ in (2) ar b1 ≤ 2 and b1 + b2 ≤ 4. but tumin(c, s2) ≤ 3 as we can set b2 = 1, b3 = 2, b4 = 0. 6.4 neg result for ntumin(c) and tumin(c) the result in [16] and our vertex cover result ar prove for the frugal ratio φntumin. inde, it can be argu that φntumin is the best definit of frugal ratio, becaus among all  reason payment bound (i.e., on that ar at least as larg as the cost of the cheapest feasibl set), it is most demand of the algorithm. howev, ntumin(c) is not alwai the easiest or the most natur payment bound to work with. in thi subsect, we discuss sever disadvantag of ntumin(c) (and also tumin(c)) as compar to ntumax(c) and tumax(c). 6.4.1 nonmonoton the first problem with ntumin(c) is that it is not monoton with respect to f, i.e., it mai increas when on add a feasibl set to f. (it is, howev, monoton in the sens that a lose agent cannot becom a winner by rais hi cost.) intuit, a good payment bound should satisfi thi monoton requir, as ad a feasibl set increas the competit, so it should drive the price down. note that thi inde the case for ntumax(c) and tumax(c) sinc a new feasibl set add a constraint in (2), thu limit the solut space for the respect linear program. proposit 7. ad a feasibl set to f can increas the valu of ntumin(c) by a factor of Ω(n). proof. let e = {x, xx, y1, . . . , yn, z1, . . . , zn}. set y = {y1, . . . , yn}, s = y ∪ {x}, ti = y \ {yi} ∪ {zi}, i = 1, . . . , n, and suppos that f = {s, t1, . . . , tn}. the cost ar cx = 0, cxx = 0, cyi = 0, czi = 1 for i = 1, . . . , n. note that s is the cheapest feasibl set. let f = f ∪ {t0}, where t0 = y ∪ {xx}. for f, the bid vector by1 = · · · = byn = 0, bx = 1 satisfi (1), (2), and (3), so ntumin(c) ≤ 1. for f , s is still the lexicograph-least cheapest set. ani optim solut ha bx = 0 (by constraint in (2) with t0). condit (3) for yi impli bx + byi = czi = 1, so byi = 1 and ntumin(c) = n. for path auction, it ha been shown [18] that ntumin(c) is non-monoton in a slightli differ sens, i.e., with respect to ad a new edg (agent) rather than a new feasibl set (a team of exist agent). remark 5. we can also show that ntumin(c) is non-monoton for vertex cover. in thi case, ad a new feasibl set correspond to delet edg from the graph. it turn out that delet a singl edg can increas ntumin(c) by a factor of n − 2; the  construct is similar to that of proposit 5. 6.4.2 np-hard anoth problem with ntumin(c, s) is that it is np-hard to comput even if the number of feasibl set is polynomi in n. again, thi put it at a disadvantag compar to ntumax(c, s) and tumax(c, s) (see remark 1). theorem 6. comput ntumin(c) is np-hard, even when the lexicograph-least feasibl set s is given in the input. proof. we reduc exact cover by 3-set(x3c) to our  problem. an instanc of x3c is given by a univers g = {g1, . . . , gn} and a collect of subset c1, . . . , cm, ci ⊂ g, |ci| = 3, where the goal is to decid whether on can cover g by n/3 of these set. observ that if thi is inde the case, each element of g is  contain in exactli on set of the cover. lemma 9. consid a minimis problem p of the follow form: minimis p i=1,...,n bi under condit (1) bi ≥ 0 for all i = 1, . . . , n; (2) for ani j = 1, . . . , k we have p bi∈sj bi ≤ aj, where sj ⊆ {b1, . . . , bn}; (3) for each bj , on of the constraint in (2) involv it is tight. for ani such p, on can construct a set system s and a vector of cost c such that ntumin(c) is the optim solut to p. proof. the construct is straightforward: there is an element of cost 0 for each bi, an element of cost aj for each aj, the feasibl solut ar {b1, . . . , bn}, or ani set obtain from {b1, . . . , bn} by replac the element in sj by aj. 344 by thi lemma, all we have to do to prove theorem 6 is to show how to solv x3c by us the solut to a minimis problem of the form given in lemma 9. we do thi as follow. for each ci, we introduc 4 variabl xi, ¯xi, ai, and bi. also, for each element gj of g there is a variabl dj. we us the follow set of constraint: • in (1), we have constraint xi ≥ 0, ¯xi ≥ 0, ai ≥ 0, bi ≥ 0, dj ≥ 0 for all i = 1, . . . , m, j = 1, . . . , n. • in (2), for all i = 1, . . . , m, we have the follow 5  constraint: xi + ¯xi ≤ 1, xi +ai ≤ 1, ¯xi +ai ≤ 1, xi +bi ≤ 1, ¯xi + bi ≤ 1. also, for all j = 1, . . . , n we have a constraint of the form xi1 + · · · + xik + dj ≤ 1, where ci1 , . . . , cik ar the set that contain gj. the goal is to minim z = p i(xi + ¯xi + ai + bi) + p j dj. observ that for each j, there is onli on constraint involv dj , so by condit (3) it must be tight. consid the two constraint involv ai. on of them must be tight, and therefor xi +¯xi +ai +bi ≥ xi +¯xi +ai ≥ 1. henc, for ani feasibl solut to (1)-(3) we have z ≥ m. now, suppos that there is an exact set cover. set dj = 0 for j = 1, . . . , n. also, if ci is includ in thi cover, set xi = 1, ¯xi = ai = bi = 0, otherwis set ¯xi = 1, xi = ai = bi = 0. clearli, all inequ in (2) ar satisfi (we us the fact that each element is cover exactli onc), and for each variabl, on of the constraint involv it is tight. thi assign result in z = m. convers, suppos there is a feasibl solut with z = m. as each addend of the form xi + ¯xi + ai + bi contribut at least 1, we have xi + ¯xi + ai + bi = 1 for all i, dj = 0 for all j. we will now show that for each i, either xi = 1 and ¯xi = 0, or xi = 0 and ¯xi = 1. for the sake of contradict, suppos that xi = δ < 1, ¯xi = δ < 1. as on of the constraint involv ai must be tight, we have ai ≥ min{1 − δ, 1 − δ }. similarli, bi ≥ min{1 − δ, 1 − δ }. henc, xi + ¯xi + ai + bi = 1 = δ +δ +2 min{1−δ, 1−δ } > 1. to finish the proof, note that for each j = 1, . . . , m we have xi1 + · · · + xik + dj = 1 and dj = 0, so the subset that correspond to xi = 1 constitut a set cover. remark 6. in the proof of proposit 7 and theorem 6 all constraint in (1) ar of the form be ≥ 0. henc, the same result ar true for tumin(c). remark 7. for shortest-path auction, the size of f can be superpolynomi. howev, there is a polynomi-time separ oracl for constraint in (2) (to construct on, us ani algorithm for find shortest path), so on can comput ntumax(c) and tumax(c) in polynomi time. on the other hand, recent and independ it wa shown [18] that comput ntumin(c) for shortest-path auction is np-hard. 7. refer [1] a. archer and e. tardo, frugal path mechan. in proceed of the 13th annual acm-siam symposium on discret algorithm, page 991-999, 2002 [2] r. bar-yehuda, k. bendel, a. freund, and d. rawitz, local ratio: a unifi framework for approxim algorithm. in memoriam: shimon even 1935-2004. acm comput. surv., 36(4):422-463, 2004 [3] r. bar-yehuda and s. even, a local-ratio theorem for approxim the weight vertex cover problem. annal of discret mathemat, 25:27-46, 1985 [4] e. clark, multipart price of public good. public choic, 8:17-33, 1971 [5] g. calinescu, bound the payment of approxim truth mechan. in proceed of the 15th intern symposium on algorithm and comput, page 221-233, 2004 [6] a. czumaj and a. ronen, on the expect payment of mechan for task alloc. in proceed of the 5th acm confer on electron commerc (ec"04), 2004 [7] e. elkind, true cost of cheap labor ar hard to measur: edg delet and vcg payment in graph. in proceed of the 6th acm confer on electron commerc (ec"05), 2005 [8] e. elkind, l. a. goldberg, and p. w. goldberg, frugal ratio and improv truth mechan for vertex cover. avail from http://arxiv.org/ab/cs/0606044, 2006 [9] e. elkind, a. sahai, and k. steiglitz, frugal in path auction. in proceed of the 15th annual acm-siam symposium on discret algorithm, page 694-702, 2004 [10] j. feigenbaum, c. h. papadimitri, r. sami, and s. shenker, a bgp-base mechan for lowest-cost rout. in proceed of the 21st symposium on principl of distribut comput, page 173-182, 2002 [11] a. fiat, a. goldberg, j. hartlin, and a. karlin, competit gener auction. in proceed of the 34th annual acm symposium on theori of comput, page 72-81, 2002 [12] r. garg, v. kumar, a. rudra and a. verma, coalit game on graph: core structur, substitut and frugal. in proceed of the 4th acm confer on electron commerc (ec"03), 2005 [13] a. goldberg, j. hartlin, and a. wright, competit auction and digit good. in proceed of the 12th annual acm-siam symposium on discret algorithm, page 735-744, 2001 [14] t. grove, incent in team. econometrica, 41(4):617-631, 1973 [15] n. immorlica, d. karger, e. nikolova, and r. sami, first-price path auction. in proceed of the 6th acm confer on electron commerc (ec"05), 2005 [16] a. r. karlin, d. kemp, and t. tamir, beyond vcg: frugal of truth mechan. in proceed of the 46th annual ieee symposium on foundat of comput scienc, page 615-626, 2005 [17] d. kemp, person commun, 2006 [18] n. chen, a. r. karlin, cheap labor can be expens, in proceed of the 18th annual acm-siam symposium on discret algorithm, page 735-744, 2007 [19] n. nisan and a. ronen, algorithm mechan design. in proceed of the 31st annual acm symposium on theori of comput, page 129-140, 1999 [20] a. ronen and r. talisman, toward gener low payment mechan for decentr task alloc. in proceed of the 7th intern ieee confer on e-commerc technolog, 2005 [21] k. talwar, the price of truth: frugal in truth mechan. in proceed of 20th intern symposium on theoret aspect of comput scienc, 2003 [22] w. vickrei, counterspecul, auction, and competit seal tender. journal of financ, 16:8-37, 1961 345 