meta-level coordin for solv negoti chain in semi-cooper multi-agent system xiaoqin zhang comput and inform scienc depart univers of massachusett at dartmouth x2zhang@umassd.edu victor lesser comput scienc depart univers of massachusett at amherst lesser@cs.umass.edu abstract a negoti chain is form when multipl relat negoti ar spread over multipl agent. in order to appropri order and structur the negoti occur in the chain so as to  optim the expect util, we present an extens to a  singleag concurr negoti framework. thi work is aim at semi-cooper multi-agent system, where each agent ha it own goal and work to maxim it local util; howev, the  perform of each individu agent is tightli relat to other agent"s cooper and the system"s overal perform. we introduc a pre-negoti phase that allow agent to transfer meta-level inform. us thi inform, the agent can build a more accur model of the negoti in term of model the  relationship of flexibl and success probabl. thi more accur model help the agent in choos a better negoti solut in the global negoti chain context. the agent can also us thi  inform to alloc appropri time for each negoti, henc to find a good order of all relat negoti. the  experiment data show that these mechan improv the agent" and the system"s overal perform significantli. categori and subject descriptor i.2.11 [distribut artifici intellig]: multiag system gener term algorithm, perform, experiment 1. introduct sophist negoti for task and resourc alloc is  crucial for the next gener of multi-agent system (ma)  applic. group of agent need to effici negoti over multipl relat issu concurr in a complex, distribut set where there ar deadlin by which the negoti must be complet. thi is an import research area where there ha been veri littl work done. thi work is aim at semi-cooper multi-agent system, where each agent ha it own goal and work to maxim it  local util; howev, the perform of each individu agent is tightli relat to other agent"s cooper and the system"s overal perform. there is no singl global goal in such system,  either becaus each agent repres a differ organ/user, or becaus it is difficult/imposs to design on singl global goal. thi issu aris due to multipl concurr task, resourc  constrain and uncertainti, and thu no agent ha suffici  knowledg or comput resourc to determin what is best for the whole system [11]. an exampl of such a system would be a virtual organ [12] (i.e. a suppli chain) dynam form in an electron marketplac such as the on develop by the conois project [5]. to accomplish task continu arriv in the virtual organ, cooper and sub-task reloc ar need and prefer. there is no singl global goal sinc each agent mai be involv in multipl virtual organ. meanwhil, the  perform of each individu agent is tightli relat to other agent"  cooper and the virtual organ"s overal perform. the negoti in such system is not a zero-sum game, a deal that increas both agent" util can be found through effici  negoti. addition, there ar multipl encount among agent sinc new task ar arriv all the time. in such negoti, price mai or mai not be import, sinc it can be fix result from a long-term contract. other factor like qualiti and deliveri time ar import too. reput mechan in the system make  cheat not attract from a long term viewpoint due to multipl  encount among agent. in such system, agent ar self-interest becaus thei primarili focu on their own goal; but thei ar also semi-cooper, mean thei ar will to be truth and  collabor with other agent to find solut that ar benefici to all particip, includ itself; though it won"t voluntarili scarifi it own util in exchang of other" benefit. anoth major differ between thi work and other work on negoti is that negoti, here, is not view as a stand-alon process. rather it is on part of the agent"s activ which is tightli interleav with the plan, schedul and execut of the agent"s activ, which also mai relat to other negoti. base on thi recognit, thi work on negoti is concern more about the meta-level decis-make process in negoti rather than the basic protocol or languag. the goal of thi research is to  develop a set of macro-strategi that allow the agent to effect manag multipl relat negoti, includ, but not limit to the follow issu: how much time should be spent on each  negoti, how much flexibl (see formal definit in formula 3) should be alloc for each negoti, and in what order should 50 978-81-904262-7-5 (rp) c 2007 ifaama the negoti be perform. these macro-strategi ar differ from those micro-strategi that direct the individu negoti thread, such as whether the agent should conced and how much the agent should conced, etc[3]. in thi paper we extend a multi-link negoti model [10] from a singl-agent perspect to a multi-agent perspect, so that a group of agent involv in chain of interrel negoti can find nearli-optim macro negoti strategi for pursu their negoti. the remaind of thi paper is structur in the  follow manner. section 2 describ the basic negoti process and briefli review a singl agent"s model of multi-link  negoti. section 3 introduc a complex suppli-chain scenario.  section 4 detail how to solv those problem aris in the negoti chain. section 5 report on the experiment work. section 6  discuss relat work and section 7 present conclus and area of futur work. 2. background on multi-link  negoti in thi work, the negoti process between ani pair of agent is base on an extend version of the contract net [6]: the  initi agent announc the propos includ multipl featur; the respond agent evalu it and respond with either a ye/no  answer or a counter propos with some featur modifi. thi  process can go back and forth until an agreement is reach or the agent decid to stop. if an agreement is reach and on agent cannot fulfil the commit, it need to pai the other parti a  decommit penalti as specifi in the commit. a negoti start with a propos, which announc that a task (t) need to be perform includ the follow attribut: 1. earliest start time (est): the earliest start time of task t; task t cannot be start befor time est. 2. deadlin (dl): the latest finish time of the task; the task need to be finish befor the deadlin dl. 3. minimum qualiti requir (minq): the task need to be finish with a qualiti achiev no less than minq. 4. regular reward (r): if the task is finish as the contract  request, the contractor agent will get reward r. 5. earli finish reward rate (e): if the contractor agent can finish the task earlier than dl, it will get the extra earli finish reward proport to thi rate. 6. decommit penalti rate (p): if the contractor agent  cannot perform the task as it promis in the contract or if the contracte agent need to cancel the contract after it ha been confirm, it also need to pai a decommit penalti (p∗r) to the other agent. the abov attribut ar also call attribut-in-negoti which ar the featur of the subject (issu) to be negoti, and thei ar domain-depend. anoth type of attribut 1 is the  attribut-ofnegoti, which describ the negoti process itself and is domain-independ, such as: 1 these attribut ar similar to those us in project manag; howev, the multi-link negoti problem cannot be  reduc to a project manag problem or a schedul  problem. the multi-link negoti problem ha two dimens: the negoti, and the subject of negoti. the negoti ar interrel and the subject ar interrel; the attribut of negoti and the attribut of the subject ar interrel as well. thi two-dimension complex of interrelationship  distinguish it from the classic project manag problem or  schedul problem, where all task to be schedul ar local task and no negoti is need. 1. negoti durat (δ(v)): the maximum time allow for negoti v to complet, either reach an agre upon propos (success) or no agreement (failur). 2. negoti start time (α(v)): the start time of negoti v. α(v) is an attribut that need to be decid by the agent. 3. negoti deadlin ( (v)): negoti v need to be  finish befor thi deadlin (v). the negoti is no longer valid after time (v), which is the same as a failur outcom of thi negoti. 4. success probabl (ps(v)): the probabl that v is  success. it depend on a set of attribut, includ both attribut-in-negoti (i.e. reward, flexibl, etc.) and attribut-of-negoti (i.e. negoti start time,  negoti deadlin, etc.). an agent involv in multipl relat negoti process need to reason on how to manag these negoti in term of order them and choos the appropri valu for featur. thi is the multi-link negoti problem [10] : definit 2.1. a multi-link negoti problem is  defin as an undirect graph (more specif, a forest as a set of root tree): m = (v, e), where v = {v} is a finit set of negoti, and e = {(u, v)} is a set of binari relat on v . (u, v) ∈ e denot that negoti u and negoti v ar directli-link. the relationship among the negoti ar  describ by a forest, a set of root tree {ti}. there is a relat oper associ with everi non-leaf negoti v (denot as ρ(v)), which describ the relationship between negoti v and it children. thi relat oper ha two possibl valu: and and or. the and relationship associ with a negoti v mean the success accomplish of the commit on v  requir all it children node have success accomplish. the or relationship associ with a negoti v mean the  success accomplish of the commit on v requir at least on child node have success accomplish, where the  multipl children node repres altern to accomplish the same goal. multi-link negoti problem is a local optim  problem. to solv a multi-link negoti problem is to find a  negoti solut (φ, ϕ) with optim expect util eu(φ, ϕ), which is defin as: eu(φ, ϕ) = 2n x i=1 p(χi, ϕ) ∗ (r(χi, ϕ) − c(χi, φ, ϕ)) (1) a negoti order φ defin a partial order of all  negoti issu. a featur assign ϕ is a map function that assign a valu to each attribut that need to be decid in the negoti. a negoti outcom χ for a set of negoti {vj}, (j = 1, ..., n) specifi the result for each negoti, either success or failur. there ar a total of 2n differ outcom for n negoti: {chii}, (i = 1, ..., 2n ). p(χi, ϕ) denot the  probabl of the outcom χi given the featur assign ϕ, which is calcul base on the success probabl of each negoti. r(χi, ϕ) denot the agent"s util increas given the outcom χi and the featur assign ϕ, and c(χi, φ, ϕ) is the sum of the  decommit penalti of those negoti, which ar success, but need to be abandon becaus the failur of other directli  relat negoti; these directli relat negoti ar perform concurr with thi negoti or after thi negoti  accord to the negoti order φ. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 51 comput produc cpu other task distribut center memori produc transport deliv hardwar order memori (2) other task other task order chip pc manufactur order store order memori (1) other task purchas memori custom deliv comput hardwar comput order purchas figur 1: a complex negoti chain scenario a heurist search algorithm [10] ha been develop to solv the singl agent"s multi-link negoti problem that produc nearli-optim solut. thi algorithm is us as the core of the decis-make for each individu agent in the negoti chain scenario. in the rest of the paper, we present our work on how to improv the local solut of a singl agent in the global negoti chain context. 3. negoti chain problem negoti chain problem occur in a multi-agent system, where each agent repres an individu, a compani, or an organ, and there is no absolut author in the system. each agent ha it own util function for defin the implic of achiev it goal. the agent is design to optim it expect util given it limit inform, comput and commun resourc. dynam task arriv to individu agent, most task requir the coordin of multipl agent. each agent ha the schedul and plan abil to manag it local activ, some of these activ ar relat to other agent" activ. negoti is us to coordin the schedul of these mutual relat  activ. the negoti is tightli connect with the agent"s local schedul/plan process and is also relat to other  negoti. an agent mai be involv in multipl relat negoti with multipl other agent, and each of the other agent mai be involv in relat negoti with other too. figur 1 describ a complex negoti chain scenario. the store, the pc manufactur, the memori produc and the  distribut center ar all involv in multi-link negoti  problem. figur 2 show a distribut model of part of the negoti chain describ in figur 1. each agent ha a local optim problem - the multi-link negoti problem (repres as an and-or tree), which can be solv us the model and procedur describ in section 2. howev, the local optim solut mai not be optim in the global context given the local model is neither complet or accur. the dash line in figur 2 repres the  connect of these local optim problem though the common negoti subject. negoti chain problem o is a group of tightli-coupl local optim problem: o = {o1, o2, ....on}, oi denot the local optim problem (multi-link negoti problem) of agent ai agent ai"s local optim solut slo i maxim the expect  local util base on an incomplet inform and assumpt about other agent" local strategi - we defin such incomplet inform and imperfect assumpt of agent i as ii): uexp i (slo i , ii) ≥ uexp i (sx i , ii) for all x = lo. howev, the combin of these local optim solut {slo i } : < slo 1 , slo 2 , ....slo n > can be sub-optim to a set of better local optim solut {sblo i } : < sblo 1 , sblo 2 , ....sblo n > if the global util can be improv without ani agent"s local util be  decreas by us {sblo i }. in other word, {slo i } is domin by {sblo i } ({slo i } ≺ {sblo i }) iff: ui(< slo 1 , slo 2 , ....slo n >) ≤ ui(< sblo 1 , sblo 2 , ....sblo n >) for i = 1, ...n and pn i=1 ui(< slo 1 , slo 2 , ....slo n >) < pn i=1 ui(< sblo 1 , sblo 2 , ....sblo n >) there ar multipl set of better local optim solut: {sblo1 i }, {sblo2 i }, ... {sblom i }. some of them mai be domin by other. a set of better local optim solut {s blog i } that is not  domin by ani other is call best local optim. if a set of best local optim solut {s blog i } domin all other, {s blog i } is call global local optim. howev, sometim the global local optim set doe not exist, instead, there exist multipl set of best local optim solut. even if the global local optim solut doe exist in theori, find it mai not be realist given the agent ar make decis concurr, to construct the  perfect local inform and assumpt about other agent (ii) in thi dynam environ is a veri difficult and sometim even imposs task. the goal of thi work is to improv each agent"s local model about other agent (ii) through meta-level coordin. as ii  becom more accur, the agent"s local optim solut to it local multi-link negoti problem becom a better local optim  solut in the context of the global negoti chain problem. we ar not argu that thi statement is a univers valid statement that hold in all situat, but our experiment work show that the sum of the agent" util in the system ha been improv by 95% on averag when meta-level coordin is us to improv each agent"s local model ii. in thi work, we focu on improv the agent"s local model through two direct. on direct is to build a better function to describ the relationship between the success probabl of the negoti and the flexibl alloc to the negoti. the other direct is to find how to alloc time more effici for each negoti in the negoti chain context. 4. new mechan - meta-level  coordin in order for an agent to get a better local model about other agent in the negoti chain context, we introduc a pre-negoti phase into the local negoti process. dure the pre-negoti phase, agent commun with other agent who have task  contract relationship with them, thei transfer meta-level  inform befor thei decid on how and when to do the negoti. each agent tell other agent what type of task it will ask them to perform, and the probabl distribut of some paramet of those task, i.e. the earliest start time and the deadlin, etc. when these probabl distribut ar not avail directli, agent can learn such inform from their past experi. in our  experi describ later, such distribut inform is learn rather than be directli told by other agent. specif, each agent provid the follow inform to other relat agent: • whether addit negoti is need in order to make a decis on the contract task; if so, how mani more  negoti ar need. negcount repres the total number of addit negoti need for a task, includ  addit negoti need for it subtask that happen among other agent. in a negoti chain situat, thi  inform is be propag and updat through the chain until 52 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) e: order hardwar f: deliv comput h: get memori i: deliv hardwar i: deliv hardwar f: deliv comput g: get cpu e: get hardwar and transporterdistribut center a: purchas comput b: purchas memori c: order comput d: order memori store agent pc manufactur and c: order comput figur 2: distribut model of negoti chain everi agent ha accur inform. let subneg(t) be a set of subtask of task t that requir addit negoti, then we have: negcount(t) = |subneg(t)| + x t∈subneg(t ) (negcount(t)) (2) for exampl, in the scenario describ in figur 1, for the distribut center, task order hardwar consist of three subtask that need addit negoti with other agent: order chip, order memori and deliv hardwar.  howev, no further negoti ar need for other agent to make decis on these subtask, henc the negcount for these subtask ar 0. the follow inform is sent to the pc manufactur by the distribut center: negcount(order hardwar) = 3 for the pc manufactur task order comput contain two subtask that requir addit negoti: deliv  comput and order hardwar. when the pc manufactur  receiv the messag from the distribut center, it updat it local inform: negcount(order comput) = 2+ negcount(deliv comput)(0)+ negcount(order hardwar)(3) = 5 and send the updat inform to the store agent. • whether there ar other task compet with thi task and what is the likelihood of conflict. conflict mean that given all constrain, the agent cannot accomplish all task on time, it need to reject some task. the likelihood of conflict pcij between a task of type i and anoth task of type j is  calcul base on the statist model of each task"s paramet, includ earliest start time (est), deadlin (dl), task  durat (dur) and slack time (sl), us a formula [7]: pcij = p(dli − estj ≤ duri + durj ∧ dlj − esti ≤ duri + durj) when there ar more than two type of task, the likelihood of no conflict between task i and the rest of the task, is  calcul as: pnoconflict(i) = qn j=1,j=i(1 − pcij) for exampl, the memori produc tell the distribut center about the task order memori. it local decis doe not involv addit negoti with other agent (negcount = 0),  howev, there is anoth task from the store agent that compet with thi task, thu the likelihood of no conflict is 0.5 (pnoconflict = 0.5). on the other hand, the cpu produc tell the distribut center about the task order chip: it local decis doe not  involv addit negoti with other agent, and there ar no other task compet with thi task (pnoconflict = 1.0) given the current environ set. base on the abov inform, the distribut center know that task order memori need more flexibl than task order chip in order to be success in  negoti. meanwhil, the distribut center would tell the pc manufactur that task order hardwar involv further  negoti with other agent (negcount = 3), and that it local decis depend on other agent" decis. thi piec of inform help the pc manufactur alloc appropri flexibl for task order hardwar in negoti. in thi work, we introduc a short period and produc_comput get_softwar instal_softwar deliv_comput memori producerhardwar produc transport consum agent order_comput order_memori order_hardwar order_hardwar process−time: 3 distribut center pc manufactur order_chip deliv_hardwareget_part process−time: 11 enabl enabl process−time: 4 process−time: 3 and and enabl process−time: 4 and enabl process−time: 3 process−time: 2 figur 3: task structur of pc manufactur and  distribut center for agent to learn the characterist of those incom task,  includ est, dl, dur and sl, which ar us to calcul pcij and pnoconflict for the meta-level coordin. dure system  perform, agent ar continu monitor these characterist. an updat messag will be send to relat agent when there is signific chang of the meta-level inform. next we will describ how the agent us the meta-level  inform transfer dure the pre-negoti phase. thi  inform will be us to improv the agent"s local model, more  specif, thei ar us in the agent"s local decis-make process by affect the valu of some featur. especi, we will be concern with two featur that have strong implic for the agent"s macro strategi for the multi-link negoti, and henc also affect the perform of a negoti chain significantli. the first is the amount of flexibl specifi in the negoti  paramet. the second featur we will explor is the time alloc for the negoti process to complet. the time alloc for each negoti affect the possibl order of those negoti, and it also affect the negoti outcom. detail ar discuss in the follow section. 4.1 flexibl and success probabl agent not onli need to deal with complex negoti problem, thei also need to handl their own local schedul and plan process that ar interleav with the negoti process. figur 3 show the local task structur of the pc manufactur and the distribut center. some of these task can be perform local by the pc manufactur, such as get softwar and instal softwar, while other task (non-local task) such as order hardwar and deliv comput need to be perform by other agent.the pc manufactur need to negoti with the distribut center and the transport about whether thei can perform these task, and if so, when and how thei will perform them. when the pc manufactur negoti with other agent about the non-local task, it need to have the other agent" arrang fit into it local schedul. sinc the pc manufactur is deal with multipl non-local task simultan, it also need to  ensur the commit on these non-local task ar consist with each other. for exampl, the deadlin of task order hardwar  cannot be later than the start time of task deliv comput. figur 4 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 53 order_hardwar deliv_comput [34, 40] process time: 4 process time: 3 [11, 28] [11, 28] process time: 11 get_softwar instal_softwar [28, 34] process time: 2 order_comput start at time 11 and finish by 40 figur 4: a sampl local schedul of the pc manufactur show a sampl local schedul of the pc manufactur. accord to thi schedul, as long as task order hardwar is perform  dure time [11, 28] and task deliv comput is perform dure time [34, 40], there exist a feasibl schedul for all task and task order comput can be finish by time 40, which is the  deadlin promis to the custom. these time rang alloc for task order hardwar and task deliv comput ar call  consist rang; the negoti on these task can be perform independ within these rang without worri about conflict. notic that each task should be alloc with a time rang that is larg enough to accommod the estim task process time. the larger the rang is, the more like the negoti will succe,  becaus it is easier for the other agent to find a local schedul for thi task. then the question is, how big should thi time rang be? we defin a quantit measur call flexibl: given a task t, suppos the alloc time rang for t is [est, dl], est is the earliest start time and dl stand for the deadlin, flexibl(t) = dl − est − process time(t) process time(t) (3) flexibl is an import attribut becaus it directli affect the possibl outcom of the negoti. the success probabl of a negoti can be describ as a function of the flexibl. in thi work, we adopt the follow formula for the success probabl function base on the flexibl of the negoti issu: ps(v) = pb(v) ∗ (2/π) ∗ (arctan(f(v) + c))) (4) thi function describ a phenomenon where initi the  likelihood of a success negoti increas significantli as the  flexibl grow, and then level off afterward, which mirror our  experi from previou experi. pb is the basic success  probabl of thi negoti v when the flexibl f(v) is veri larg. c is a paramet us to adjust the relationship. differ  function pattern can result from differ paramet valu, as shown in figur 5. thi function describ the agent"s assumpt about how the other agent involv in thi negoti would respons to thi particular negoti request, when it ha flexibl f(v). thi function is part of the agent"s local model about other agent. to improv the accuraci of thi function and make it closer to the  realiti, the agent adjust these two valu accord to the meta-level inform transfer dure pre-negoti phase. the valu of c depend on whether there is further negoti involv and whether there ar other task compet with thi task for common resourc. if so, more flexibl is need for thi issu and henc c should be assign a smaller valu. in our implement, the follow procedur is us to calcul c base on the meta-level inform negcount and pnoconflict: if(pnoconflict > 0.99) // no other compet task c = clarg − negcount els // compet task exist c = csmall thi procedur work as follow: when there is no other compet figur 5: differ success probabl function task, c depend on the number of addit negoti need. the more addit negoti that ar need, the smaller valu c ha, henc more flexibl will be assign to thi issu to  ensur the negoti success. if no more negoti is need, c is assign to a larg number clarg, mean that less flexibl is need for thi issu. when there ar other compet task, c is assign to a small number csmall, mean that more flexibl is need for thi issu. in our experiment work, we have clarg as 5 and csmall as 1. these valu ar select accord to our experi; howev, a more practic approach is to have agent learn and dynam adjust these valu. thi is also part of our futur work. pb is calcul base on pnoconflict, f(v) (the flexibl of v in previou negoti), and c, us the revers format of equat 4. pb(v) = min(1.0, pnoconflict(v)∗(π/2)/(arctan(f(v)+c))) (5) for exampl, base on the scenario describ abov, the agent have the follow valu for c and pb base on the meta-level inform transfer: • pc manufactur, order hardwar: pb = 1.0, c = 2; • distribut center, order chip: pb = 1.0, c = 5; • store agent, order memori: pb = 0.79, c = 1; figur 5 show the differ pattern of the success probabl function given differ paramet valu. base on such pattern, the store agent would alloc more flexibl to the task order memori to increas the likelihood of success in negoti. in the agent"s further negoti process, formula 4 with differ  paramet valu is us in reason on how much flexibl should be alloc to a certain issu. the pre-negoti commun occur befor negoti, but not befor everi negoti session. agent onli need to  commun when the environ chang, for exampl, new type of task ar gener, the characterist of task chang, the  negoti partner chang, etc. if no major chang happen, the agent can just us the current knowledg from previou  commun. the commun and comput overhead of thi  prenegoti mechan is veri small, given the simpl inform collect procedur and the short messag to be transfer. we will discuss the effect of thi mechan in section 5. 4.2 negoti durat and deadlin in the agent"s local model, there ar two attribut that describ how soon the agent expect the other agent would repli to the  negoti v: negoti durat δ(v) and negoti deadlin (v) 54 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) tabl 1: exampl of negoti (δ(v): negoti durat, s.p.: success probabl) index task-name δ(v) reward s.p. penalti 1 order hardwar 4 6 0.99 3 2 order chip 4 1 0.99 0.5 3 order memori 4 1 0.80 0.5 4 deliv hardwar 4 1 0.70 0.5 . these two import attribut that affect the negoti  solut. part of the negoti solut is a negoti order φ which specifi in what order the multipl negoti should be perform. in order to control the negoti process, everi  negoti should be finish befor it negoti deadlin, and the negoti durat is the time alloc for thi negoti. if a negoti cannot be finish dure the alloc time, the agent ha to stop thi negoti and consid it as a failur. the  decis about the negoti order depend on the success probabl, reward, and decommit penalti of each negoti. a good  negoti order should reduc the risk of decommit and henc reduc the decommit penalti. a search algorithm ha been develop to find such negoti order describ in [10]. for exampl, tabl 1 show some of the negoti for the  distribut center and their relat attribut. given enough time  (negoti deadlin is greater than 16), the best negoti order is: 4 → 3 → 2 → 1. the most uncertain negoti (4: deliv hardwar) is perform first. the negoti with highest penalti (1: order hardwar) is perform after all relat negoti (2, 3, and 4) have been complet so as to reduc the risk of  decommit. if the negoti deadlin is less than 12 and greater than 8, the follow negoti order is prefer: (4, 3, 2) → 1, which mean negoti 4, 3, 2 can be perform in parallel, and 1 need to be perform after them. if the negoti deadlin is less than 8, then all negoti have to be perform in parallel, becaus there is no time for sequenc negoti. in the origin model for singl agent [10], the negoti  deadlin (v) is assum to be given by the agent who initi the  contract. the negoti durat δ(v) is an estim of how long the negoti take base on experi. howev, the situat is not that simpl in a negoti chain problem. consid the follow scenario. when the custom post a contract for task purchas comput, it could requir the store agent to repli by time 20. time 20 can be consid as the negoti deadlin for purchas comput. when the store agent negoti with the pc manufactur about order comput, what negoti  deadlin should it specifi? how long the negoti on order  comput take depend on how the pc manufactur handl it local multipl negoti: whether it repli to the store agent first or wait until all other relat negoti have been settl.  howev, the order of negoti depend on the negoti  deadlin on order comput, which should be provid by the store agent. the negoti deadlin of order comput for the pc manufactur is actual decid base on the negoti durat of order comput for the store agent. how much time the store agent would like to spend on the negoti order comput is it durat, and also determin the negoti deadlin for the pc manufactur. now the question aris: how should an agent decid how much time it should spend on each negoti, which actual affect the other agent" negoti decis. the origin model doe not handl thi question sinc it assum the negoti durat δ(v) is known. here we propos three differ approach to handl thi issu. 1. same-deadlin polici. us the same negoti deadlin for all relat negoti, which mean alloc all avail time to all negoti: δ(v) = total avail time for exampl if the negoti deadlin for purchas  comput is 20, the store agent will tell the pc manufactur to repli by 20 for order comput (ignor the  commun delai). thi strategi allow everi negoti to have the largest possibl durat, howev it also elimin the possibl of perform negoti in sequenc - all  negoti need to be perform in parallel becaus the total avail time is the same as the durat of each negoti. 2. meta-info-deadlin polici. alloc time for each  negoti accord to the meta-level inform transfer in the pre-negoti phase. a more complic negoti, which involv further negoti, should be alloc  addit time. for exampl, the pc manufactur alloc a durat of 12 for the negoti order hardwar, and a durat of 4 for deliv comput. the reason is that the  negoti with the distribut center about order hardwar is more complic becaus it involv further negoti between the distribut center and other agent. in our  implement, we us the follow procedur to decid the negoti durat δ(v): if(negcount(v) >= 3) // more addit  negoti need δ(v) = (negcount(v)−1)∗basic neg cycl els if(negcount(v) > 0) // on or two  addit negoti need δ(v) = 2 ∗ basic neg cycl els //no addit negoti δ(v) = basic neg cycl + 1 basic neg cycl repres the minimum time need for a negoti cycl (propos-think-repli), which is 3 in our system set includ commun delai. on  addit time unit is alloc for the simplest negoti  becaus it allow the agent to perform a more complic  reason process in think. again, the structur of thi  procedur is select accord to experi, and it can be learn and adjust by agent dynam. 3. evenli-divid-deadlin polici. evenli divid the avail time among the n relat negoti: δ(v) = total avail time/n for exampl, if the current time is 0, and the negoti deadlin for order comput is 21, given two other relat negoti, order hardwar and deliv comput, each negoti is alloc with a durat of 7. intuit we feel the strategi 1 mai not be a good on, becaus perform all negoti in parallel would increas the risk of decommit and henc also decommit penalti. howev, it is not veri clear how strategi 2 and 3 perform, and we will  discuss some experiment result in section 5. 5. experi to verifi and evalu the mechan present for the  negoti chain problem, we implement the scenario describ in figur 1 . new task were randomli gener with  decommit penalti rate p ∈ [0, 1], earli finish reward rate e ∈ [0, 0.3], and deadlin dl ∈ [10, 60] (thi rang allow differ flexibl avail for those sub-contract task), and arriv at the store agent period. we perform two set of experi to studi the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 55 tabl 2: paramet valu without/with meta-level  inform fix-flex meta-info-flex negoti pb pb c order comput 0.95 1.0 0 order memori (1) 0.95 0.79 1 order hardwar 0.95 1.0 2 deliv comput 0.95 1.0 1 deliv hardwar 0.95 1.0 5 order chip 0.95 1.0 1 order memori (2) 0.95 0.76 1 figur 6: differ flexibl polici how the success probabl function and negoti deadlin  affect the negoti outcom, the agent" util and the system"s overal util. in thi experi, agent need to make decis on negoti order and featur assign for multipl attribut includ: earliest start time, deadlin, promis finish time, and those attribut-of-negoti. to focu on the studi of flexibl, in thi experi, the regular reward for each type of task ar fix and not under negoti. here we onli describ how agent handl the negoti durat and negoti deadlin becaus thei ar the attribut affect by the pre-negoti phase. all other attribut involv in negoti ar handl accord to how thei affect the feasibl of local schedul (time-relat  attribut) and how thei affect the negoti success probabl (time and cost relat attribut) and how thei affect the expect util. a search algorithm [10] and a set of partial order  schedul algorithm ar us to handl these attribut. we tri two differ flexibl polici. 1. fix-flexibl polici: the agent us a fix valu as the success probabl (ps(v) = pb(v)), accord to it local knowledg and estim. 2. meta-info-flexibl polici: the agent us the function ps(v) = pb(v) ∗ (2/π) ∗ (arctan(f(v) + c))) to model the  success probabl. it also adjust those paramet (pb(v) and c) accord to the meta-level inform obtain in  prenegoti phase as describ in section 4. tabl 2 show the valu of those paramet for some negoti. figur 6 show the result of thi experi. thi set of  experi includ 10 system run, and each run is for 1000 simul time unit. in the first 200 time unit, agent ar learn about the task characterist, which will be us to calcul the conflict probabl pcij. at time 200, agent perform meta-level  inform commun, and in the next 800 time unit, agent us the meta-level inform in their local reason process. the data wa collect over the 800 time unit after the pre-negoti figur 7: differ negoti deadlin polici phase 2 . on purchas comput task is gener everi 20 time unit, and two purchas memori task ar gener everi 20 time unit. the deadlin for task purchas comput is randomli  gener in the rang of [30, 60], the deadlin for task purchas  memori is in the rang of [10, 30]. the decommit penalti rate is randomli gener in the rang of [0, 1]. thi set creat  multipl concurr negoti chain situat; there is on long chain: custom - store - pc manufactur - distribut center -  produc - transport and two short chain: custom - store - memori produc thi demonstr that thi mechan is capabl of handl  multipl concurr negoti chain. all agent perform better in thi exampl (gain more util) when thei ar us the meta-level inform to adjust their local control through the paramet in the success probabl function (meta-info-flex polici). especi for those agent in the middl of the negoti chain, such as the pc manufactur and the  distribut center, the flexibl polici make a signific differ. when the agent ha a better understand of the global negoti scenario, it is abl to alloc more flexibl for those task that involv complic negoti and resourc content.  therefor, the success probabl increas and fewer task ar reject or cancel (90% of the task have been successfulli negoti over when us meta-level inform, compar to 39% when no pre-negoti is us), result in both the agent and the  system achiev better perform. in the second set of experi studi, we compar three  negoti deadlin polici describ in section 4.2 when us the meta-info flexibl polici describ abov. the initi result show that the same-deadlin polici and the meta-info-deadlin polici perform almost the same when the amount of system  workload level is moder, task can be accommod given suffici flexibl. in thi situat, with either of the polici, most  negoti ar success, and there ar few decommit  occurr, so the order of negoti doe not make too much  differ. therefor, in thi second set of experi, we increas the number of new task gener to rais the averag workload in the system. on purchas comput task is gener everi 15 time unit, three purchas memori task ar gener everi 2 we onli measur the util collect after the learn phase  becaus that the learn phase is rel short compar to the evalu phase, also dure the learn phase, no meta-level  inform is us, so some of the polici ar invalid. 56 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 15 time unit, and on task deliv gift (directli from the  custom to the transport) is gener everi 10 time unit. thi setup gener a higher level of system workload, which result in some task not be complet no matter what negoti  order is us. in thi situat, we found the meta-info-deadlin polici perform much better than same-deadlin polici (see  figur 7). when an agent us the same-deadlin polici, all  negoti have to be perform in parallel. in the case that on  negoti fail, all relat task have to be cancel, and the agent need to pai multipl decommit penalti. when the agent us the meta-info-deadlin polici, complic negoti ar alloc more time and, correspondingli, simpler negoti ar alloc less time. thi also ha the effect of allow some  negoti to be perform in sequenc. the consequ of  sequenc negoti is that, if there is failur, an agent can simpli cancel the other relat negoti that have not been start. in thi wai, the agent doe not have to pai decommit penalti for those cancel negoti becaus no commit ha been  establish yet. the evenli-divid-deadlin polici perform much wors than the meta-info-deadlin polici. in the  evenli-divideddeadlin polici, the agent alloc negoti time evenli among the relat negoti, henc the complic negoti doe not get enough time to complet. the abov experi result show that the meta-level  inform transfer among agent dure the pre-negoti phase is critic in build a more accur model of the negoti  problem. the reason process base on thi more accur model  produc an effici negoti solut, which improv the agent"s and the system"s overal util significantli. thi conclus hold for those environ where the system is face moder heavi load and task have rel tight time deadlin (our experi setup is to produc such environ); the effici negoti is especi import in such environ. 6. relat work fatima, wooldridg and jen [1] studi the multipl issu in negoti in term of the agenda and negoti procedur. howev, thi work is limit sinc it onli involv a singl agent"s perspect without ani understand that the agent mai be part of a negoti chain. mailler and lesser [4] have present an  approach to a distribut resourc alloc problem where the  negoti chain scenario occur. it model the negoti problem as a distribut constraint optim problem (dcop) and a  cooper mediat mechan is us to central relev portion of the dcop. in our work, the negoti involv more  complic issu such as reward, penalti and util; also, we adopt a distribut approach where no central control is need. a mediat-base partial central approach ha been appli to the coordin and schedul of complex task network [8], which is differ from our work sinc the system is a complet cooper system and individu util of singl agent is not concern at all. a combinatori auction [2, 9] could be anoth approach to  solv the negoti chain problem. howev, in a combinatori auction, the agent doe not reason about the order of  negoti. thi would lead to a problem similar to those we discuss when the same-deadlin polici is us. 7. conclus and futur work in thi paper, we have solv negoti chain problem by  extend our multi-link negoti model from the perspect of a singl agent to multipl agent. instead of solv the negoti chain problem in a central approach, we adopt a distribut  approach where each agent ha an extend local model and  decisionmak process. we have introduc a pre-negoti phase that allow agent to transfer meta-level inform on relat  negoti issu. us thi inform, the agent can build a more accur model of the negoti in term of model the  relationship of flexibl and success probabl. thi more accur model help the agent in choos the appropri negoti  solut. the experiment data show that these mechan improv the agent"s and the system"s overal perform significantli. in futur extens of thi work, we would like to develop  mechan to verifi how reliabl the agent ar. we also recogn that the current approach of appli the meta-level inform is mainli heurist, so we would like to develop a learn  mechan that enabl the agent to learn how to us such inform to adjust it local model from previou experi. to further verifi thi distribut approach, we would like to develop a central approach, so we can evalu how good the solut from thi  distribut approach is compar to the optim solut found by the central approach. 8. refer [1] s. s. fatima, m. wooldridg, and n. r. jen. optim negoti strategi for agent with incomplet inform. in revis paper from the 8th intern workshop on intellig agent viii, page 377-392. springer-verlag, 2002. [2] l. hunsberg and b. j. grosz. a combinatori auction for collabor plan. in proceed of the fourth intern confer on multi-agent system (icma-2000), 2000. [3] n. r. jen, p. faratin, t. j. norman, p. o"brien, b. odger, and j. l. alti. implement a busi process manag system us adept: a real-world case studi. int. journal of appli artifici intellig, 2000. [4] r. mailler and v. lesser. a cooper mediat-base protocol for dynam, distribut resourc alloc. ieee transact on system, man, and cybernet, part c, special issu on game-theoret analysi and stochast simul of negoti agent, 2004. [5] t. j. norman, a. preec, s. chalmer, n. r. jen, m. luck, v. d. dang, t. d. nguyen, v. deora, j. shao, a. grai, and n. fiddian. agent-base format of virtual organis. int. j. knowledg base system, 17(2-4):103-111, 2004. [6] t. sandholm and v. lesser. issu in autom negoti and electron commerc: extend the contract net framework. in proceed of the first intern confer on multi-agent system (icma95), page 328-335, 1995. [7] j. shen, x. zhang, and v. lesser. degre of local cooper and it implic on global util. proceed of third intern joint confer on autonom agent and multiag system (aama 2004), juli 2004. [8] m. sim, h. mostafa, b. horl, h. zhang, v. lesser, and d. corkil. later and hierarch partial central for distribut coordin and schedul of complex hierarch task network. aaai 2006 spring symposium on distribut plan and schedul manag, 2006. [9] w. walsh, m. wellman, and f. ygge. combinatori auction for suppli chain format. in second acm confer on electron commerc, 2000. [10] x. zhang, v. lesser, and s. abdallah. effici manag of multi-link negoti base on a formal model. autonom agent and multiag system, 10(2):165-205, 2005. [11] x. zhang, v. lesser, and t. wagner. integr negoti among agent situat in organ. ieee transact on system, man, and cybernet: part c, special issu on game-theoret analysi and stochast simul of negoti agent, 36(1):19-30, januari 2006. [12] q. zheng and x. zhang. automat format and analysi of multi-agent virtual organ. journal of the brazilian comput societi: special issu on agent organ, 11(1):74-89, juli 2005. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 57 