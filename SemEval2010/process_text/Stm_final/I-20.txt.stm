comput the banzhaf power index in network flow game yoram bachrach jeffrei s. rosenschein school of engin and comput scienc the hebrew univers of jerusalem, israel {yori,jeff}@cs.huji.ac.il abstract prefer aggreg is us in a varieti of multiag  applic, and as a result, vote theori ha becom an import topic in multiag system research. howev, power indic (which reflect how much real power a voter ha in a weight vote system) have receiv rel littl attent, although thei have long been studi in polit scienc and econom. the banzhaf power index is on of the most popular; it is also well-defin for ani simpl coalit game. in thi paper, we examin the comput complex of  calcul the banzhaf power index within a particular multiag  domain, a network flow game. agent control the edg of a graph; a coalit win if it can send a flow of a given size from a sourc  vertex to a target vertex. the rel power of each edg/agent reflect it signific in enabl such a flow, and in real-world network could be us, for exampl, to alloc resourc for maintain part of the network. we show that calcul the banzhaf power index of each agent in thi network flow domain is #p-complet. we also show that for some restrict network flow domain there exist a polynomi algorithm to calcul agent" banzhaf power indic. categori and subject descriptor f.2 [theori of comput]: analysi of algorithm and  problem complex; i.2.11 [artifici intellig]: distribut artifici  intelligencemultiag system; j.4 [comput applic]: social and behavior  scienceseconom gener term algorithm, theori, econom 1. introduct social choic theori can serv as an appropri foundat upon which to build multiag applic. there is a rich literatur on the subject of vote1 from polit scienc, mathemat, and econom, with import theoret result, and builder of  autom agent can benefit from thi work as thei engin system that reach group consensu. interest in the theori of econom and social choic ha in fact becom widespread throughout comput scienc, becaus it is  recogn as have direct implic on the build of system compris of multipl autom agent [16, 4, 22, 17, 14, 8, 15]. what distinguish comput scienc work in these area is it  concern for comput issu: how ar result arriv at (e.g.,  equilibrium point)? what is the complex of the process? can  complex be us to guard against unwant phenomena? doe  complex of comput prevent realist implement of a  techniqu? the practic applic of vote among autom agent ar alreadi widespread. ghosh et al. [6] built a movi  recommend system; a user"s prefer were repres as agent, and movi to be suggest were select through agent vote.  candid in virtual elect have also been belief, joint plan [5], and schedul [7]. in fact, to see the gener of the (autom) vote scenario, consid modern web search. on of the most massiv prefer aggreg scheme in exist is googl"s pagerank algorithm, which can be view as a vote among  index web page on candid determin by a user-input search string; winner ar rank (tennenholtz and altman [21] consid the axiomat foundat of rank system such as thi). in thi paper, we consid a topic that ha been less studi in the context of autom agent vote, name power indic. a power index is a measur of the power that a subgroup, or equival a voter in a weight vote environ, ha over decis of a larger group. the banzhaf power index is on of the most popular measur of vote power, and although it ha been us primarili for measur power in weight vote game, it is well-defin for ani simpl coalit game. we look at some comput aspect of the banzhaf power index in a specif environ, name a network flow game. in thi game, a coalit of agent win if it can send a flow of size k from a sourc vertex s to a target vertex t, with the rel power of each edg reflect it signific in allow such a flow. we show that calcul the banzhaf power index of each agent in thi gener network flow domain is #p-complet. we also show that for some restrict network flow domain (specif, of  con1 we us the term in it intuit sens here, but in the social choic literatur, prefer aggreg and vote ar basic  synonym. 335 978-81-904262-7-5 (rp) c 2007 ifaama nectiv game on bound layer graph), there doe exist a  polynomi algorithm to calcul the banzhaf power index of an agent. there ar implic in thi scenario to real-world network; for exampl, the power index might be us to alloc mainten resourc (a more power edg be more critic), in order to maintain a given flow of data between two point. the paper proce as follow. in section 2 we give some  background concern coalit game and the banzhaf power  index, and in section 3 we introduc our specif network flow game. in section 4 we discuss the banzhaf power index in network flow game, present our complex result in the gener case. in section 5 we consid a restrict case of the network flow game, and present result. in section 6 we discuss relat work, and we conclud in section 7. 2. technic background a coalit game is compos of a set of n agent, i, and a function map ani subset (coalit) of the agent to a real valu v : 2i → r. in a simpl coalit game, v onli get valu of 0 or 1 (v : 2i → {0, 1}). we sai a coalit c ⊂ i win if v(c) = 1, and sai it lose if v(c) = 0. we denot the set of all win coalit as w(v) = {c ⊂ 2i |v(c) = 1}. an agent i is a swinger (or pivot) in a win coalit c if the agent"s remov from that coalit would make it a lose coalit: v(c) = 1, v(c \ {i}) = 0. a swing is a pair < i, s > such that agent i is a swinger in coalit s. a question that aris in thi context is that of measur the influenc a given agent ha on the outcom of a simpl game. on approach to measur the power of individu agent in simpl coalit game is the banzhaf index. 2.1 the banzhaf index a common interpret of the power an agent possess is that of it a priori probabl of have a signific role in the game. differ assumpt about the format of coalit, and  differ definit of have a signific role, have caus  research to defin differ power indic, on of the most  promin of which is the banzhaf index [1]. thi index ha been wide us, though primarili for the purpos of measur individu power in a weight vote system. howev, it can also easili be appli to ani simpl coalit game. the banzhaf index depend on the number of coalit in which an agent is a swinger, out of all possibl coalit.2 the banzhaf index is given by β(v) = (β1(v), ..., βn(v)) where βi(v) = 1 2n−1 s⊂n|i∈s [v(s) − v(s \ {i})]. differ probabilist model on the wai a coalit is form yield differ appropri power indic [20]. the banzhaf power index reflect the assumpt that the agent ar independ in their choic. 3. network flow game 3.1 motiv consid a commun network, where it is crucial to be abl to send a certain amount of inform between two site. given limit resourc to maintain network link, which edg should get those resourc? 2 banzhaf actual consid the percentag of such coalit out of all win coalit. thi is call the normal banzhaf index. we model thi problem by consid a network flow game. the game consist of agent in a network flow graph, with a certain sourc vertex s and target vertex t. each agent control on of the graph"s edg, and a coalit of agent control all the edg it member control. a coalit of agent win the game if it manag to send a flow of at least k from sourc s to target t, and lose otherwis. to ensur that the network is capabl of maintain the desir flow between s and t, we mai choos to alloc our limit  mainten resourc to the edg accord to their impact on  allow thi flow. in other word, resourc could be devot to the link whose failur is most like to caus us to lose the abil to send the requir amount of inform between the sourc and target. under a reason probabilist model, the banzhaf index  provid us with a measur of the impact each edg ha on enabl thi amount of inform to be sent between the site, and thu provid a reason basi for alloc of scarc mainten resourc. 3.2 formal definit formal, a network flow game is defin as follow. the game consist of a network flow graph g =< v, e >, with capac on the edg c : e → r, a sourc vertex s, a target vertex t, and a set i of agent, where agent i control the edg ei. given a coalit c, which control the edg ec = {ei|i ∈ c}, we can check whether the coalit allow a flow of k from s to t. we defin the simpl coalit game of network flow as the game where the coalit win if it allow such a flow, and lose otherwis: v(c) = 1 if ec allow a flow of k from s to t; 0 otherwis; a simplifi version of the network flow game is the connect game; in a connect game, a coalit want to have some path from sourc to target. more precis, a connect game is a network flow game where each of the edg ha ident capac, c(e) = 1, and the target flow valu is k = 1. in such a scenario, the goal of a coalit is to have at least on path from s to t: v(c) = 1 if ec contain a path from s to t; 0 otherwis; given a network flow game (or a connect game), we can comput the power indic of the game. when a coalit of edg is chosen at random, and each coalit is equiprob, the  appropri index is the banzhaf index.3 we can us the banzhaf valu of an agent i ∈ i (or the edg it control, ei), βei (v) = βi(v), to measur it impact on allow a given flow between s and t. 4. the banzhaf index in network flow game we now defin the problem of calcul the banzhaf index in the network flow game. definit 1. network-flow-banzhaf: we ar given a network flow graph g =< v, e > with a sourc vertex s and a target vertex t, a capac function c : e → r, and a target flow valu k. we consid the network flow game, as defin abov in section 3. we ar given an agent i, control the edg ei, and ar ask to calcul the banzhaf index for that agent. in the network 3 when each order of edg is equiprob, the appropri  index is the shaplei-shubik index. 336 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) flow game, let cei be the set of all subset of e that contain ei: cei = {c ⊂ e|ei ∈ c}. in thi game, the banzhaf index of ei is: βi(v) = 1 2|e|−1 e ⊂cei [v(e ) − v(e \ {ei})]. let w(cei ) be the set of win subset of edg in cei , i.e., the subset e ∈ cei where a flow of at least k can be sent from s to t us onli the edg in e . the banzhaf index of ei is the proport of subset in w(cei ) where ei is crucial to maintain the k-flow. all the edg subset in w(cei ) contain ei and ar win, but onli for some of them, e ∈ w(cei ), do we have that v(e \ {ei}) = 0 (i.e., e is no longer win if we remov ei). the banzhaf index of ei is the proport of such subset. 4.1 #p-complet of calcul the banzhaf index in the network flow game we now show that the gener case of network-flow-banzhaf is #p-complet, by a reduct from #match. first, we note that network-flow-banzhaf is in #p. there ar sever polynomi algorithm to calcul the maxim  network flow, so it is easi to check if a certain subset of edg e ⊂ e contain ei and allow a flow of at least k from s to t. it is also easi to check if a flow of at least k is no longer possibl when we remov ei from e (again, by run a polynomi algorithm for calcul the maxim flow). the banzhaf index of ei is  exactli the number of such subset e ⊂ e, so  network-flowbanzhaf is in #p. to show that network-flow-banzhaf is #p-complet, we reduc a #match problem4 to a  networkflow-banzhaf problem. definit 2. #match: we ar given a bipartit graph g =< u, v, e >, such that |u| = |v | = n, and ar ask to count the number of perfect match possibl in g. 4.2 the overal reduct approach the reduct is done as follow. from the #match  input, g =< u, v, e >, we build two input for the  networkflow-banzhaf problem. the differ between the answer obtain from the network-flow-banzhaf run is the  answer to the #match problem. both run of the  networkflow-banzhaf problem ar construct with the same graph g =< v , e >, with the same sourc vertex s and target vertex t, and with the same edg ef for which to comput the banzhaf  index. thei differ onli in the target flow valu. the first run is with a target flow of k, and the second run is with a target flow of k + . a choic of subset ec ⊂ e reflect a possibl match in the origin graph. g is a subgraph of the construct g . we identifi an edg in g , e ∈ e , with the same edg in g. thi edg indic a particular match between some vertex u ∈ u and anoth vertex v ∈ v . thu, if ec ⊂ e is a subset of edg in g which contain onli edg in the subgraph of g, we identifi it with a subset of edg in g, or with some candid of a match. we sai ec ⊂ e match some vertex v ∈ v , if ec contain some edg that connect to v, i.e., for some u ∈ u we have (u, v) ∈ ec. ec is a possibl match if it doe not match a vertex v ∈ v with more than on vertex in u, i.e., there ar not two vertic u1 = u2 in u that both (u1, v) ∈ ec and (u2, v) ∈ ec. a perfect match match all the vertic in v . if ec fail to match a vertex in v (the right side of the partit), the maxim possibl flow that ec allow in g is less than k. if it match all the vertic in v , a flow of k is possibl. if it match 4 thi is on of the most well-known #p-complet problem. all the vertic in v , but match some vertex in v more than onc (which mean thi is not a true match), a flow of k+ is possibl. is chosen so that if a singl vertex v ∈ v is unmatch, the maxim possibl flow would be less than |v |, even if all the other vertic ar match more than onc. in other word, is chosen so that match sever vertic in v more than onc can never compens for not match some vertex in v , in term of the maxim possibl flow. thu, when we check the banzhaf index of ef when the requir flow is at least k, we get the number of subset e ⊂ e that match all the vertic in v at least onc. when we check the banzhaf index of ef with a requir flow of at least k+ , we get the number of subset e ⊂ e that match all the vertic in v at least onc, and match at least on vertex v ∈ v more than onc. the differ between the two is exactli the number of perfect match in g. therefor, if there exist a polynomi algorithm for  networkflow-banzhaf, we could us it to build a polynomi  algorithm for #match, so network-flow-banzhaf is  #pcomplet. 4.3 reduct detail the reduct take the #match input, the bipartit graph g =< u, v, e >, where |u| = |v | = k. it then gener a network flow graph g as follow. the graph g is kept as a subgraph of g , and each edg in g is given a capac of 1. a new sourc vertex s is ad, along with a new vertex t and a new target vertex t. let = 1 k+1 so that · k < 1. the sourc s is connect to each of the vertic in u, the left partit of g, with an edg of capac 1 + . each of the vertic in v is connect to t with an edg of capac 1 + . t is connect to t with an edg ef of capac 1 + . as mention abov, we perform two run of  network-flowbanzhaf, both check the banzhaf index of the edg ef in the flow network g . we denot the network flow game defin on g with target flow k as v(g ,k). the first run is perform on the game with a target flow of k, v(g ,k), return the index βef (v(g ,k)). the second run is perform on the game with a target flow of k + , v(g ,k+ ), return the index βef (v(g ,k+ )). the number of perfect match in g is the differ between the answer in the two run, βef (v(g ,k)) − βef (v(g ,k+ )). thi is proven in theorem 5. figur 1 show an exampl of construct g from g. on the left is the origin graph g, and on the right is the construct  network flow graph g . 4.4 proof of the reduct we now prove that the reduct abov is correct. in all of thi section, we take the input to the #match problem to be g =< u, v, e > with |u| = |v | = k, the network flow graph construct in the reduct to be g =< v , e > with capac c : e → r as defin in section 4.3, the edg for which to  calcul the banzhaf index to be ef , and target flow valu of k and k + . proposit 1. let ec ⊂ e be a subset of edg that lack on or more edg of the follow: 1. the edg connect to s; 2. the edg connect to t ; 3. the edg ef = (t , t). we call such a subset a miss subset. the maxim flow between s and t us onli the edg in the miss subset ec is less than k. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 337 figur 1: reduc #match to network-flow-banzhaf proof. the graph is a layer graph, with s be the vertex in the first layer, u the vertic in the second layer, v the vertic in the third, t the vertex in the fourth, and t in the fifth. edg in g onli go between consecut layer. the maxim flow in a layer graph is limit by the total capac of the edg between everi two consecut layer. if ani of the edg between s and u is miss, the flow is limit by (|v | − 1)(1 + ) < k. if ani of the edg between v and t is miss, the flow is also limit by (|v | − 1)(1 + ) < k. if the edg ef is miss, there ar no edg go to the last layer, and the maxim flow is 0. sinc such miss subset of edg do not affect the banzhaf index of ef (thei add 0 to the sum), from now on we will consid onli non-miss subset. as explain in section 4.2, we identifi the edg in g that were copi from g (the edg between u and v in g ) with their counterpart in g. each such edg (u, v) ∈ e repres a match between u and v in g. ec is a perfect match if it match everi vertex u to a singl vertex v and vice versa. proposit 2. let ec ⊂ e be a subset of edg that fail to match some vertex v ∈ v . the maxim flow between s and t us onli the edg in the miss subset ec is less than k. we call such a set sub-match, and it is not a perfect match. proof. if ec fail to match some vertex v ∈ v , the maxim flow that can reach the vertic in the v layer is (1+ )(k−1) < k, so thi is also the maxim flow that can reach t. proposit 3. let ec ⊂ e be a subset of edg that is a perfect match in g. then the maxim flow between s and t us onli the edg in ec is exactli k. proof. a flow of k is possibl. we send a flow of 1 from s to each of the vertic in u, send a flow of 1 from each vertex u ∈ u to it match v ∈ v , and send a flow of 1 from each v ∈ v to t . t get a total flow of exactli k, and send it to t. a flow of more than k is not possibl sinc there ar exactli k edg of capac 1 between the u layer and the v layer, and the maxim flow is limit by the total capac of the edg between these two consecut layer. proposit 4. let ec ⊂ e be a subset of edg that  contain a perfect match m ⊂ e in g and at least on more edg ex between some vertex ua ∈ u and va ∈ v . then the maxim flow between s and t us onli the edg in ec is at least k+ . we call such a set a super-match, and it is not a perfect match. proof. a flow of k is possibl, by us the edg of the perfect match as in proposit 3. we send a flow of 1 from s to each of the vertic in u, send a flow of 1 from each vertex u ∈ u to it match v ∈ v , and send a flow of 1 from each v ∈ v to t . t get a total flow of exactli k, and send it to t. after us the edg of the perfect match, we send a flow of from s to ua (thi is possibl sinc the capac of the edg (s, ua) is 1 + and we have onli us up 1). we then send a flow of from ua to va. thi is possibl sinc we have not us thi edg at all-it is the edg which is not a part of the perfect match. we then send a flow of from va to t . again, thi is possibl sinc we have us 1 out of the total capac of 1 + which that edg ha. now t get a total flow of k + , and send it all to t, so we have achiev a total flow of k + . thu, the maxim possibl flow is at least k + . theorem 5. consid a #match instanc g =< u, v, e > reduc to a banzhaf-network-flow instanc g as explain in section 4.3. let v(g ,k) be the network flow game defin on g with target flow k, and v(g ,k+ ) be the game defin with a target flow of k+ . let the result index of the first run be βef (v(g ,k)), and βef (v(g ,k+ )) be the result index of the second run. then the number of perfect match in g is the differ between the answer in the two run, βef (v(g ,k)) − βef (v(g ,k+ )). proof. consid the game v(g ,k). accord to proposit 1, in thi game, the banzhaf index of ef doe not count miss  subset ec ∈ e , sinc thei ar lose in thi game. accord to proposit 2, it doe not count subset ec ∈ e that ar  submatch, sinc thei ar also lose. accord to proposit 3, it add 1 to the count for each perfect match, sinc such subset allow a flow of k and ar win. accord to proposit 3, it add 1 to the count for each super-match, sinc such subset allow a flow of k (and more than k) and ar win. consid the game v(g ,k+ ). again, accord to proposit 1, in thi game the banzhaf index of ef doe not count miss  subset ec ∈ e , sinc thei ar lose in thi game. accord to proposit 2, it doe not count subset ec ∈ e that ar  submatch, sinc thei ar also lose. accord to proposit 3, it add 0 to the count for each perfect match, sinc such subset allow a flow of k but not k + , and ar thu lose. accord to proposit 3, it add 1 to the count for each super-match, sinc such subset allow a flow of k + and ar win. thu the differ between the two indic, βef (v(g ,k)) − βef (v(g ,k+ )), is exactli the number of perfect match in g. we have reduc a #match problem to a  networkflow-banzhaf problem. thi mean that given a polynomi 338 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) algorithm to calcul the banzhaf index of an agent in a  gener network flow game, we can build an algorithm to solv the #match problem. thu, the problem of calcul the banzhaf index of agent in gener network flow game is also #p-complet. 5. calcul the banzhaf index in bound layer graph  connect game we here present a polynomi algorithm to calcul the banzhaf index of an edg in a connect game, where the network is a bound layer graph. thi posit result indic that for some restrict domain of network flow game, it is possibl to calcul the banzhaf index in a reason amount of time. definit 3. a layer graph is a graph g =< v, e >, with sourc vertex s and target vertex t, where the vertic of the graph ar partit into n + 1 layer, l0 = {s}, l1, ..., ln = {t}. the edg run onli between consecut layer. definit 4. a c-bound layer graph is a layer graph where the number of vertic in each layer is bound by some constant number c. although there is no limit on the number of layer in a bound layer graph, the structur of such graph make it possibl to  calcul the banzhaf index of edg in connect game on such graph. the algorithm provid below is inde polynomi in the number of vertic given that the network is a c-bound layer graph. howev, there is a constant factor to the run time, which is exponenti in c. therefor, thi method is onli tractabl for graph where the bound c is small. bound layer graph mai occur in network when the node ar locat in sever order segment, where node can be connect onli between  consecut segment. let v be a vertex in layer li. we sai an edg e occur befor v if it connect two vertic in v"s layer or a previou layer: e = (u, w) connect vertex u ∈ lj to vertex w ∈ lj+1 and j + 1 ≤ i. let predv ⊂ e be the subset of edg that occur befor v. consid a subset of these edg, e ⊂ predv. e mai contain a path from s to v, or it mai not. we defin pv as the number of subset e ⊂ predv that contain a path from s to v. similarli, let vi ∈ v be the subset of all the vertic in the same layer li. let predvi ⊂ e be the subset of edg that occur befor vi (all the vertic in vi ar in the same layer, so ani edg that occur befor some v ∈ vi occur befor ani other vertex w ∈ vi). consid a subset of these edg, e ⊂ predv . let vi(e ) be the subset of vertic in vi that ar reachabl from s us onli the edg in e : vi(e ) = {v ∈ vi|e contain a path from s to v}. we sai e ∈ predv connect exactli the vertic in si ⊂ vi if all the vertic in si ar reachabl from s us the edg in e but no other vertic in vi ar reachabl from s us e , so vi(e ) = si. let v ⊂ vi be a subset of the vertic in layer li. we defin pv as the number of subset e ⊂ predv that connect exactli the vertic in v : pv = |{e ⊂ predv |vi(e ) = v }|. lemma 1. let s1, s2 ⊂ vi where s1 = s2 be two differ subset of vertic in the same layer. let e , e ⊂ predvi be two set of edg subset, so that e connect exactli the vertic in s1 and e connect exactli the vertic in s2: vi(e ) = s1 and vi(e ) = s2. then e and e do not contain the same edg: e = e . proof. if e = e then both set of edg allow the same path from s, so vi(e ) = vi(e ). let si ⊂ vi be a subset of vertic in layer li. let ei ⊂ e be the set of edg between the vertic in layer li and layer li+1. let e ⊂ ei be some subset of these edg. we denot by dest(si, e) the set of vertic in layer li+1 that ar connect to some vertex in si by an edg in e: dest(si, e) = {v ∈ vi+1|there exist some w ∈ si and some e ∈ e that e = (w, v)}. let si ⊂ vi be a subset of vertic in li and e ⊂ ei be some subset of the edg between layer li and layer li+1. psi count the number of edg subset in predvi that connect exactli the  vertic in si. consid such a subset e count in psi . e ∪ e is a subset of edg in predvi+1 that connect exactli to dest(si, e). accord to lemma 1, if we iter over the differ si"s in layer li, the psi "s count differ subset of edg, and thu everi  expans us the edg in e is also differ. algorithm 1 calcul pt. it iter through the layer, and updat the data for the next layer given the data for the current layer. for each layer li and everi subset of edg in that layer si ⊂ vi, it calcul psi . it doe so us the valu calcul in the previou layer. the algorithm consid everi subset of possibl vertic in the current layer, and everi possibl subset of expand edg to the next layer, and updat the valu of the appropri subset in the next layer. algorithm 1 1: procedur connect-exactli-subset(g, v) 2: p{s} ← 1 initi 3: for all other subset of vertic s do initi 4: ps ← 0 5: end for 6: for i ← 0 to n − 1 do iter through layer 7: for all vertex subset si in li do 8: for all edg subset e between li, li+1 do 9: d ← dest(si, e) subset in li+1 10: pd ← pd + psi 11: end for 12: end for 13: end for 14: end procedur a c-bound layer graph contain at most c vertic in each layer, so for each layer there ar at most 2c differ subset of vertic in that layer. there ar also at most c2 edg between 2 consecut layer, and thu at most 2(c2 ) edg subset between two layer. if the graph contain k layer, the run time of the algorithm is bound by k·2c ·2(c2 ) . sinc c is a constant, thi is a polynomi algorithm. consid the connect game on a layer graph g, with a singl sourc vertex s and target vertex t. the banzhaf index of the edg e is the number of subset of edg that allow a path between s and t, but do not allow such a path when e is remov (divid by a constant). we can calcul p{t} = p{t}(g) for g us the algorithm to count the number of subset of edg that allow a path from s to t. we can then remov e from g to obtain the graph g =< v, e \ {e} >, and calcul p{t} = p{t}(g ). the differ p{t}(g) − p{t}(g ) is the number of subset of edg that contain a path from s to t but no longer contain such a path when e is remov. the banzhaf index for e is p{t}(g)−p{t}(g ) 2|e|−1 . thu, thi algorithm allow us to calcul the banzhaf index on an edg in the connect game on bound layer graph. the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 339 6. relat work measur the power of individu player in coalit game ha been studi for mani year. the most popular indic  suggest for such measur ar the banzhaf index [1] and the shaplei-shubik index [19]. in hi semin paper, shaplei [18] consid coalit game and the fair alloc of the util gain by the grand coalit (the coalit of all agent) to it member. the shaplei-shubik index [19] is the direct applic of the shaplei valu to simpl coalit game. the banzhaf index emerg directli from the studi of vote in decis-make bodi. the normal banzhaf index measur the proport of coalit in which a player is a swinger, out of all win coalit. thi index is similar to the banzhaf index discuss in section 1, and is defin as: βi = βi(v) k∈n βk . the banzhaf index wa mathemat analyz in [3], where it wa shown that thi normal lack certain desir  properti, and the more natur banzhaf index is introduc. both the shaplei-shubik and the banzhaf indic have been wide studi, and straffin [20] ha shown that each index reflect specif condit in a vote bodi. [11] consid these two indic along with sever other, and describ the axiom that character the differ indic. the naiv implement of an algorithm for calcul the banzhaf index of an agent i enumer all coalit contain i. there ar 2n−1 such coalit, so the perform is  exponenti in the number of agent. [12] contain a survei of algorithm for calcul power indic of weight major game. deng and papadimitri [2] show that comput the shaplei valu in weight major game is #p-complet, us a reduct from knapsack. sinc the shaplei valu of ani simpl game ha the same valu as it shaplei-shubik index, thi show that  calcul the shaplei-shubik index in weight major game is  #pcomplet. matsui and matsui [13] have shown that calcul both the banzhaf and shaplei-shubik indic in weight vote game is np-complet. the problem of comput power indic in simpl game  depend on the chosen represent of the game. sinc the number of possibl coalit is exponenti in the number of agent,  calcul power indic in time polynomi in the number of agent can onli be achiev in specif domain. in thi paper, we have consid the network flow domain, where a coalit of agent must achiev a flow beyond a certain valu. the network flow game we have defin is a simpl game. [10, 9] have consid a similar network flow domain, where each agent control an edg of a network flow graph. howev, thei  introduc a non-simpl game, where the valu a coalit of agent achiev is the maxim total flow. thei have shown that certain famili of network flow game and similar game have nonempti core. 7. conclus and futur  direct we have consid network flow game, where a coalit of agent win if it manag to send a flow of more than some valu k between two vertic. we have assess the rel power of each agent in thi scenario us the banzhaf index. thi power index mai be us to decid how to alloc mainten resourc in real-world network, in order to maxim our abil to maintain a certain flow of inform between two site. although the banzhaf index theoret allow us to measur the power of the agent in the network flow game, we have shown that the problem of calcul the banzhaf index in thi domain in #p-complet. despit thi discourag result for the gener network flow domain, we have also provid a more encourag result for a restrict domain. in the case of connect game (where it is onli requir for a coalit to contain a path from the sourc to the destin) plai on bound layer graph, it is possibl to calcul the banzhaf index of an agent in polynomi time. it remain an open problem to find wai to tractabl  approxim the banzhaf index in the gener network flow domain. it might also be possibl to find other us restrict domain where it is possibl to exactli calcul the banzhaf index. we have onli consid the complex of calcul the banzhaf index; it  remain an open problem to find the complex of calcul the shaplei-shubik or other indic in the network flow domain.  final, we believ that there ar mani addit interest domain other than weight vote game and network flow game, and it would be worthwhil to investig the complex of calcul the banzhaf index or other power indic in such domain. 8. acknowledg thi work wa partial support by grant #898/05 from the israel scienc foundat. 9. refer [1] j. f. banzhaf. weight vote doesn"t work: a mathemat analysi. rutger law review, 19:317-343, 1965. [2] x. deng and c. h. papadimitri. on the complex of cooper solut concept. math. oper. re., 19(2):257-266, 1994. [3] p. dubei and l. shaplei. mathemat properti of the banzhaf power index. mathemat of oper research, 4(2):99-131, 1979. [4] e. ephrati and j. s. rosenschein. the clark tax as a consensu mechan among autom agent. in proceed of the ninth nation confer on artifici intellig, page 173-178, anaheim, california, juli 1991. [5] e. ephrati and j. s. rosenschein. a heurist techniqu for multiag plan. annal of mathemat and artifici intellig, 20:13-67, spring 1997. [6] s. ghosh, m. mundh, k. hernandez, and s. sen. vote for movi: the anatomi of a recommend system. in proceed of the third annual confer on autonom agent, page 434-435, 1999. [7] t. hayn, s. sen, n. arora, and r. nadella. an autom meet schedul system that util user prefer. in proceed of the first intern confer on autonom agent, page 308-315, 1997. [8] e. hemaspaandra, l. hemaspaandra, and j. roth. anyon but him: the complex of preclud an altern. in proceed of the 20th nation confer on artifici intellig, pittsburgh, juli 2005. [9] e. kalai and e. zemel. on total balanc game and game of flow. discuss paper 413, northwestern univers, center for mathemat studi in econom and manag scienc, jan. 1980. avail at http://idea.repec.org/p/nwu/cmsem/413.html. 340 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) [10] e. kalai and e. zemel. gener network problem yield total balanc game. oper research, 30:998-1008, septemb 1982. [11] a. laruel. on the choic of a power index. paper 99-10, valencia - instituto de investigacion economica, 1999. [12] y. matsui and t. matsui. a survei of algorithm for calcul power indic of weight major game. journal of the oper research societi of japan, 43, 2000. [13] y. matsui and t. matsui. np-complet for calcul power indic of weight major game. theoret comput scienc, 263(1-2):305-310, 2001. [14] n. nisan and a. ronen. algorithm mechan design. game and econom behavior, 35:166-196, 2001. [15] a. d. procaccia and j. s. rosenschein. junta distribut and the averag-case complex of manipul elect. in the fifth intern joint confer on autonom agent and multiag system, page 497-504, hakod, japan, mai 2006. [16] j. s. rosenschein and m. r. genesereth. deal among ration agent. in proceed of the ninth intern joint confer on artifici intellig, page 91-99, lo angel, california, august 1985. [17] t. sandholm and v. lesser. issu in autom negoti and electron commerc: extend the contract net framework. in proceed of the first intern confer on multiag system (icma-95), page 328-335, san francisco, 1995. [18] l. s. shaplei. a valu for n-person game. contribut to the theori of game, page 31-40, 1953. [19] l. s. shaplei and m. shubik. a method for evalu the distribut of power in a committe system. american polit scienc review, 48:787-792, 1954. [20] p. straffin. homogen, independ and power indic. public choic, 30:107-118, 1977. [21] m. tennenholtz and a. altman. on the axiomat the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 341 