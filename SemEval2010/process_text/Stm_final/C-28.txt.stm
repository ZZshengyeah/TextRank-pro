packageblast: an adapt multi-polici grid servic for biolog sequenc comparison ∗ marcelo s. sousa univers of brasilia campu unb - icc nort, sub-solo brasilia, brazil msousa@unb.br alba cristina m. a. melo univers of brasilia campu unb - icc nort, sub-solo brasilia, brazil alv@unb.br abstract in thi paper, we propos an adapt task alloc  framework to perform blast search in a grid environ against sequenc databas segment. the framework, call packageblast, provid an infrastructur to choos or  incorpor task alloc strategi. furthermor, we  propos a mechan to comput grid node execut weight, adapt the chosen alloc polici to the current  comput power of the node. our result present veri good speedup and also show that no singl alloc strategi is abl to achiev the lowest execut time for all scenario. categori and subject descriptor c.2.4 [distribut system]: distribut applic; j.3 [life and medic scienc]: biologi and genet 1. introduct biolog sequenc comparison (or sequenc align) is on of the most import problem in comput  biologi, given the number and divers of the sequenc and the frequenc on which it is need to be solv daili. sw [14] is an exact algorithm that find the best local align between two sequenc of size n in quadrat time and space. in genom project, the size of the sequenc to be compar is constantli increas, thu an o(n2 ) solut is expens. for thi reason, heurist like blast [3] were propos to reduc execut time. the popular of the internet made possibl the  interconnect of million of power machin in a global scale. thi led to the idea of grid comput, which involv  cooper and secur share of non-dedic and  heterogen resourc that ar geograph distribut [5]. resourc schedul is on of the most import  compon of a grid system. the choic of the best resourc for a particular applic is call task alloc, which is an np-complet problem. grid applic usual do not have high commun rate and mani of them follow the master/slave model [13]. in order to schedul master/slave applic mani task alloc polici were propos such as self schedul [15] and fac2 [8]. the choic of the best alloc polici depend on the applic access pattern and on the environ in which it run [13]. in thi paper, we propos packageblast, an adapt multi-polici grid servic to run blast search in grid compos by segment genet databas. packageblast execut on globu 3 [4] and, by now, provid five alloc polici. also, we propos an adapt mechan to assign weight to the grid node, take into account their current workload. as far as we know, thi is the first grid servic that run blast with multipl task polici with a segment databas in a heterogen non-dedic platform. thi paper is organ as follow. section 2 present the sequenc comparison problem and the blast algorithm. section 3 describ alloc polici for grid. section 4 discuss relat work. section 5 present the design of packageblast. experiment result ar discuss in  section 6. section 7 conclud the paper. 2. sequenc comparison to compar two sequenc, we must find the best  align, which is to place on sequenc abov the other make clear the correspond between similar charact [7]. given an align between two sequenc, a score is  usual associ for it as follow (figur 1). for each column, we associ, for instanc, +1 if the two charact ar  ident, -1 if the charact ar differ and -2 if on of them is a space. the score is the sum of all the valu and the maxim score is the similar between the sequenc. to comput exact local sequenc align, [14]  propos an algorithm (sw), base on dynam program, with quadrat time and space complex. usual, on given biolog sequenc is compar against thousand or even million of sequenc that compos  genet data bank. by now, there ar million of entri  compos of billion of nucleotid at genbank, which is on of the most import public gene repositori. due to the 156 g a c g g a t t a g g a t c g g a a t a g +1 +1 −2 +1 +1 +1 +1 −1 +1 +1 +1 Σ = 6 figur 1: exampl of an align with score 6 current growth rate, these databas will soon achiev  terabyt. in thi scenario, the us of exact method such as sw is prohibit. for thi reason, faster heurist method ar propos which do not guarante that the best align will be produc. usual, these heurist method ar  evalu us the concept of sensit and sensibl.  sensit is the rate at which the method fail to identifi similar sequenc wherea sensibl is the rate at which the method identifi sequenc that ar not similar [7]. blast [1] is the most wide us heurist method for sequenc comparison. 2.1 the blast algorithm blast (basic local align tool) [1] is a set of  program us to search dna and protein databas for  similar between sequenc. it is design to obtain high  perform with low impact in term of sensibl. blast provid program to compar mani combin of queri and databas sequenc type (tabl 1). tabl 1: some of the blast famili program program databas queri translat blastn nucleotid nucleotid none blastp protein protein none blastx protein nucleotid queri the first version of blast search for local similar without take space (gap) into account. in 1996-1997, two gap version of blast emerg: ncbi-blast [3] and wu-blast [6]. basic, the algorithm proce in three step: seed, extens and evalu. in the seed step, a queri  sequenc is split in portion call word of size w. these word ar match to databas sequenc and us as  align seed if their score ar higher than a threshold t. in the extens step, align ar gener from seed. a paramet x maintain the recent align histori and control thi step. onc seed ar extend, the last step begin. the align ar evalu to determin if thei ar statist signific. the signific on ar term hsp (high-score segment pair). a new paramet, s, is us to sort align. the combin of paramet w, t, x and s is us to determin the sensit and speed of blast search. 3. task alloc for grid 3.1 grid comput grid comput wa initi develop to enabl resourc share between scientif institut who need to share data, softwar and comput power. the globu toolkit [4] emerg as an open sourc project and quickli becam a de facto standard for grid comput infrastructur. globu implement a set of protocol, api and servic us by hundr of grid applic all over the world. in 2002, the open grid servic architectur (ogsa) wa introduc by the global grid forum (ggf) to expand standard. ogsa provid a new architectur for grid applic base on web servic in order to achiev  interoper us industri standard. mani ogsa  architectur implement were develop, includ on for globu. the work carri out in thi paper is deploi on a grid base on globu (gt3). usual, grid applic ar model as master/slave, where on problem is divid in mani independ work unit (task) of smaller size that can be distribut to slave node for parallel process. a veri import problem to be solv in thi context is task alloc. the task alloc problem consist of assign task to processor in order to maxim system perform [13]. in thi problem, it is assum that no preced relat exist among the task. 3.2 task alloc strategi given a master/slave applic compos by a master m and s slave, the alloc function alloc(m, si, n, s) determin how mani task out of n must be assign to a slave si (equat 1), where a(n, s) repres an  alloc polici. weightfactor(m, si, s) wa defin by [13] (equat 2) and provid weight for each slave si, base on it static known process rate (workerr). alloc(m, si, n, s) = a(n, s) ∗ w eightf actor(m, si, s) (1) w eightf actor(m, si, s) = p ∗ w orkerr(m, si) p i=1 w orkerr(m, si) (2) the follow subsect present some work alloc polici, which ar instanc a(n, s) of equat 1. 3.3 fix (static schedul) the fix [13] strategi distribut all work unit  uniformli to slave node. thi strategi is appropri for  homogen system with dedic resourc (equat 3). a(n, s) = n s (3) 3.4 self schedul (ss) self schedul (ss) [15] distribut a singl work unit to everi slave node (equat 4). a(n, s) = 1, while work unit ar still left to alloc (4) in ss, the maximum imbal is limit by the  process time of a work unit in the slowest node. nevertheless, ss usual demand a lot of commun, sinc each work unit retriev requir on interact with the master. 3.5 trapezoid self schedul (tss) trapezoid self-schedul (tss) [16] alloc work unit in group with a linearli decreas size. thi strategi us two variabl, step and δ, that repres the total number of alloc step and the block reduct factor,  respect (equat 5 and 6). step = 4ns n + 2s (5) 157 δ = n − 2s 2s(step − 1) (6) tss calcul the length of the sth block us the  differ between the length of the first block and total reduct from the last s − 1 block (equat 7). a(s, n, s) = max n 2s − [(s − 1) ∗ δ] , 1 (7) 3.6 guid self schedul (gss) guid self-schedul (gss) [11] alloc work unit in group whose length decreas exponenti. it goal is to creat a tradeoff between the number of the work unit process and the imbal in finish time (equat 8). a(s, n, s) = max n 1 − 1 s s−1 s , 1 , s > 0 (8) 3.7 factor (fac2) fac2 alloc work unit in cycl consist of s  alloc sequenc. equat 9 show the function that defin the cycl number of an iter s. in fac2, half of the remain work unit ar alloc in each round (equat 10). round(s) = (s − 1) s + 1 (9) a(s, n, s) = max n s ∗ 2round(s) , 1 (10) 4. relat work mpiblast [2] wa propos for cluster and ha two phase. first, the genet databas is segment. then, the queri ar evenli distribut among the node. if the node doe not have a databas fragment, a local copi is made. a method is propos that associ data fragment to node, try to minim the number of copi. blast++ [10] group multipl sequenc to reduc the number of databas access. a master/slave approach is us that alloc the queri to the slave accord to the fix polici (section 3.3). each worker execut blast++ independ and, final, the result ar collect and  combin by the master. gridblast [9] is a master/slave grid applic that us globu 2. it distribut sequenc among the grid node us two alloc polici: fcf and minmax. of those, onli the last on take into account the current load and the heterogen of the environ. howev, to us minmax, the total execut time of each blast task must be known. have decid which sequenc will be compar by each node, gridblast send the sequenc, the execut file and the whole databas to the chosen node. when the search finish, the result ar compact and sent to the master. grid blast toolkit (gbtk) [12] is a web portal to execut blast search in globu 3. all genet databas ar  static place on the grid node (without replic). gbtk is a master/slave applic that receiv the sequenc and the name of the genet databas. it then verifi if the node that contain the databas is avail. if so, it is select. if the node is not avail, the less load node is chosen and the databas is copi to it. master slaveslaveslav internet databas segment but onli part of it is process in each node the databas is replic in the node, figur 2: packageblast segment and  distribut mechan. 5. design of packageblast we propos an adapt task alloc framework which is a grid servic to perform blast search against  sequenc databas segment. the framework, call  packageblast, provid an infrastructur to choos or incorpor alloc strategi in a master/slave applic. we also propos a strategi to comput grid node execut weight which distribut work unit (databas segment) to grid node accord to their current comput power. 5.1 databas segment and replic segment consist in the divis of a databas archiv in mani portion of smaller size, call segment, that can be process independ. it enabl grid node to search smaller part of a sequenc databas, reduc the number of disk access and henc improv blast perform. also, a singl queri sequenc can be compar against all segment in parallel. just as in mpiblast (section 4), we decid to us databas segment in packageblast with an ncbi tool call formatdb, which wa modifi to gener more databas segment of smaller size. we opt to replic the segment databas in everi slave grid node to improv data access time and to  provid a potenti for fault toler. figur 2 illustr thi. 5.2 task alloc as [13], we think that no alloc polici will produc the best result for everi situat. thu, we propos the us of a framework where mani alloc polici can be  incorpor. by now, our framework contain five alloc polici: fix, ss, gss, tss, fac2, all describ in  section 3. so, the user can choos or even creat the alloc polici which is the most appropri to hi/her environ and hi/her blast paramet. besid that, we propos pss (packag weight  adapt self-schedul), a new strategi that adapt the chosen alloc polici to a grid with local workload. consid the heterogen and dynam characterist of the grid, pss is abl to modifi the length of the work unit dure execut, base on averag process time of each node. the express us for work unit alloc is shown in equat 11, where a(n, p) is the alloc polici for a  system with n workload unit and p node and Φ(m, pi, p) is the weight calcul by pss. a(n, p) can be a pre-defin alloc polici or a user-defin on. 158 alloc(m, pi, n, p ) = a(n, p ) ∗ Φ(m, pi, p ) (11) to distribut databas segment to node, the master  analyz period slave notif. the express us is Φ(m, pi, p) (equat 12), defin as the weight mean from the last Ω notif sent by each pi slave node. Φ(m, pi, p ) = p ∗ p i=1 Γ(m,pi,Ω) Γ(m,pi,Ω) p i=1 p i=1 Γ(m,pi,Ω) Γ(m,pi,Ω) (12) Γ(m, pi, Ω) (equat 13) specifi the averag comput time of a segment in a node pi, consid the last Ω  notif of te(m, pi, τ), which is the averag comput time of τ work unit (databas segment) assign by the master m to a slave pi. at the moment of comput of Γ, if there is not enough notif of te, the calcul is done with total k notif alreadi receiv. Γ(m, pi, Ω) = min(Ω,k) j=1 t e(m, pi, τ) min(Ω, k) (13) 5.3 packageblast"s gener architectur packageblast wa design as a grid servic over globu 3, base on web servic and java. figur 3 present the packageblast architectur. blast receiv master strategi alloc work unit gener work unit distribut report gener work unit (to slave)report search figur 3: packageblast architectur. the modul alloc strategi contain  implement for the pre-defin alloc polici (fix, ss, gss, tss and fac2) and also make possibl the creation of new alloc strategi. the modul gener work unit is the core of the pss mechan. it calcul the weight of each slave node and decid how mani work unit will be assign to a particular slave node, accord to the chosen alloc polici. distribut work unit is the modul respons for the commun between the master and slave node. it distribut the work unit gener by the previou modul and collect the notif. final, the modul gener report obtain the  intermediari output sent by the slave node through file transfer and merg them into a singl blast output report. in gener, the follow execut flow is execut. the user specifi the sequenc to be compar and choos the alloc strategi. the master node start execut and wait for slave connect. to start process, a minimum number of slave must regist into the master node, by  call a master grid servic. after receiv connect from the slave, the master notifi them about their initi  segment to compar. the slave process τ databas segment and notifi the master, which us the last Ω notif to comput the next alloc block size base on the  select alloc strategi and the weight provid by pss. then, the master send a xml messag to the slave  inform it new segment to process. thi flow continu until all segment ar process. 6. experiment result packageblast wa evalu in a 16-node grid testb, compos by two laboratori, interconnect by a  localarea network. eleven desktop (p01-11) and a notebook (nb) were us in labpo and four desktop (l01-04) were us in laico (tabl 2). all grid node us linux with globu 3.2.1, ncbi blast 2.2.10 and java vm 1.4.2. tabl 2: characterist of the grid testb. node name cpu main memori hd nb 3200 mhz 512 mb 80 gb l01-l03 1700 mhz 256 mb 30 gb l04 350 mhz 160 mb 6 gb p01-p10 1000 mhz 256 mb 20 gb p11 900 mhz 128 mb 20 gb to investig the perform gain of packageblast, we execut blastx in 2, 4, 8 and 16 grid node. each blast search compar a 10kbp real dna sequenc against the 1.2gb nr genet databas segment in 167 part of 5mb each. fix, ss, tss, gss and fac2 alloc strategi were emploi in the test. execut time for all alloc strategi ar present in tabl 3. tabl 3: execut time for blastx. strategi 2 node 4 node 8 node 16 node fix 2037 999 491 252 ss 1112 514 246 134 tss 1296 570 259 143 gss 1115 535 250 127 fac2 1187 514 266 142 tabl 4 present execut time in a singl machin and absolut speedup for 2, 4, 8 and 16 node, consid the best execut time for a given number of node. to  calcul the absolut speedup, the blast sequenti version wa execut with the nr unseg databas. tabl 4: sequenti execut time and speedup. node seqtim 2 node 4 node 8 node 16 node nb 1432 1.29 2.79 5.82 11.28 l01 1585 1.43 3.08 6.44 12.48 p01 1853 1.67 3.61 7.53 14.59 p11 2004 1.80 3.90 8.15 15.78 l04 3810 3.43 7.41 15.49 30.00 packageblast achiev veri good speedup.  consid the worst (l04), averag (p01) and best (nb) node in the grid, the speedup obtain were superlinear, close to linear and sublinear, respect. in tabl 3, it can also be notic that there is no alloc strategi that alwai reach the best execut time. thi variat justifi the alloc framework provid. to evalu pss, we execut packageblast with 16 grid node, introduc local workload in node l01, l02, p01 and p02. the load wa start simultan 30  second after the begin of blast and consist of the 159 execut of formatdb on the nr databas. three scenario were simul (tabl 5): 1) with pss strategi, but without workload; 2) with pss strategi and workload (pss 2x), to us grid environ knowledg obtain in the preceed iter; and 3) execut without pss and with workload. tabl 5: pss evalu with local workload. gain is the comparison of without pss with pss 2x strategi with pss pss 2x without pss gain fix 316 184 393 113.59% ss 186 177 179 1.13% tss 160 162 171 5.56% gss 149 159 339 113.21% fac2 156 165 153 -7.27% as expect, the alloc strategi that assign a larg amount of work to the node (fix and gss) obtain great benefit from us pss. thi is due to the fact that a slow node can easili becom a bottleneck in these strategi. tss also obtain a reduct of 5.56% in it execut time. pss us two paramet: τ and Ω (section 5.2). we  vari these paramet in order to evalu the pss behavior in two scenario. in both case, we us a four-node (nb, l01, p01, l04) grid. in the first experi, a local  workload (formatdb) wa introduc when the last task of the first tss alloc start and wa stop immedi  after the process of on segment. the goal wa to evalu the impact of short-live local task in pss. in the second case, local workload wa introduc at the same time of the previou case, but continu until the end. the goal wa to evalu long-live local task. figur 4 present the gain. figur 4: percentu gain obtain by pss vari τ and Ω paramet. in scenario 1, when a veri recent histori is consid (τ=1 and Ω=1), pss tri to adapt to a situat that will shortli disappear. for τ=5 and Ω=4, pss take longer to notic modif and short-live task have low impact. on the other hand, in scenario 2, τ=1,Ω=1 present better result than τ=5, Ω=4, becaus it chang weight faster. 7. conclus in thi articl, we propos and evalu packageblast, an adapt multi-polici grid servic to execut master/slave blast search. packageblast contain a framework where the user can choos or incorpor alloc polici. we also defin a strategi, pss, that adapt the chosen  polici to a heterogen non-dedic grid environ. the result collect by run packageblast with 5 alloc polici in a grid testb were veri good. in  order to compar a 10kbp real dna sequenc against the nr genet databas, we were abl to reduc execut time from 30.88 min to 2.11 min. also, we show that, in our testb, there is no alloc polici that alwai achiev the best perform and that make evid the  import of provid multipl polici. moreov, we show that the introduct of pss led to veri good perform gain for some polici. as futur work, we intend to run packageblast in a  geograph dispers grid, to evalu the impact of high network latenc in the alloc polici and in pss. also, we intend to provid support for genom databas  synchron and dynam join/leav oper for slave. 8. refer [1] s. f. altschul, w. gish, w. miller, e. w. myer, and d. j. lipman. a basic local align search tool. journal of molecular biologi, 215:403-410, 1990. [2] a. darl, l. carei, and w. feng. the design, implement, and evalu of mpiblast. 4th intern confer on linux cluster, 2003. [3] s. f. a. et al. gap blast and psi-blast: a new gener of protein databas search program. nucleic acid research, 25(17):3389-3402, 1997. [4] i. foster and c. kesselman. globu: a metacomput infrastructur toolkit. intern journal of supercomput applic, 11(2):115-128, 1997. [5] i. foster and c. kesselman. the grid: blueprint of a futur comput infrastructur. morgan-kauffman, 1999. [6] w. gish. washington univers blast. http://blast.wustl.edu, 1996-2002. [7] d. gusfield. algorithm on string, tree and sequenc. cambridg univers press, 1997. [8] s. f. hummel, e. schonberg, and l. e. flynn. factor: a method for schedul parallel loop. commun of the acm, 35(8):90-101, 1992. [9] a. krishnan. gridblast: high throughput blast on the grid. symposium on biocomput, januari 2003. [10] d. peng., w. yan, and z. lei. parallel of blast++. technic report, singapor-mit, 2004. [11] c. d. polychronopoulo and d. j. kuck. guid self-schedul: a practic schedul scheme for parallel supercomput. ieee transact on comput, 36(12):1425-1439, dec. 1987. [12] m. k. satish and r. r. joshi. gbtk: a toolkit for grid implement of blast. 7th intern confer hpcasia, page 378-382, 2004. [13] g. shao. adapt schedul of master/worker applic on distribut comput resourc. phd thesi, univ. california at san diego, 2001. [14] t. smith and m. waterman. identif of common molecular subsequ. j. mol. biol., 147:195-197, 1981. [15] p. tang and p. c. yew. processor self-schedul for multipl nest parallel loop. in int. conf. on parallel process (icpp), page 528-535, 1986. [16] t. h. tzen and l. m. ni. trapezoid self-schedul: a practic scheme for parallel compil. ieee transact on parallel and distribut system, 4(1):87-98, jan. 1993. 160 