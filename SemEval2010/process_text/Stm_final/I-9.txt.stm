tempor linear logic as a basi for flexibl agent interact duc q. pham, jame harland school of cs&it rmit univers gpo box 2476v melbourn, 3001, australia {qupham,jah}@cs.rmit.edu.au abstract interact between agent in an open system such as the internet requir a signific degre of flexibl. a crucial aspect of the develop of such method is the notion of commit, which provid a mechan for  coordin interact behavior among agent. in thi paper, we investig an approach to model commit with tight integr with protocol action. thi mean that there is no need to have an explicit map from protocol  action to oper on commit and an extern  mechan to process and enforc commit. we show how agent can reason about commit and protocol action to achiev the end result of protocol us a reason  system base on tempor linear logic, which incorpor both tempor and resourc-sensit reason. we also discuss the applic of thi framework to scenario such as onlin commerc. categori and subject descriptor i.2.11 [distribut artifici intellig]: intellig agent; d.3.2 [program languag]: languag  classif gener term theori, design 1. introduct and motiv recent, softwar develop ha evolv toward the develop of intellig, interconnect system work in a distribut manner. the agent paradigm ha becom well suit as a design metaphor to deal with complex  system compris mani compon each have their own thread of control and purpos and involv in dynam and complex interact. in multi-agent environ, agent often need to interact with each other to fulfil their goal. protocol ar us to regul interact. in tradit approach to protocol specif, like those us finit state machin or petri net, protocol ar often predetermin legal sequenc of interact behavior. in frequent chang environ such as the internet, such fix sequenc can quickli  becom outdat and ar prone to failur. therefor, agent ar requir to adapt their interact behavior to succe and interact among agent should not be construct rigidli. to achiev flexibl, as character by yolum and singh in [11], interact protocol should ensur that agent have autonomi over their interact behavior, and be free from ani unnecessari constraint. also, agent should be allow to adjust their interact action to take advantag of  opportun or handl except that aris dure  interact. for exampl, consid the scenario below for onlin sale. a merchant mer ha 200 cricket bat avail for sale with a unit price of 10 dollar. a custom cu ha $50. cu ha a goal of obtain from mer a cricket bat at some time. there ar two option for cu to pai. if cu us credit payment, mer need a bank ebank to check cu"s credit. if cu"s credit is approv, ebank will arrang the credit  payment. otherwis, cu mai then take the option to pai via paypal. the interact end when good ar deliv and payment is arrang. a flexibl approach to thi exampl should includ sever featur. firstli, the payment method us by cu should be at cu"s own choic and have the properti that if cu"s credit check result in a disapprov, thi except should also be handl automat by cu"s switch to paypal. secondli, there should be no unnecessari constraint on the order in which action ar perform, such as which of  make payment and send the cricket bat should come first. thirdli, choos a sequenc of interact action should be base on reason about the intrins mean of  protocol action, which ar base on the notion of commit, i.e. which refer to a strong promis to other agent(s) to undertak some cours of action. current approach [11, 12, 10, 1] to achiev flexibl us the notion of commit make us of an abstract layer of commit. howev, in these approach, a  map from protocol action onto oper on commit 124 978-81-904262-7-5 (rp) c 2007 ifaama as well as handl and enforc mechan of  commit must be extern provid. execut of protocol action also requir concurr execut of oper on relat commit. as a result, the overhead of  process the commit layer make specif and execut of protocol more complic and error prone. there is also a lack of a logic to natur express aspect of resourc,  intern and extern choic as well as time of protocol. rather than creat anoth layer of commit outsid protocol action, we try to achiev a model of  commit that is integr with protocol action. both  commit and protocol action can then be reason about in on consist system. in order to achiev that, we specifi protocol in a declar manner, i.e. what is to be achiev rather then how agent should interact. a kei to thi is us logic. tempor logic, in particular, is suitabl for  describ and reason about tempor constraint while linear logic [3] is quit suitabl for model resourc. we suggest us a combin of linear logic and tempor logic to construct a commit base interact framework which allow both tempor and resourc-relat reason for  interact protocol. thi provid a natur manipul and reason mechan as well as intern enforc mechan for commit base on proof search. thi paper is organ as follow. section 2 discuss the background materi of linear logic, tempor linear logic and commit. section 3 introduc our model  framework and specif of protocol. section 4 discuss how our framework can be us for an exampl of onlin sale interact between a merchant, a bank and a custom. we then discuss the advantag and limit of us our framework to model interact protocol and achiev  flexibl in section 5. section 6 present our conclus and item of further work. 2. background in order to increas the agent" autonomi over their  interact behavior, protocol should be specifi in term of what is to be achiev rather than how the agent should act. in other word, protocol should be specifi in a declar manner. us logic is central to thi specif process. 2.1 linear logic logic ha been us as formal to model and reason about agent system. linear logic [3] is well-known for  model resourc as well as updat process. it ha been consid in agent system to support agent negoti and plan by mean of proof search [5, 8]. in real life, resourc ar consum and new resourc ar creat. in such logic as classic or tempor logic, howev, a direct map of resourc onto formula is troublesom. if we model resourc like a as on dollar and b as a chocol bar, then a ⇒ b in classic logic is read as from on dollar we can get a chocol bar. thi caus problem as the implic allow to get a chocol bar (b is true) while retain on dollar (a remain true). in order to resolv such resourc - formula map issu, girard propos the constraint on which formula will be us exactli onc and can no longer be freeli ad or  remov in deriv and henc treat linear logic formula as resourc. in linear logic, a linear implic a b, howev, allow a to be remov after deriv b, which mean the dollar is gone after us on dollar to bui a chocol bar. classic conjunct (and) and disjunct (or) ar recast over differ us of context - multipl as combin and addit as share to come up with four connect. a ⊗ (multipl conjunct) a, mean that on ha two as at the same time, which is differ from a ∧ a = a. henc, ⊗ allow a natur express of proport. a ℘ (multipl disjunct) b, mean that if not a then b or vice versa but not both a and b. the abil to specifi choic via the addit connect is a particularli us featur of linear logic. a (addit conjunct) b, stand for on own choic, either of a or b but not both. a ⊕ (addit disjunct) b, stand for the possibl of either a or b, but we don"t know which. as remark in [5], and ⊕ allow choic to be made clear between intern choic (on"s own), and extern choic (other" choic). for instanc, to specifi that the choic of place a or b for good" deliveri is our as the supplier, we us a b, or is the client"s, we us a ⊕ b. in agent system, thi dualiti between inner and outer choic is manifest by on agent have the power to choos between altern and the other have to react to whatev choic is made. moreov, dure interact, the abil to match  consumpt and suppli of resourc among agent can  simplifi the specif of resourc alloc. linear logic is a natur mechan to provid thi abil [5]. in addit, it is emphas in [8] that linear logic is us to model agent state as set of consum resourc and particularli,  linear implic is us to model transit among state and capabl of agent. 2.2 tempor linear logic while linear logic provid advantag to model and reason about resourc, it doe not deal natur with time constraint. tempor logic, on the other hand, is a formal system which address the descript and reason about the chang of truth valu of logic express over time [2]. tempor logic can be us for specif and verif of concurr and reactiv program [2]. tempor linear logic (tll) [6] is the result of  introduc tempor logic into linear logic and henc is  resourceconsci as well as deal with time. the tempor  oper us ar (next), (anytim), and (sometim) [6]. formula with no tempor oper can be consid as be avail onli at present. ad to a formula a, i.e. a, mean that a can be us onli at the next time and exactli onc. similarli, a mean that a can be us at ani time and exactli onc. a mean that a can be us onc at some time. though both and refer to a point in time, the choic of which time is differ. regard , the choic is an intern choic, as appropri to on"s own capabl. with , the choic is extern decid by other. 2.3 commit the concept of social commit ha been recogn as fundament to agent interact. inde, social  commit provid intrins mean of protocol action and state [11]. in particular, persist in commit  introduc into agent" consider a certain level of  predict of other agent" action, which is import when agent deal with issu of inter-depend, global constraint or the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 125 resourc share [7]. commit base approach associ protocol action with oper on commit and protocol state with the set of effect commit [11]. complet the  protocol is done via mean-end reason on commit  oper to bring the current state to final state where all  commit ar resolv. from then, the correspond legal sequenc of interact action ar determin. henc, the approach systemat enhanc a varieti of legal  comput [11]. commit can be reduc to a more fundament form known as pre-commit. a pre-commit here refer to a potenti commit that specifi what the owner agent is will to commit [4], like perform some action or achiev a particular state. agent can negoti about pre-commit by send propos of them to other. the other can respond by agre or disagre with the propos or propos anoth pre-commit. onc a  precommit is agre, it then becom a commit and the process move from negoti phase to commit phase, in which the agent act to fulfil their commit. 3. model agent interact protocol ar normal view extern to agent and ar essenti a set of commit extern impos on  particip agent. we take an intern view of protocol, i.e. from the view of particip agent by put the specif of commit local at the respect agent accord to their role. such an approach enabl agent to manag their own protocol commit. inde, agent no longer accept and follow a given set of commit but can reason about which commit of their to offer and which  commit of other to take, while consid the current need and the environ. protocol aris as commit ar then link togeth via agent" reason base on proof search dure the interact. also, ongo chang in the environ ar taken as input into the gener of  protocol by agent reason. thi is the revers of other  approach which try to make the specif flexibl to  accommod chang in the environ. henc, it is a step closer to enabl emerg protocol, which make  protocol more dynam and flexibl to the context. in a nutshel, servic ar what agent ar capabl of  provid to other agent. commit can then be seen to aris from combin of servic, i.e. an agent"s  capabilia unit of consum resourc is model as a  proposit in linear logic. numer figur can be us to  abbrevi a multipl conjunct of the same instanc. for exampl, 2 dollar = dollar ⊗ dollar. moreov, such 3 a is a shorthand for a. in order to address the dynam manipul of resourc, we also includ inform about the locat and  ownership in the encod of resourc to address the reloc and chang in possess of resourc dure agent  interact. that resourc a is locat at agent α and own by agent β is express via a shorthand notat as a@αβ , which is treat as a logic proposit in our framework. thi notat can be later extend to a more complex logic construct to reason about chang in locat and  ownership. in our run exampl, a cricket bat cricket b be  locat at and own by agent mer is denot as cricket b@m .m after a success sale to the agent custom cu, the cricket bat will be reloc to and own by agent cu. the  formula cricket b@cc will replac the formula cricket b@mm to reflect the chang. our treatment of unlimit resourc is to model it as a number σ of copi of the resourc"s formula such that the number σ is chosen to be extrem larg, rel to the context. for instanc, to indic that the merchant mer can issu an unlimit number of sale quot at ani time, we us σ sale quot@m .m declar of action is also model in a similar manner as of resourc. the capabl of agent refer to produc, consum, reloc and chang ownership of resourc. capabl ar repres by describ the state befor and after  perform them. the gener represent form is Γ Δ, in which Γ describ the condit befor and Δ describ the condit after. the linear implic in linear logic  inde ensur that the condit befor will be transform into the condit after. moreov, some capabl can be appli at ani number of time in the interact context and their formula ar also preced by the number σ. to take an exampl, we consid the capabl of agent mer of sell a cricket bat for 10 dollar. the condit befor ar 10 dollar and a payment method from agent cu: 10$@cc ⊗ pai m@c . given these, by appli thec capabl, mer will gain 10 dollar (10$@mm ) and  com⊥ ) so that cusm mit to provid a cricket bat (cricket b@m will get a cricket bat (cricket b@cc ). togeth, the  capabl is encod as 10$@c ⊗ pai m@c 10$@mc c ⊗ cricket b@c m ⊗ ti. henc, our approach shift specifi a set of protocol commit to specifi set of pre-commit as  capabl for each agent. commit ar then can be ⊥ m cricket b@m .c 3.2 model commitmentsreason about and manipul by the same logic  mechan as is us for the agent" action, resourc and goal, which greatli simplifi the system. our framework us tll as a mean of specifi  interact protocol. we encod variou concept such as resourc, capabl and commit in tll. the symmetri between a formula and it negat in tll is explor as a wai to model resourc and commit. we then discuss the  central role of pre-commit, and how thei ar specifi at each particip agent. it then remain for agent to  reason about pre-commit to form protocol commit, we discuss the model of variou type of commit, their fulfil and enforc mechan. due to dualiti in linear logic, posit formula can be regard as formula in suppli and neg formula can be regard as formula in demand. henc, we take an  approach of model non-condit or base commit as neg formula. in particular, by turn a formula into it neg form, a base commit to deriv the resourc or carri out the action associ with the formula is  creat. in the abov exampl, a commit of agent mer to ⊥ m .which ar subsequ discharg. provid a cricket bat (cricket b@mm ) is cricket b@m a base commit is fulfil (discharg) whenev the 3.1 model resourc and capabl commit agent successfulli bring about the respect 126 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) resourc or carri out the action as requir by the  commit. in tll model, thi mean that the  correspond posit formula is deriv. resolut of  commit can then be natur carri out by infer in tll. for exampl, cricket b@m will fulfil the commit-m ment cricket b@m⊥ and both formula ar automaticallym remov as cricket b@mm ⊗ cricket b@m⊥ .m ⊥ under a further assumpt that agent ar expect to resolv all formula in demand (remov neg  formula), thi creat a drive pressur on agent to resolv base commit. thi pressur then becom a natur and  intern enforc mechan for base commit. a commit with condit (or condit  commit) can be model by connect the condit to base commit via a linear implic. a gener form is Γ Δ where Γ is the condit part and Δ includ base commit. if the condit Γ is deriv, by consum Γ, the linear implic will ensur that Δ result, which mean the base commit in Δ becom effect. if the condit can not be achiev, the linear implic can not be appli and henc commit part in the  condit commit is still inact. in our approach, condit commit ar specifi in their potenti form as pre-commit of particip agent. pre-commit ar negoti among agent via propos and upon be accept, will form condit commit among the engag agent. condit  commit ar interpret as that the condit Γ is requir of the propos agent and the commit part Δ is the respons of the owner (propos) agent. inde, such interpret and the encod of realiz the notion of a condit commit that owner agent is will to commit to deriv Δ given the propos agent satisfi the condit Γ. condit commit, pre-commit and  capabl all have similar encod. howev, their differ lie in the phase of commit that thei ar in. capabl ar us intern by the owner agent and do not involv ani commit. pre-commit can be regard as capabl intend for form condit commit. upon be accept, pre-commit will turn into  condit commit and bring the two engag agent into a commit phase. as an exampl, consid that mer ha a capabl of sell cricket bat: (10$@cc ⊗pai m@cc ) (10$@m ⊗ cricket b@m⊥ ⊗ cricket b@cc ). when merm m propos it capabl to cu, the capabl act as a  precommit. when the propos get accept, that  precommit will turn into a condit commit in which mer commit to fulfil the base commit cricket b@m⊥ (which lead to have cricket b@cc ) uponm the condit that cu deriv 10$@cc ⊗pai m@c (whichc lead to have 10$@mm ). breakabl commit which ar in place to provid agent with the desir flexibl to remov itself from it  commit (cancel commit) ar also model natur in our framework. a base commit com⊥ is turn into a breakabl base commit (cond ⊕ com)⊥ . the extra token cond reflect the agent"s intern deliber about when the commit to deriv com is broken. onc cond is produc, due to the logic deduct cond ⊗ (cond ⊕ com)⊥ ⊥, the commit (cond ⊕ com)⊥ is remov, and henc break the commit of deriv com.  moreov, a breakabl condit commit is model as a (1 b), instead of a b. when the condit a is provid, the linear implic bring about (1 b) and it is now up to the owner agent"s intern choic whether 1 or b is result. if the agent choos 1, which practic mean noth is deriv, then the condit commit is deliber broken. 3.3 protocol construct given the model of variou interact concept like  resourc, action, capabl, and commit, we will discuss how protocol can be specifi. in our framework, each agent is encod with the  resourc, action, capabl, pre-commit, ani  pend commit that it ha. pre-commit, which stem from servic the agent ar capabl of provid, ar  design to be fair exchang. in a pre-commit, all the requir of the other parti ar put in the condit part and all the effect to be provid by the owner agent ar put on the commit part to make up a trade-off. such a  design allow agent to freeli propos pre-commit to ani interest parti. an exampl of pre-commit is that of an agent  merchant regard a sale of a cricket bat: [10$@cc ⊗pai m@c 10 $@mm ⊗ cricket b@cc ⊗cricket b@m⊥ m ]. the  condit is the requir that the custom agent provid 10 dollar, which is assum to be the price of a cricket bat, via a payment method. the exchang is the cricket bat for the custom ( cricket b@cc ) and henc is fair to the merchant. protocol ar specifi in term of set of pre-commit at particip agent. given some initi interact  commit, a protocol emerg as agent ar reason about which pre-commit to offer and accept in order to fulfil these commit. given a such a protocol specif, we then discuss how interact might take place. an interact can start with a request or a propos. when an agent can not achiev some commit by itself, it can make a request of them or  propos a relev pre-commit to an appropri agent to fulfil them. the choic of which pre-commit depend on if such pre-commit can produc the formula to fulfil the agent"s pend commit. when an agent receiv a request, it search for  precommit that can togeth produc the requir  formula of the request. those pre-commit found will be us as propos to the request agent. otherwis, a failur notic will be return. when a propos is receiv, the recipi agent also  perform a search with the inclus of the propos for a proof of those formula that can resolv it commit. if the search result is posit, the propos is accept and  becom a commit. the recipi then attempt to fulfil condit of the commit. otherwis, the propos is refus and no commit is form. throughout the interact, proof search ha plai a vital role in protocol construct. proof search reveal that some commit can not be resolv local or some pre-commit can be us to resolv pend  commit, which prompt the agent to make a request or  propos respect. proof search also determin which  precommit ar relev to fulfil of a request, which help agent to decid which pre-commit to propos to answer the request. moreov, whether a receiv propos c the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 127 is relev to ani pend commit or not is also  determin by a search for proof of these commit with an inclus of the propos. condit of propos can be resolv by proof search as it link them with the agent" current resourc and capabl as well as ani relev  precommit. therefor, it can be seen that proof search perform by particip agent can link up their  respect pre-commit and turn them into commit as appropri, which give rise to protocol format. we will demonstr thi via our run exampl in section 4. 3.4 interact messag agent interact by send messag. we address agent interact in a simpl model which contain messag of type request, propos, accept, refus and failur  notic. we denot sourc to destin: prior to each messag to indic the sourc and destin of the messag. for exampl cust to mer: denot that the messag is sent from agent cust to agent mer. request messag start with the kei word request: request + formula. formula in request messag ar of commit. propos messag ar preced with propos.  formula ar of capabl. for exampl, α to β: propos Γ Δ is a propos from agent α to agent β. there ar messag that agent us to respons to a  propos. agent can indic an accept: accept, or a refus: refus. to notic a failur in fulfil a  request or propos, agent repli with that request or propos messag append with fail. 3.5 gener interact as we have seen, tempor linear logic provid an eleg mean for encod the variou concept of agent  interact in a commit base specif framework.  appropri interact is gener as agent negoti their specifi pre-commit to fulfil their goal. the  associ among pre-commit at particip agent and the monitor of commit to ensur that all ar  discharg ar perform by proof search. in the next section, we will demonstr how specif and gener of  interact in our framework might work. 4. exampl we return to the onlin sale scenario introduc in  section 1. 4.1 specifi protocol we design a set of pre-commit and capabl to implement the abov scenario. for simplic, we refer to them as rule. rule at agent mer mer ha avail at ani time 200 cricket bat for sale and can issu sale quot at ani time: 200 cricket b@m ⊗ σ sale quot@m .m m rule 1: mer commit to offer a cricket bat (cricket b@m⊥ m ) to cu ( cricket b@cc ) if cu pai 10  dollar (10$@cc ) either via paypal or credit card. the choic is at cu. σ [10$@c ⊗ (paypal paid@m ⊕ credit paid@mm )c m 10 $@m ⊗ cricket b@c ⊗ cricket b@m⊥ m c m ] rule 2: if ebank carri out the credit payment to mer then the requir of credit payment at mer is fulfil: σ [credit paym@m credit paid@mm ]b rule 3: if ebank inform mer of it disapprov of cu"s credit then mer will also let cu know. σ [credit not appr@m credit not appr@cb ]b rule at agent ebank rule 4: upon receiv a sale quot from mer, at the next time point, ebank commit to either inform mer that cu"s credit is not approv ( credit not appr@mb ) or arrang a credit payment to mer ( credit paym@mb ). the decis is depend on the credibl of cu and henc is extern (⊕) to ebank and mer: σ [sale quot@m ( credit not appr@mb ) ⊕m credit paym@mb ] rule at agent cu cu ha an amount of 50 dollar avail at ani time, can be us for credit payment or cash payment: $50@c. cu ha a commit of obtain a cricket bat at some time: [ cricket b@cc ]⊥ . rule 5: cu will pai mer via paypal if there is an  indic from ebank that cu"s credit is not approv: σ [credit not appr@c paypal paid@mm ]b 4.2 descript of the interact cu request from mer a cricket bat at some time. mer repli with a propos in which each cricket bat cost 10 dollar. cu need to prepar 10 dollar and payment can be made by credit or via paypal. assum that cu onli pai via paypal if credit payment fail, cu will let mer charg by credit. mer will then ask ebank to arrang a credit payment. ebank propos that mer give a quot of sale and depend on cu"s  credibl, at the next time point, either credit payment will be arrang or a disapprov of cu"s credit will be inform. mer accept and fulfil the condit. if the first case  happen, credit payment is done. if the second case happen, credit payment is fail, cu mai back track to take the option pai via paypal. onc payment is arrang, mer will appli it origin  propos to satisfi the cu"s request of a cricket bat and henc remov on cricket bat and ad 10 dollar into it set of resourc. 4.3 interact 1. cu can not fulfil it commit of [ (cricket b@cc )]⊥ and henc, make a request to merchant: c to m: request [ cricket b@cc ]⊥ 2. to meet the request, mer search for applic rule. on applic of rule 1 can deriv cricket b@c and cricket b@c cricket b@c . mer will propos rule 1c c at a time instanc n1 to cu as a pre-commit. m to c: propos n1 [10$@c ⊗ (paypal paid@m ⊕ credit paid@mm )c m 10 $@m ⊗ cricket b@c ⊗ cricket b@m⊥ m ]m c with similar analysi, cu determin that given the  conc 128 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) dition can be satisfi, the propos can help to deriv it request. henc, c to m: accept cu analyz the condit of the accept propos by proof search. n110$@cc ; n1paypal paid@m or n1credit paid@mm ; -(*)-m n110$@c ⊗ ( n1paypal paid@m ⊕ n1credit paid@mm )c m n1(10$@c ⊗ (paypal paid@m ⊕ credit paid@mm ))c m from (*), on wai to satisfi the condit is for cu to  deriv, at the next n1 time point, 10 dollar ( n1 10$@cc ); and to choos pai via paypal ( n1 paypal paid@mm ) or by credit payment ( n1 credit paid@mm ). 3. deriv n1 10$@c : as cu ha 50 dollar, it canc make us of 10 dollar: 10 $@c 10$@c n1 10$@c .c c c there ar two option for payment method, the choic is at agent cu. we assum that cu prefer credit payment. 4. deriv n1 credit paid@m : cu can not derivem thi formula by itself, henc, it will make a request to mer: c to m: request [ n1 credit paid@mm ]⊥ . 5. rule 2 at mer is applic but mer can not deriv it condit ( n1 credit paym@mb ). henc, mer will further make a request to ebank. m to e: request [ n1 credit paym@mb ]⊥ ebank search and find rule 4 applic. becaus credit paym@m will be avail on time point after theb rule"s applic time, ebank propos to mer an instanc of rule 4 at the next n1-1 time point. 6. b to m: propos n1−1 [quot@mm ( credit not appr@m ⊕ credit paym@mb )]b with similar analysi, mer accept the propos. m to b: accept the rule condit is fulfil by mer as quot@mm n1−1 quot@m . henc, ebank then appli the proposalm to deriv: n1−1 ( credit not appr@m ⊕ credit paym@mb ).b ⊕ indic the choic is extern to both agent. there ar two case, cu"s credit is approv or disapprov. for simplic, we show onli the case where cu"s credit is approv. at the next (n1-1) time point, n1−1 ( credit not appr@mb ⊕ credit paym@mb )  becom n1−1 credit paym@m n1 credit paym@m .b b as a result, at the next n1 time point, ebank will arrang the credit payment. 7. mer fulfil cu"s initi request. when ani of n1 paypal paid@m (if cu pai via pai-m pal) or n1 credit paid@m (if cu pai by credit card)m is deriv, n1 (credit paym@m ⊕ paypal paid@mm ) ism also deriv, henc the payment method is arrang. togeth with the other condit 10$@c be satisfi,c thi allow the initi propos to be appli by mer to deriv n1 cricket b@cc and a commit of n1 cricket b@m⊥ m for mer, which is also resolv by the resourc cricket b@mm avail at mer. ani valu of n1 such that n1 − 1 ≥ 0 ⇔ n1 ≥ 1 will allow mer to fulfil cu"s initi request of [ cricket b@cc ]⊥ . the interact end as all commit ar resolv. 4.4 flexibl the desir flexibl ha been achiev in the exampl. it is cu"s own decis to proce with the prefer  payment method. also, non-determin that whether cu"s credit is disapprov or credit payment is made to mer is faithfulli repres. if an except happen that cu"s credit is not approv, credit not appr@c is produc andb cu can backtrack to pai via paypal. rule 5 will then be util to allow cu to handl the except by pai via paypal. moreov, in order to specifi that make payment and send cricket bat can be in ani order, we can add in front of payment method in rule 1 as follow: σ [10$@c ⊗ (paypal paid@m ⊕ credit paid@mm )c m 10 $@m ⊗ cricket b@c ⊗ cricket b@m⊥ m ].m c thi addit in the condit of the rule mean that the time of payment can be ani time up to cu"s choic, as long as cu pai and henc, the time order between make payment and send good becom flexibl. 5. encod issu 5.1 advantag of tll framework our tll framework ha demonstr natur and  express specif of agent interact protocol. linear implic ( ) express causal relationship, which make it natur to model a remov or a consumpt, especi of resourc, togeth with it consequ. henc, in our framework, resourc transform is model as a linear implic of the consum resourc to the produc  resourc. resourc reloc is model as a linear  implic from a resourc at on agent to that resourc at the other agent. linear implic also ensur that fulfil of the condit of a condit commit will caus the commit to happen. moreov, state updat of agent ar result from a linear implic from the old state to the current state. tempor oper ( , and ) and their combin help to specifi the time of action, of resourc avail and express the time order of event. particularli, precis time point ar describ by the us of oper or  multipl copi of it. base on thi abil to specifi correct time point for action or event, time order or sequenc of them can also be captur. also, a sens of durat is simul by spread copi of the resourc or action" formula across multipl adjac time point. moreov, uncertainti in time can repres and reason about by the us of and and their combin with . can be us to express outer non-determin while express inner non-determin. these time properti of resourc, action and event ar correctli respect through out the agent reason process base on sequent calculu rule. furthermor, the central of the notion of commit in agent interact ha been recogn in mani framework [11, 12, 1, 10, 4]. howev, to the best of our knowledg, model commit directli at the proposit level of such a resourc consciou and time awar logic as tll is the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 129 firstli investig in our framework. our framework  model base commit as neg formula and condit commit via the us of linear implic and/or  neg formula. the model of commit ha a number of advantag: • commit ar repres directli at the  proposit logic level or via a logic connect rather than a non-logic construct like [11], which make treatment of commit more natur and simpl and allow to make us of readili avail proof search system like us sequent calculu for handl commit.  exist logic connect like ⊗, , ⊕, ar also readili avail for describ the relationship among  commit. • fulfil of commit then becom deriv the correspond posit formula or condit  formula, which then simpli reduc to a proof search task. also, given the requir formula, fulfil of  commit can be implement easili and  automat as deduct (com ⊗ com⊥ ⊥). the enforc of commit is also intern and• simpli implement via the assumpt that agent ar driven to remov all neg formula for base commit and via the us of linear implic for condit commit. regard make protocol specif more flexibl, our approach ha mark a number of signific point. firstli, flexibl of protocol specif in our  framework come from the express power of the connect of tll. and ⊕ refer to intern and extern choic of agent on resourc and action while and refer to  intern choic and extern choic in time domain. given that flexibl includ the abil to make a sensibl choic, have the choic express explicitli in the specif of interact protocol provid agent with an opportun to reason about the right choic dure interact and henc explor the flexibl in them. secondli, instead of be sequenc of interact action, protocol ar structur on commit, which ar more abstract than protocol action. execut of protocol is then base on fulfil commit. henc, unnecessari constraint on which particular interact action to  execut by which agent and on the order among them ar now remov, which is a step forward to flexibl as  compar to tradit approach. on the other hand, in the presenc of chang introduc extern, agent have the freedom to explor new set of interact action or skip some interact action ahead as long as thei still fulfil the protocol"s commit. thi bring more flexibl to the overal level of agent" interact behavior, and thu the protocol. thirdli, the protocol is specifi in a declar manner essenti as set of pre-commit at each  particip agent. to achiev goal, agent us reason base on tll sequent calculu to construct proof of goal from pre-commit and state formula. thi essenti give agent an autonomi in util of pre-commit and henc agent can adapt the wai thei us these to flexibl deal with chang environ. in particular, as proof construct by agent select a  sequenc of pre-commit for interact, be abl to  select from all the possibl combin of pre-commit in proof search give more chanc and flexibl than  select from onli a few fix and predefin sequenc. it is then also more like to allow agent to handl except or explor opportun that aris. moreov, as the actual order of pre-commit is determin by the proof  construct process rather than predefin, agent can flexibl chang the order to suit new situat. fourthli, chang in the environ can be regard as remov or ad formula onto the state formula.  becaus the proof construct by agent take into account the current state formula when it pick up pre-commit, chang in the state formula will be reflect in the choic of which relev pre-commit to proce. henc, the agent have the flexibl in decid what to do to deal with chang. lastli, specifi protocol in our framework ha a  modular approach which add eas and flexibl to the design process of protocol. protocol ar specifi by place a set of pre-commit at each particip agent accord to their role. each pre-commit can inde be specifi as a process in it own with condit formula as it input and commit part"s formula as it output. execut of each condit commit is a rel independ thread and thei ar link togeth by the proof search to fulfil agent" commit. as a result, with such a design of pre-commit, on pre-commit can be ad or remov without interf the other and henc, achiev a modular design of the protocol. 5.2 limit of tll framework on  model as all the tempor oper in tll refer to concret time point, we can not express durat in time faithfulli. on major disadvantag of simul a durat of an event by spread copi of that event over adjac time point a⊗ 10 continu (like a⊗ 2 . . . a) is that it requir the time rang to be provid explicitli. henc, such notion like until can not be natur express in tll. commit of agent can be in conflict, especi when resolv all of them requir more resourc or action than what agent have. our work ha not cover handl  commit that ar in conflict. anoth troublesom aspect of thi approach is that the rule for interact requir some detail knowledg of the formula of tempor linear logic. clearli it would be  benefici to have a visual-base tool similar to uml diagram which would allow non-expert to specifi the appropri rule without have to learn the detail of the formula themselv. 6. conclus and further work thi paper us tll for specifi interact protocol. in particular, tll is us to model the concept of resourc, capabl, pre-commit and commit with tight  integr as well as their manipul with respect to time. agent then make us of proof search techniqu to perform the desir interact. in particular, the approach allow protocol specif to captur the mean of interact action via  commit, to captur the intern choic and extern choic of agent about resourc, commit and about time as well as updat process. the proof construct mechan 130 the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) provid agent with the abil to dynam select  appropri pre-commit, and henc, help agent to gain the flexibl in choos the interact action that ar most suitabl and the flexibl in the order of them, take into consider on-go chang in the environ. mani other approach to model protocol also us the commit concept to bring more mean into agent"  interact action. approach base on commit  machin [11, 12, 10, 1] endur a number of issu. these approach us logic system that ar limit in their  express to model resourc. also, as an extra abstract layer of commit is creat, more task ar creat  accordingli. in particular, there must be a human-design map between protocol action and oper on  commit as well as between control variabl (fluent) and phase of commit achiev. moreov, extern  mechan must be in place to comprehend and handl  oper and resolut of commit as well as enforc of the notion of commit on it abstract data type  represent. thi requir anoth execut in the  commit layer in conjunct with the actual execut of the protocol. not onli these extra task creat an overhead but also make the specif and execut of protocol more error prone. similar work in [8] and [9] explor the advantag of  linear logic and tll respect by us partial deduct techniqu to help agent to figur out the miss  capabl or resourc and base on that, to negoti with other agent about cooper strategi. our approach differ in bring the concept of commit into the model of interact, and provid a more natur and detail map for specifi interact, especi about choic, time and updat us the full proposit tll. moreov, we  emphas on the us of pre-commit as interact rule with a full set of tll infer rule to provid the  advantag of proof construct in achiev flexibl interact. our further work will includ us tll to verifi  variou properti of interact protocol such as live and safeti. also, we will investig develop an execut mechan for such tll specif in our framework. acknowledg we ar veri thank to michael winikoff for mani  stimul and help discuss of thi materi. we also would like to acknowledg the support of the australian research council under grant dp0663147. 7. refer [1] a. k. chopra and m. p. singh. contextu commit protocol. in aama "06: proceed of the fifth intern joint confer on autonom agent and multiag system, page 1345-1352, new york, ny, usa, 2006. acm press. [2] e. a. emerson. tempor and modal logic. handbook of theoret comput scienc, b, chapter 16:995-1072, 1990. [3] j.-y. girard. linear logic. theoret comput scienc, 50:1-102, 1987. [4] a. haddadi. commun and cooper in agent system: a pragmat theori. springer-verlag, berlin heidelberg, 1995. [5] j. harland and m. winikoff. agent negoti as proof search in linear logic. in aama "02: proceed of the first intern joint confer on autonom agent and multiag system, page 938-939, new york, ny, usa, 2002. acm press. [6] t. hirai. tempor linear logic and it applic. phd thesi, graduat school of scienc and technolog, kobe univers, 2000. [7] n. r. jen. commit and convent: the foundat of coordin in multi-agent system. the knowledg engin review, 8(3):223-250, 1993. [8] p. k¨unga. linear logic, partial deduct and cooper problem solv. in j. a. leit, a. omicini, l. sterl, and p. torroni, editor, declar agent languag and technolog, first intern workshop, dalt 2003. melbourn, victoria, juli 15th, 2003. workshop note, page 97-112, 2003. [9] p. k¨unga. tempor linear logic for symbol agent negoti. lectur note in artifici intellig, 3157:23-32, 2004. [10] m. venkatraman and m. p. singh. verifi complianc with commit protocol. autonom agent and multi-agent system, 2(3):217-236, 1999. [11] p. yolum and m. p. singh. commit machin. in proceed of the 8th intern workshop on agent theori, architectur, and languag (atal-01), page 235-247. springer-verlag, 2002. [12] p. yolum and m. p. singh. flexibl protocol specif and execut: appli event calculu plan us commit. in aama "02: proceed of the first intern joint confer on autonom agent and multiag system, page 527-534, new york, ny, usa, 2002. acm press. appendix a. tempor sequent rule for tll a, Γ Δ !Γ, Δ a, Λ, ?Σ a, Γ Δ l !Γ, Δ a, Λ, ?Σ r !Γ, Δ, a Λ, ?Σ Γ a.Δ !Γ, Δ, a Λ, ?Σ l Γ a, Δ r !Γ, Δ, Ξ a, Φ, Λ, ?Π !Γ, Δ, Ξ a, Φ, Λ, ?Π !Γ, Δ, Ξ, a Φ, Λ, ?Π !Γ, Δ, Ξ, a Φ, Λ, ?Π !Γ, Δ, Ξ Φ, Λ, ?Π !Γ, Δ, Ξ Φ, Λ, ?Π → the sixth intl. joint conf. on autonom agent and multi-agent system (aama 07) 131 