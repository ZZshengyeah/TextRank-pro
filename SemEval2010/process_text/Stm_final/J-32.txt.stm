nash equilibria in graphic game on tree revisit ∗ edith elkind univers of warwick coventri, cv4 7al, u.k. lesli ann goldberg univers of warwick coventri, cv4 7al, u.k. paul goldberg univers of warwick coventri, cv4 7al, u.k. abstract graphic game have been propos as a game-theoret model of larg-scale distribut network of non-cooper agent. when the number of player is larg, and the underli graph ha low degre, thei provid a concis wai to repres the player"  payoff. it ha recent been shown that the problem of find nash equilibria in a gener degre-3 graphic game with two action per player is complet for the complex class ppad, indic that it is unlik that there is ani polynomi-time algorithm for thi problem. in thi paper, we studi the complex of graphic game with two action per player on bound-degre tree. thi set wa first consid by kearn, littman and singh, who  propos a dynam program-base algorithm that comput all nash equilibria of such game. the run time of their algorithm is exponenti, though approxim equilibria can be comput  effici. later, littman, kearn and singh propos a modif to thi algorithm that can find a singl nash equilibrium in  polynomi time. we show that thi modifi algorithm is incorrect - the output is not alwai a nash equilibrium. we then propos a new algorithm that is base on the idea of kearn et al. and comput all nash equilibria in quadrat time if the input graph is a path, and in polynomi time if it is an arbitrari graph of maximum degre 2. moreov, our algorithm can be us to comput nash equilibria of graphic game on arbitrari tree, but the run time can be exponenti, even when the tree ha bound degre. we show that thi is inevit - ani algorithm of thi type will take  exponenti time, even on bound-degre tree with pathwidth 2. it is an open question whether our algorithm run in polynomi time on graph with pathwidth 1, but we show that find a nash  equilibrium for a 2-action graphic game in which the underli graph ha maximum degre 3 and constant pathwidth is ppad-complet (so is unlik to be tractabl). categori and subject descriptor f.2 [theori of comput]: analysi of algorithm and  problem complex; j.4 [comput applic]: social and  behavior scienc-econom gener term algorithm, econom, theori 1. introduct graphic game were introduc in the paper of kearn et al. [8] and littman et al. [9] as a succinct represent of game with a larg number of player. the classic normal form (or  matrix form) represent ha a size that is exponenti in the number of player, make it unsuit for larg-scale distribut game. a graphic game associ each player with a vertex of an  underli graph g, and the payoff to that player is a function of the action chosen by himself and hi neighbour in g; if g ha low degre, thi is a concis wai to repres a game with mani player. the paper [8, 9] give a dynam-program algorithm for find nash equilibria in graphic game where there ar two  action per player and g is a tree. the first of these paper describ a gener algorithm for thi problem that can be special in two wai: as an algorithm that comput approxim to all nash equilibria in time polynomi in the input size and the  approxim qualiti, or as an exponenti-time algorithm that allow the exact comput of all nash equilibria in g. in [9], the author propos a modif to the latter algorithm that aim to find a singl nash equilibrium in polynomi time. thi doe not quit work, as we show in section 3, though it introduc a us idea. 1.1 background the gener algorithm of [8] consist of two phase which we will refer to as the upstream pass and the downstream pass; 1 the former start at the leav of the tree and end at the root, while the latter start at the root and end at the leav. it is assum that each player ha two pure strategi (action), which ar denot by 0 and 1; it follow that ani mix strategi can be repres as a singl number x ∈ [0, 1], where x is the probabl that the player select 1. dure the upstream pass, each vertex v comput the set of it potenti best respons to everi mix strategi w of it parent w ; a strategi v is a potenti best respons to w if 1 note that the terminolog upstream and downstream ar  revers in [8, 9] - our tree ar root at the top. 100 there is a nash equilibrium in the graphic game downstream of v (inclus) given that w plai w (for a more technic definit, the reader is refer to section 2). the output of thi stage can be view as a (continu) tabl t(w, v), where t(w, v) = 1 if and onli if v is a potenti best respons to w; we refer to thi tabl as the best respons polici for v . the gener algorithm doe not address the problem of repres the best respons polici; in fact, the most import differ between the two instanti of the gener algorithm describ in [8] is in their approach to thi issu. the comput is perform induct: the best respons polici for v is comput base on the best respons polici of v "s children u1, . . . , uk. by the end of the upstream pass, all children of the root have comput their best respons polici. in the begin of the downstream pass, the root select it  strategi and inform it children about it choic. it also select a  strategi for each child. a necessari and suffici condit for the  algorithm to proce is that the strategi of the root is a best respons to the strategi of it children and, for each child, the chosen  strategi is on of the pre-comput potenti best respons to the  chosen strategi of the root. the equilibrium then propag  downstream, with each vertex select it children"s action. the action of the child is chosen to be ani strategi from the pre-comput potenti best respons to the chosen strategi of the parent. to bound the run time of thi algorithm, the paper [8] show that ani best respons polici can be repres as a union of an exponenti number of rectangl; the polynomi time  approxim algorithm is obtain by combin thi represent with a polynomi-size grid. the main idea of [9] is that it is not  necessari to keep track of all rectangl in the best respons polici; rather, at each step of the upstream pass, it is possibl to select a polynomi-size subset of the correspond polici (in [9], thi subset is call a breakpoint polici), and still ensur that the  downstream pass can proce successfulli (a suffici condit for thi is that the subset of the best respons polici for v store by the  algorithm contain a continu path from w = 0 to w = 1). 1.2 our result on of the main contribut of our paper is to show that the algorithm propos by [9] is incorrect. in section 3 we describ a simpl exampl for which the algorithm of [9] output a vector of strategi that doe not constitut a nash equilibrium of the  underli game. in section 4, 5 and 6 we show how to fix the algorithm of [9] so that it alwai produc correct output. section 4 consid the case in which the underli graph is a path of length n. for thi case, we show that the number of  rectangl in each of the best respons polici is o(n2 ). thi give us an o(n3 ) algorithm for find a nash equilibrium, and for  comput a represent of all nash equilibria. (thi algorithm is a special case of the gener algorithm of [8] - we show that it run in polynomi time when the underli graph is a path.) we can improv the run time of the gener algorithm  us the idea of [9]. in particular, we give an o(n2 ) algorithm for find a nash equilibrium of a graphic game on a path of length n. instead of store best respons polici, thi algorithm store appropri-defin subset, which, follow [9], we call  breakpoint polici (modifi the definit as necessari). we obtain the follow theorem theorem 1. there is an o(n2 ) algorithm that find a nash equilibrium of a graphic game with two action per player on an n-vertex path. there is an o(n3 ) algorithm that comput a represent of all nash equilibria of such a game. in section 5 we extend the result of section 4 to gener  degre2 graph, obtain the follow theorem. theorem 2. there is a polynomi-time algorithm that find a nash equilibrium of a graphic game with two action per player on a graph with maximum degre 2. in section 6 we extend our algorithm so that it can be us to find a nash equilibrium of a graphic game on an arbitrari tree. even when the tree ha bound degre, the run time can be  exponenti. we show that thi is inevit by construct a famili of graphic game on bound-degre tree for which best respons polici of some of the vertic have exponenti size, and ani  twopass algorithm (i.e., an algorithm that is similar in spirit to that of [8]) ha to store almost all point of the best respons polici. in particular, we show the follow. theorem 3. there is an infinit famili of graphic game on bound-degre tree with pathwidth 2 such that ani two-pass  algorithm for find nash equilibria on these tree requir  exponenti time and space. it is interest to note that the tree us in the proof of theorem 3 have pathwidth 2, that is, thei ar veri close to be path. it is an open question whether our algorithm run in polynomi time for graph of pathwidth 1. thi question can be view as a  gener of a veri natur comput geometri problem - we describ it in more detail in section 8. in section 7, we give a complex-theoret intract result for the problem of find a nash equilibrium of a graphic game on a graph with small pathwidth. we prove the follow theorem. theorem 4. consid the problem of find a nash  equilibrium for a graphic game in which the underli graph ha  maximum degre 3 and pathwidth k. there is a constant k such that thi problem is ppad-complet. theorem 4 limit the extent to which we can exploit path-like properti of the underli graph, in order to find nash equilibria. to prove theorem 4, we us recent ppad-complet result for game, in particular the paper [7, 4] which show that the problem of find nash equilibria in graphic game of degre d (for d ≥ 3) is computation equival to the problem of solv r-player normal-form game (for r ≥ 4), both of which ar ppad-complet. 2. preliminari and notat we consid graphic game in which the underli graph g is an n-vertex tree. each vertex ha two action, which ar denot by 0 and 1. a mix strategi is given by a singl number x ∈ [0, 1], which denot the probabl that the player select action 1. fur the purpos of the algorithm, the tree is root arbitrarili. for conveni, we assum without loss of gener that the root ha a singl child, and that it payoff is independ of the action chosen by the child. thi can be achiev by first choos an arbitrari root of the tree, and then ad a dummi parent of thi root, give the new parent a constant payoff function. given an edg (v, w ) of the tree g, and a mix strategi w for w , let g(v,w ),w =w be the instanc obtain from g by (1) delet all node z which ar separ from v by w (i.e., all node z such that the path from z to v pass through w ), and (2) restrict the instanc so that w is requir to plai mix  strategi w. definit 1. suppos that (v, w ) is an edg of the tree, that v is a mix strategi for v and that w is a mix strategi for w . 101 we sai that v is a potenti best respons to w (denot by v ∈ pbrv (w)) if there is an equilibrium in the instanc g(v,w ),w =w in which v ha mix strategi v. we defin the best respons polici for v , given w , as b(w, v ) = {(w, v) | v ∈ pbrv (w), w ∈ [0, 1]}. typic, w is the parent of v , and thi is just refer to as the best respons polici for v . the express b(w, v )|v =v is us to denot the set b(w, v ) ∩ [0, 1]×{v}. the upstream pass of the gener algorithm of [8] comput the best respons polici for v for everi node v other than the root. with the abov assumpt about the root, the downstream pass is straightforward: let w denot the root and v denot it child. the root select ani pair (w, v) from b(w, v ). it decid to plai mix strategi w and it instruct v to plai mix strategi v. the remaind of the downward pass is recurs. when a node v is instruct by it parent to adopt mix strategi v, it doe the  follow for each child u - it find a pair (v, u) ∈ b(v, u) (with the same v valu that it wa given by it parent) and instruct u to plai u. 3. algorithm of littman et al. the algorithm of [9] is base on the follow observ: to comput a singl nash equilibrium by a two-pass algorithm, it is not necessari to construct the entir best respons polici for each vertex. as long as, at each step of the downstream pass, the  vertex under consider can select a vector of strategi for all it children so that each child"s strategi is a potenti best respons to the parent"s strategi, the algorithm succe in produc a nash equilibrium. thi can be achiev if, at the begin of the  downstream pass, we have a data structur in which each vertex v with parent w store a set ˆb(w, v ) ⊆ b(w, v ) (call a breakpoint polici) which cover everi possibl w ∈ [0, 1]. we will show later that a suffici condit for the construct of such a data structur is the invari that, at everi level of the upstream pass, ˆb(w, v ) contain a continu path from w = 0 to w = 1. in [9], it is suggest that we can select the breakpoint polici in a particular wai. name, the paper us the follow definit: definit 2. (cf. [9]) a breakpoint polici for a node v with parent w consist of an order set of w -breakpoint w0 = 0 < w1 < w2 < · · · < wt−1 < wt = 1 and an associ set of v -valu v1, . . . , vt. the interpret is that for ani w ∈ [0, 1], if wi−1 < w < wi for some index i and w plai w, then v shall plai vi; and if w = wi for some index i, then v shall plai ani valu between vi and vi+1. we sai such a breakpoint polici ha t − 1 breakpoint. the paper then claim that ani vertex v can comput it  breakpoint polici with respect to it parent w given the breakpoint  polici of it children u1, . . . , uk. the proof proce by order the children"s breakpoint (i.e., the respect valu of v) from left to right (it can be assum without loss of gener that all these breakpoint ar distinct) and consid them in turn; each such point vl ∈ {v1, . . . , vl} correspond to a fix choic of strategi for k − 1 children and an interv of admiss strategi for on child. assum for conveni that thi child is u1 and it  interv of admiss strategi at vl is [a, b]; assum also that for uj , j = 2, . . . , k, their respect breakpoint polici prescrib them to plai uj in respons to vl. let p i (u, w), i = 0, 1, be the expect payoff for v when v plai i, u1 plai u, each uj , j = 2, . . . , k, plai uj, and w plai w, and consid the set wl = {w ∈ [0, 1] | ∃u ∈ [a, b] s.t. p 0 (u, w) = p1 (u, w)}; note that for ani w ∈ wl we have vl ∈ pbrv (w). v1 v2 v3 v4 v5 v6 v7 v w figur 1: lk: trim to find breakpoint polici. the author show that for ani breakpoint vl, the set wl is either empti, a singl interv, or a union of two non-float interv (an interv is non-float if on of it endpoint is 0 or 1); moreov, the union of all set wl, l = 1, . . . , l, cover the interv [0, 1]. it follow easili that on can cover [0, 1] with at most l+2 interv, each of which is a subset of some wl. the author then claim that ani such cover can be transform into a breakpoint polici for v . name, thei sai that for ani two interv wl1 and wl2 in the cover, ani overlap between wl1 and wl2 can be arbitrarili  assign coverag by wl1 and wl2 trim accordingli (cf. [9], p. 5). thei illustr their approach in a figur, which is reproduc as figur 1 here. in the figur, the dash horizont line repres the breakpoint v1, v2, . . . , v7 and the solid interv along these breakpoint ar the set w1, w2, . . . , w7. the thick connect path is the correspond breakpoint polici. it is chosen as  follow: begin on the left, and alwai jump to the interv allow greatest progress to the right. to see why thi approach doe not work in gener, consid a path of length 4 consist of an indiffer root r, it child w , w "s child v , and v "s child u. suppos that u receiv a  payoff of 1 if it plai differ to v and 0 otherwis. thu, if v denot the mix strategi of v (i.e., v plai 1 with  probabl v), then the expect payoff that u deriv from plai 0 is given by p0 (u) = v and the expect payoff that u deriv from plai 1 is given by p1 (u) = 1 − v. suppos that v deriv no payoff from plai 1 (so p1 (v ) = 0) and that it payoff matrix for plai 0 is 1 −9 9 −1 , so if u denot the mix strategi of u and w denot the mix strategi of w , the  expect payoff that v deriv from plai 0 is given by p0 (v ) = (1 − u)(1 − w) + (1 − u)w(−9) + u(1 − w)9 + uw(−1). us the techniqu of [8] (or, altern, those of section 4), it is not hard to verifi that the best respons polici for u and v (as in definit 1) ar given by the graph in figur 2. the best respons polici for u is a breakpoint polici for u (as in definit 2) with v -breakpoint v0 = 0, v1 = 1/2 and v2 = 1 with  associ valu u1 = 1 and u2 = 0. the best respons polici for v is not a breakpoint polici (becaus of how the curv from w = 0 to w = 1 doubl back). the lk algorithm would trim to get a breakpoint polici such as the on in figur 3. note that thi breakpoint polici ˆb(w, v ) is invalid in the sens that it doe not satisfi ˆb(w, v ) ⊆ b(w, v ). 102 1 10.5 0.5 1 10.1 0.9 u v v w figur 2: best respons polici for u and v . 0.1 0.9 1 0.5 1 v w figur 3: a trim polici for v the point is that the payoff matrix of w can now be chosen to prevent the lk algorithm from find a nash equilibrium. for exampl, suppos the payoff ar given so that p0 (w ) = v and p1 (w ) = (1−v)2. the best respons polici for w is a horizont line at w = .1 (thi is the valu of w that allow v = 2/3 - see figur 2, which make p0 (w ) = p1 (w ).) in the downward pass, the chosen valu ar w = .1, then, from the trim, v = 0 and u = 1, which is not a nash equilibrium sinc w prefer action 1. the failur of the algorithm is not caus by the fact that the trim polici goe as far to the right as possibl. ani other trim would be just as bad. for exampl, suppos the  breakpoint polici for v ha v = 0 until some point w∗ < .9 and then jump to v = 1. the algorithm is then defeat by the payoff  matrix with p 0 (w ) = 2v and p1 (w ) = (1 − v) in which the best respons polici for w is a horizont line at w = .9. the  algorithm then give w = .9, v = 1, and u = 0, which is not a nash equilibrium sinc w prefer action 0. we conclud that the lk algorithm doe not alwai find a nash equilibrium. in section 4 and 6 we show how to modifi the  algorithm so that it alwai find a nash equilibrium. for the modifi algorithm, we have to extend the definit of breakpoint polici (see definit 3) so that it includ breakpoint polici such as the best respons polici for v in figur 2. unfortun, such a breakpoint polici mai be exponenti in size (see figur 7) so the correct algorithm doe not run in polynomi time on all tree. in the next section, we show that it run in polynomi time on a path. 4. find equilibria on a path in thi section, we focu on the case when the underli graph is a path, i.e., it vertex set is {v1, . . . , vn}, and it edg set is {(vj , vj+1) | j = 1, . . . , n − 1}. we show that in thi case the best respons polici for each vertex can be repres as a union of a polynomi number of rectangl, where a rectangl is defin by a pair of close interv (iv , iu ) and consist of all point in iv × iu ; it mai be the case that on or both of the interv iv and iu consist of a singl point. theorem 5. for ani j = 1, . . . , n, the set b(vj , vj−1) can be repres as a disjoint union of at most (j + 4)2 rectangl. moreov, given such represent of b(vj , vj−1), on can  comput a represent of b(vj+1, vj) in time o(j2 ). proof. for ani set a ⊆ [0, 1]2 that is repres as a union of a finit number of rectangl, we sai that a point u ∈ [0, 1] on the u-axi is a u-event point of a if u = 0 or u = 1 or a contain a rectangl of the form iv × iu and u is an endpoint of iu ; v -event point ar defin similarli. observ that for ani u ∈ [0, 1], the number of connect compon of [0, 1]×{u} ∩ a is at most the number of v -event point of a. we us induct on j to show that for each vj the statement of the theorem hold and, addition, each b(vj , vj−1) ha at most 2j + 4 event point. to simplifi the base case, we modifi the graphic game by  append a dummi vertex v0 to the begin of the path: the onli neighbour of v0 is v1, the payoff of v0 ar alwai equal to 0, and the payoff of all other vertic (includ v1) ar the same as in the origin game. for j = 0, we have b(v1, v0) = [0, 1]2 , so the statement of the theorem is trivial true. now, suppos that j > 0, set v = vj and let u = vj−1 and w = vj+1 be the vertic that preced and follow v , respect. the payoff to v ar describ by a 2×2×2 matrix p: pxyz is the payoff that v receiv when u plai x, v plai y, and w plai z, where x, y, z ∈ {0, 1}. suppos that u plai 1 with probabl u and w plai 1 with probabl w. then v "s expect payoff from plai 0 is p0 =(1−u)(1−w)p000+(1−u)wp001+u(1−w)p100+uwp101, while it expect payoff from plai 1 is p1 =(1−u)(1−w)p010+(1−u)wp011+u(1−w)p110+uwp111. if p 0 > p1 , v strictli prefer to plai 0, if p0 < p1 , v strictli prefer to plai 1, and if p0 = p1 , v is indiffer, i.e., can plai ani (mix) strategi. sinc p0 and p1 ar linear in w and u, there exist some constant a1, a0, b1, and b0 that depend on the matrix p, but not on u and w, such that p0 − p1 = w(b1u + b0) − (a1u + a0). (1) depend on the valu of a1, a0, b1, and b0, we subdivid the rest of the proof into the follow case. • b1 = 0, b0 = 0. in thi case, p0 > p1 if and onli if a1u + a0 < 0. if also a1 = 0, a0 = 0, clearli, b(w, v ) = [0, 1]2 , and the statement of the theorem is trivial true. otherwis, the vertex v is indiffer between 0 and 1 if and onli if a1 = 0 and u = −a0/a1. let v = {v | v ∈ (0, 1), −a0/a1 ∈ pbru (v)}. by the induct hypothesi, v consist of at most 2(j − 1) + 4 segment and isol point. for ani v ∈ v, we have b(w, v )|v =v = [0, 1]: no matter what w plai, as long as u is plai −a0/a1, v is content to plai v. on the other hand, for ani v ∈ (0, 1) \ v we have b(w, v )|v =v = ∅: when v plai v, u can onli respond with u = −a0/a1, in which case v can benefit from switch to on of the pure strategi. to complet the descript of b(w, v ), it remain to analyz the case v = 0 and v = 1. the vertex v prefer to plai 0 if a1 > 0 and u ≤ −a0/a1, or a1 < 0 and u ≥ −a0/a1, or 103 a1 = 0 and a0 < 0. assum for now that a1 > 0; the other two case can be treat similarli. in thi case 0 ∈ pbrv (w) for some w ∈ [0, 1] if and onli if there exist a u ∈ pbru (0) such that u ≤ −a0/a1: if no such u exist, whenev v plai 0 either u"s respons is not in pbru (0) or v can improv it payoff by plai 1. therefor, either b(w, v )|v =0 = [0, 1] or b(w, v )|v =0 = ∅. similarli, b(w, v )|v =1 is equal to either [0, 1] or ∅, depend on pbru (1). therefor, the set b(w, v ) consist of at most 2j + 4 ≤ (j + 4)2 rectangl: b(w, v ) ∩ [0, 1]×(0, 1) = [0, 1]×v contribut at most 2j + 2 rectangl, and each of the set b(w, v )|v =0 and b(w, v )|v =1 contribut at most on rectangl. similarli, it total number of event point is at most 2j + 4: the onli w -event point ar 0 and 1, each v -event point of b(w, v ) is a v -event point of b(v, u), and there ar at most 2j + 2 of them. • b1u + b0 ≡ 0, a1 = αb1, a0 = αb0 for some α ∈ r. in thi case, v is indiffer between 0 and 1 if and onli if w = α, or b1 = 0 and u = −b0/b1 = −a0/a1. similarli to the previou case, we can show that b(w, v )∩[0, 1]×(0, 1) consist of the rectangl {α}×[0, 1] and at most 2j + 2 rectangl of the form [0, 1]×iv , where each iv correspond to a connect compon of b(v, u)|u=−b0/b1 . furthermor, v prefer to plai 0 if b1u + b0 > 0 and w ≥ α or b1u + b0 < 0 and w ≤ α. therefor, if b1u∗ + b0 > 0 for some u∗ ∈ pbru (0), then b(w, v )|v =0 contain [α, +∞) ∩ [0, 1] and if b1u∗∗ + b0 < 0 for some u∗∗ ∈ pbru (0), then b(w, v )|v =0 contain [−∞, α] ∩ [0, 1]; if both u∗ and u∗∗ exist, b(w, v )|v =0 = [0, 1]. the set b(w, v )|v =1 can be describ in a similar manner. by the induct hypothesi, b(v, u) ha at most 2j + 2 event point; as at least two of these ar u-event point, it ha at most 2j v -event point. sinc each v -event point of b(w, v ) is a  vevent point of b(v, u) and b(w, v ) ha at most 3 w -event point (0, 1, and α), it total number of event point is at most 2j + 3 < 2j +4. also, similarli to the previou case it follow that b(w, v ) consist of at most 2j + 4 < (j + 4)2 rectangl. • b1u + b0 ≡ 0, α(b1u + b0) ≡ a1u + a0. in thi case, on can defin the indiffer function f(·) as f(u) = a(u) b(u) = a1u+a0 b1u+b0 , where a(u) and b(u) never turn into zero simultan. observ that whenev w = f(u) and u, w ∈ [0, 1], v is indiffer between plai 0 and 1. for ani a ⊆ [0, 1]2 , we defin a function ˆfv by ˆfv (a) = {(f(u), v) | (v, u) ∈ a}; note that ˆfv map subset of [0, 1]2 to subset of r×[0, 1]. sometim we drop the subscript v when it is clear from the context. lemma 1. for ani (w, v) ∈ [0, 1]×(0, 1) we have (w, v) ∈ b(w, v ) if and onli if there exist a u ∈ [0, 1] such that (v, u) ∈ b(v, u) and w = f(u). proof. fix an arbitrari v ∈ (0, 1). suppos that u plai some u ∈ pbru (v), w = f(u) satisfi w ∈ [0, 1], and w plai w. there exist a vector of strategi v1, . . . , vj−1 = u, vj = v such that for each vk, k < j, it strategi is a best respons to it  neighbour" strategi. sinc w = f(u), v is indiffer between  plai 0 and 1; in particular, it can plai v. therefor, if we defin vj+1 = w, the vector of strategi (v1, . . . , vj+1) will satisfi the condit in the definit of potenti best respons, i.e., we have v ∈ pbrv (w). convers, suppos v ∈ pbrv (w) for some w ∈ [0, 1], v = 0, 1. then there exist a vector of strategi v1, . . . , vj−1, vj = v, vj+1 = w such that for each vk, k ≤ j, it strategi is a best respons to it neighbour" strategi. as v = 0, 1, v is, in fact, indiffer between plai 0 and 1, which is onli possibl if w = f(vj−1). choos u = vj−1; by construct, u ∈ pbru (v). lemma 1 describ the situat when v is indiffer between plai 0 and plai 1. howev, to fulli character b(w, v ), we also need to know when v prefer a pure strategi. defin ˆf(0) = ∪u∈pbru (0)ru, where ru = ´ [f(u), +∞)×{0} if b(u) > 0, (−∞, f(u)]×{0} if b(u) < 0. and ˆf(1) = ∪u∈pbru (1)ru, where ru = ´ [f(u), +∞)×{1} if b(u) < 0, (−∞, f(u)]×{1} if b(u) > 0. lemma 2. for ani w ∈ [0, 1], we have (w, 0) ∈ ˆf(0) if and onli if 0 ∈ pbrv (w) and (w, 1) ∈ ˆf(1) if and onli if 1 ∈ pbrv (w). proof. consid an arbitrari u0 ∈ pbru (0). if b(u0) > 0, for u = u0 the inequ p0 ≥ p1 is equival to w ≥ f(u0). therefor, when u plai u0 and w plai w, w ≥ f(u0), v prefer to plai 0; as u0 ∈ pbru (u), it follow that 0 ∈ pbrv (w). the argument for the case b(u0) < 0 is similar. convers, if 0 ∈ pbrv (w) for some w ∈ [0, 1], there  exist a vector (v1, . . . , vj−1, vj = 0, vj+1 = w) such that for each vk, k ≤ j, vk plai vk, and thi strategi is a best respons to the strategi of vk"s neighbour. note that for ani such  vector we have vj−1 ∈ pbru (0). by wai of contradict, assum (w, 0) ∈ Ë u∈pbru (0) ru. then it must be the case that for ani u0 ∈ pbru (0) either f(u0) < w and ru0 = (−∞, f(u0)]×{0} or f(u0) > w and ru0 = [f(u0), +∞)×{0}. in both case, when v plai 0, u plai u0, and v plai w, the inequ between f(u0) and w is equival to p0 < p1 , i.e., v would benefit from switch to 1. the argument for ˆf(1) is similar. togeth, lemma 1 and lemma 2 complet describ the set b(w, v ): we have b(w, v ) = ˆf(0) ∪ ˆf(b(v, u)) ∪ ˆf(1) [0, 1]2 . it remain to show that b(w, v ) can be repres as a union of at most (j + 4)2 rectangl, ha at most 2j + 4 event point, and can be comput in o(j2 ) time. set u∗ = −b0/b1. 2 consid an arbitrari rectangl r = [v1, v2]×[u1, u2] ⊆ b(v, u). if u∗ ∈ [u1, u2], the function f(·) is continu on [u1, u2] and henc ˆf(r) = [fmin, fmax]×[v1, v2], where fmin = min{f(u1), f(u2)}, fmax = max{f(u1), f(u2)}, i.e., in thi case ˆf(r) ∩ [0, 1]2 consist of a singl rectangl. now, suppos that r is intersect by the line [0, 1]×{u∗ }; as wa note earlier, there ar at most 2j+2 such rectangl. suppos that limu→u∗− f(u) = +∞; as f(·) is a fraction linear function, thi impli that limu→u∗+ f(u) = −∞ and also f(u1) > f(u2). sinc f(·) is continu on [u1, u∗ ) and (u∗ , u2], it is easi to see that ˆf([v1, v2]×[u1, u∗ )) = [f(u1), +∞)×[v1, v2] 2 the case b1 = 0 caus no special problem. for complet, set u∗ to be ani valu outsid of [0, 1] in thi case. 104 v u v u* 1 f(0) f(a)f(b) f(1) a b (0, 0) w v 2 v (0, 0) 1 1 1 v 2 v 1 1 figur 4: f is increas on (−∞, u∗ ) and (u∗ , +∞). and ˆf([v1, v2]×(u∗ , u2]) = (−∞, f(u2)]×[v1, v2], i.e., in thi case ˆf(r) ∩ [0, 1]2 consist of at most two rectangl. the case limu→u∗− f(u) = −∞ is similar. as ˆf(b(v, u)) = Ë r⊂b(v,u) ˆf(r), it follow that ˆf(b(v, u)) consist of at most (j + 3)2 + 2j + 2 rectangl. also, it is easi to see that both ˆf(0) and ˆf(1) consist of at most 2 line segment each. we conclud that b(w, v ) can be repres as a union of at most (j + 3)2 + 2j + 6 < (j + 4)2 rectangl. moreov, if v is a v -event point of b(w, v ), then v is a  vevent point of b(v, u) (thi includ the case v = 0 and v = 1, as 0 and 1 ar v -event point of b(v, u)) and if w is a w -event point of b(w, v ), then either w = 0 or w = 1 or there exist some u ∈ [0, 1] such that w = f(u) and u is a u-event point of b(v, u). henc, b(w, v ) ha at most 2j + 4 event point. the o(j2 ) bound on the run time in theorem 5 follow from our descript of the algorithm. the o(n3 ) bound on the overal run time for find a nash equilibrium (and a represent of all nash equilibria) follow. 4.1 find a singl nash equilibrium in o(n2 ) time the upper bound on the run time of our algorithm is tight, at least assum the straightforward implement, in which each b(vj+1, vj) is store as a union of rectangl: it is not hard to construct an exampl in which the size of b(vj+1, vj) is Ω(j2 ). howev, in some case it is not necessari to repres all nash equilibria; rather, the goal is to find an arbitrari equilibrium of the game. in thi section, we show that thi problem can be solv in quadrat time, thu obtain a proof of theorem 1. our solut is base on the idea of [9], i.e., work with subset of the best respons polici rather than the best respons polici themselv; follow [9], we will refer to such subset as breakpoint polici. while it is not alwai possibl to construct a breakpoint polici as defin in [9], we show how to modifi thi definit so as to ensur that a breakpoint polici alwai exist; moreov, we prove that for a path graph, the breakpoint polici of ani vertex can be store in a data structur whose size is linear in the number of descend thi vertex ha. definit 3. a breakpoint polici ˆb(v, u) for a vertex u whose parent is v is a non-self-intersect curv of the form x1 ∪ y1 ∪ · · · ∪ ym−1 ∪ xm, where xi = [vi−1, vi]×{ui}, yi = {vi}×[ui, ui+1] and ui, vi ∈ [0, 1] for i = 0, . . . , m. we sai that a breakpoint polici is valid if v0 = 0, vm = 1, and ˆb(v, u) ⊆ b(v, u). we will sometim abus notat by refer to ˆb(v, u) as a collect of segment xi, yi rather than their union. note that we do not requir that vi ≤ vi+1 or ui ≤ ui+1; consequ, in ani argument involv breakpoint polici, all segment ar to be treat as direct segment. observ that ani valid breakpoint polici ˆb(v, u) can be view as a continu 1-1 map γ(t) = (γv(t), γu(t)), γ : [0, 1] → [0, 1]2 , where γ(0) = (0, u1), γ(1) = (1, um) and there exist some t0 = 0, t1, . . . , t2m−2 = 1 such that {γ(t) | t2k ≤ t ≤ t2k+1} = xk+1, {γ(t) | t2k+1 ≤ t ≤ t2k+2} = yk+1. as explain in section 3, we can us a valid breakpoint polici instead of the best respons polici dure the downstream pass, and still guarante that in the end, we will output a nash equilibrium. theorem 6 show that on can induct comput valid  breakpoint polici for all vertic on the path; the proof of thi theorem can be found in the full version of thi paper [6]. theorem 6. for ani v = vj, on can find in polynomi time a valid breakpoint polici ˆb(w, v ) that consist of at most 2j + 1 segment. 5. nash equilibria on graph with maximum degre 2 in thi section we show how the algorithm for path can be  appli to solv a game on ani graph whose vertic have degre at most 2. a graph have maximum degre 2 is, of cours, a union of path and cycl. sinc each connect compon can be  handl independ, to obtain a proof of theorem 2, we onli need to show how to deal with cycl. given a cycl with vertic v1, . . . , vk (in cyclic order), we make two separ search for a nash equilibrium: first we search for a nash equilibrium where some vertex plai a pure strategi, then we search for a fulli mix nash equilibrium, where all vertic plai mix strategi. for i ≤ k let vi denot the probabl that vi plai 1. the first search can be done as follow. for each i ∈ {1, . . . , k} and each b ∈ {0, 1}, do the follow. 1. let p be the path (vi+1, vi+2 . . . , vk, v1, . . . , vi−1, vi) 2. let payoff to vi+1 be base on put vi = b (so it depend onli on vi+1 and vi+2.) 3. appli the upstream pass to p 4. put vi = b; appli the downstream pass for each vertex, vj, keep track of all possibl mix strategi vj 5. check whether vi+1 ha ani respons that ar consist with vi = b; if so we have a nash equilibrium. (otherwis, there is no nash equilibrium of the desir form.) for the second search, note that if vi plai a mix strategi, then vi+1 and vi−1 satisfi an equat of the form vi+1 = (a0 + a1vi−1)/(b0 + b1vi−1). sinc all vertic in the cycl plai mix strategi, we have vi+3 = (a0 +a1vi+1)/(b0 +b1vi+1). compos the two linear fraction transform, we obtain vi+3 = (a0 +a1 vi−1)/(b0 +b1 vi−1). for some new constant a0 , a1 , b0 , b1 . choos ani vertex vi. we can express vi in term of vi+2, then vi+4, vi+6 etc. and ultim vi itself to obtain a quadrat  equat (for vi) that is simpl to deriv from the payoff in the game. if the equat is non-trivial it ha at most 2 solut in (0, 1). for an odd-length cycl all other vj "s ar deriv from those solut, and if a fulli mix nash equilibrium exist, all the vj should turn out to be real number in the rang (0, 1). for an even-length  cycl, we obtain two quadrat equat, on for vi and anoth for 105 vi+1, and we can in the same wai test whether ani solut to these yield valu for the other vj , all of which lie in (0, 1). if the quadrat equat is trivial, there is potenti a  continuum of fulli-mix equilibria. the valu for vi that mai occur in a nash equilibrium ar those for which all depend vj valu lie in (0, 1); the latter condit is easi to check by comput the imag of the interv (0, 1) under respect fraction linear transform. 6. find equilibria on an  (arbitrari) tree for arbitrari tree, the gener structur of the algorithm remain the same, i.e., on can construct a best respons polici (or,  altern, a breakpoint polici) for ani vertex base on the best  respons polici of it children. we assum that the degre of each vertex is bound by a constant k, i.e., the payoff matrix for each vertex is of size o(2k ). consid a vertex v whose children ar u1, . . . , uk and whose parent is w ; the best respons polici of each uj is b(v, uj). similarli to the previou section, we can comput v "s expect payoff p0 and p1 from plai 0 or 1, respect. name, when each of the uj plai uj and w plai w, we have p0 = l0 (u1, . . . , uk, w), p 1 = l1 (u1, . . . , uk, w), where the  function l0 (·, . . . , ·), l1 (·, . . . , ·) ar linear in all of their argument. henc, the inequ p0 > p1 can be rewritten as wb(u1, . . . , uk) > a(u1, . . . , uk), where both a(·, . . . , ·) and b(·, . . . , ·) ar linear in all of their  argument. set u = (u1, . . . , uk) and defin the indiffer  function f : [0, 1]k → [0, 1] as f(u) = a(u)/b(u); clearli, if each uj plai uj, w plai w and w = f(u), v is indiffer between plai 0 and 1. for ani x = x1 × · · · × xk, where xi ⊆ [0, 1]2 defin ˆf(x) = {(f(u), v) | (v, ui) ∈ xi, i = 1, . . . , k} also, set ˆf(0) = {(w, 0) | ∃u s.t. ui ∈ pbrui (0) and wb(u) ≥ a(u)} and ˆf(1) = {(w, 1) | ∃u s.t. ui ∈ pbrui (1) and wb(u) ≤ a(u)}. as in previou section, we can show that b(w, v ) is equal to ˆf(0) ∪ ˆf(b(v, u1) × · · · × b(v, uk)) ∪ ˆf(1) [0, 1]2 ; also, ani path from w = 0 to w = 1 that is a subset of b(w, v ) constitut a valid breakpoint polici. 6.1 exponenti size breakpoint polici while the algorithm of section 4 can be gener for  boundeddegre tree, it run time is no longer polynomi. in fact, the convers is true: we can construct a famili of tree and payoff  matric for all player so that the best respons polici for some of the player consist of an exponenti number of segment.  moreov, in our exampl the breakpoint polici coincid with the best respons polici, which mean that even find a singl nash equilibrium us the approach of [8, 9] is go to take  exponenti long time. in fact, a stronger statement is true: for ani polynomi-time two-pass algorithm (defin later) that work with subset of best respons polici for thi graph, we can choos the payoff of the vertic so that the downstream pass of thi algorithm will fail. s 1 1 t s n−1 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 0 00 1 11 0 00 1 11 0 00 1 11 0 00 1 11 0 00 1 11 0 00 1 11 0 00 1 11 00 0000 11 1111 00 0000 11 1111 0 00 1 11 0000 00000000 00000000 0000 1111 11111111 11111111 1111 000 000000 000000 000 111 111111 111111 111 s s t t t 2 n−1 n 2 n 1 n−12 n vvvvv 0 figur 5: the tree tn that correspond to exponenti-size breakpoint polici. in the rest of thi subsect, we describ thi construct.  consid the tree tn given by figur 5; let vn be the root of thi tree. for everi k = 1, . . . , n, let the payoff of sk and tk be the same as those for the u and v describ in section 3; recal that the  breakpoint polici for u and v ar shown in figur 2. it is not hard to see that the indiffer function for tk is given by f(s) = .8s+.1. the payoff of v0 is 1 if v1 select the same action as v0 and 0 otherwis; v0"s best respons polici is given by figur 6. lemma 3. fix k < n, and let u, t, v, and w denot the  strategi of vk−1, tk, vk, and vk+1, respect. suppos that vk prefer plai 0 to plai 1 if and onli if .5t + .1u + .2 > w. then b(vk+1, vk) consist of at least 3k segment. moreov, {(v, w) | (v, w) ∈ b(vk+1, vk), 0 ≤ w ≤ .2} = [0, .2]×{0} and {(v, w) | (v, w) ∈ b(vk+1, vk), .8 ≤ w ≤ 1} = [.8, 1]×{1}. proof. the proof proce by induct on k. for k = 0, the statement is obviou. now, suppos it is true for b(vk, vk−1). on can view b(vk+1, vk) as a union of seven compon: ˆf(0) ∩ [0, 1]×{0}, ˆf(1) ∩ [0, 1]×{1}, and five compon that correspond to the segment of b(vk, tk). let us examin them in turn. to describ ˆf(0)∩[0, 1]×{0}, note that f(u, t) = .5t+.1u+.2 is monoton in t and u and satisfi f(0, 0) = .2. also, we have pbrvk−1 (0) = {0} and pbrtk (0) = {0}. for ani w ∈ [0, 1] we have f(0, 0) ≥ w if and onli if w ∈ [0, .2]. we conclud that ˆf(0) ∩ [0, 1]×{0} = [0, .2]×{0}. similarli, it follow that ˆf(1) ∩ [0, 1]×{1} = [.8, 1]×{1}. defin s1 = {(f(u, 0), v) | (v, u) ∈ b(vk, vk−1) ∩ [0, .9]×[0, 1]}, s2 = {(f(u, .5), v) | (v, u) ∈ b(vk, vk−1) ∩ [.1, .9]×[0, 1]}, s3 = {(f(u, 1), v) | (v, u) ∈ b(vk, vk−1) ∩ [.1, 1]×[0, 1]}; these set correspond to horizont segment of b(vk, tk). it is easi to see that s1, s2, s3 ⊂ b(vk+1, vk). sinc f is a continu function, the number of segment in each si is at least the number of segment in b(vk, vk−1)∩[.1, .9]×[0, 1], which is at least 3k−1 by induct hypothesi. moreov, as f is monoton in u and f(1, 0) < f(0, .5) < f(1, .5) < f(0, 1), all si, i = 1, 2, 3, ar disjoint. final, the set b(vk+1, vk) contain two segment that  correspond to the vertic segment of b(vk, tk), i.e., s4 = {(f(0, t), .1) | t ∈ [.5, 1]) = [.45, .7]×{.1} and s5 = {(f(1, t), .9) | t ∈ [0, .5]) = [.3, .55]×{.9}. clearli, s4 connect s2 and s3, s5 connect s1 and s2, and s4 and s5 do not intersect each other. we conclud that b(vk+1, vk) 106 0 00 00 00 00 00 00 00 00 00 0 1 11 11 11 11 11 11 11 11 11 1 00000000001111111111 1 1 10.8 1 1 0.9 0.1 v v0.5 0.2 v v 21 10 figur 6: breakpoint polici for v0 and v1. is a continu line that consist of at least 3k segment and satisfi the condit of the lemma. to complet the construct, we need to show that we can  design the payoff matrix for vk so that it prefer plai 0 to plai 1 if and onli if .5t + .1u + .2 > w. to thi end, we prove a more gener statement, name, that the indiffer function of a vertex can be an arbitrari fraction multilinear function of it descend" strategi. we sai that a function of k variabl is multilinear if it can be repres as a sum of monomi and each of these monomi is linear in all of it variabl. note that thi definit is differ from a more standard on in that we do not requir that all of the monomi have the same degre. recal that the payoff of a  vertex with k + 1 neighbour ar describ by matric p0 and p1 , where pj i0i1...ik is the payoff that v get when it plai j, and it neighbour plai i0, . . . , ik, and j, i0, . . . , ik ∈ {0, 1}. let p[j] = p[j](w, u1, . . . , uk) be the expect payoff obtain by thi  vertex when it plai j and the (mix) strategi of it neighbour ar given by a vector (w, u1, . . . , uk), i.e., p[j] = e[p j i0i1...ik ] where i0, . . . , ik ar independ bernoulli random variabl, each of which is 1 with the respect probabl w, u1, . . . , uk. lemma 4. given a tree vertex v whose parent is w and whose children ar u1, . . . , uk, for ani function f = f(u1, . . . , uk) that can be repres as a ratio of two multilinear function f1, f2, i.e., f = f1(u1,...,uk) f2(u1,...,uk) , there exist payoff matric p0 and p1 for v such that p[0] − p[1] = wf2(u1, . . . , uk) − f1(u1, . . . , uk). the proof of thi lemma is base on the fact that everi monomi of the form as(u0)s0 . . . (uk)sk , s1, . . . , sk ∈ {0, 1}, can be  repres as t=t0...tk∈Σk+1 ct(u0)t0 (1 − u0)1−t0 . . . (uk)tk (1 − uk)1−tk for some ct, t ∈ {0, 1}k+1 . the detail can be found in the full version of thi paper [6]. 6.2 irreduc of the best respons polici for tn while the best respons polici construct in the previou  subsect ha exponenti size, it is not clear `a priori that it is  necessari to keep track of all of it line segment rather than to focu on a small subset of these segment. howev, it turn out that for two-pass algorithm such as the algorithm of [8], the best respons polici cannot be simplifi. more precis, we sai that an  algorithm a is a two-pass algorithm if 0 0 0 00 0 0 0 0 00 0 0 0 0 00 0 0 0 0 1 1 1 11 1 1 1 1 11 1 1 1 1 11 1 1 1 1 0000000000000000000000000000011111111111111111111111111111 0.2 0.8 0.9 1 0.1 1 v v 2 3 s 1 s s s s 1 t 0 t 2 3 4 5 figur 7: breakpoint polici for v2. • a consist of an upstream pass and a downstream pass. • dure the upstream pass, for each vertex v with parent w , a construct a set bb(w, v ) ⊆ b(w, v ). thi set is  produc from the set {bb(v, u) | u is a child of v } by  appli the procedur from the begin of section 6  (substitut bb(v, uj ) for b(v, uj) for all children uj of v ) , and then possibl omit some of the point of the result set (which is then store explicitli). • the downstream pass is ident to the downstream pass of [8] as describ in section 2 except that it oper on the set bb(w, v ) rather than on the set b(w, v ). theorem 7 demonstr that ani two-pass algorithm will fail dure the downstream pass on tn if there is an index j such that the set bb(vj+1, vj) omit ani interior point of ani of the (at least 3j ) segment of b(vj+1, vj). thi impli theorem 3. theorem 7. for ani two-pass algorithm a for which there exist an index j, j ∈ [1, n/4], a segment s of b(vj , vj−1), and an interior point (x, y) of s such that bb(vj, vj−1) doe not contain (x, y), we can choos payoff matric of the vertic vj, . . . , vn so that the downstream pass of a will fail, and, addition, payoff to v4j , . . . , vn ar ident 0. we sketch the proof of theorem 7; the detail can be found in the full version of thi paper [6]. we proce by induct. for j = 1, the argument is similar to that in section 3. for the induct step, the main idea is that we can zoom in on ani part of a best respons polici (includ the part that wa omit!) by us an appropri indiffer function; thi allow us to reduc the case j = j0 to j = j0 − 1. 7. ppad-complet of bound pathwidth graphic game in the previou section, we show that for graphic game on tree that ar almost but not quit path, two-pass algorithm fail to find nash equilibria in polynomi time. we next show that a milder path-like graph properti allow us to construct graphic game for which it is unlik that ani polynomi-time algorithm will find nash equilibria. 7.1 pathwidth a path decomposit of a graph g = (v, e) is a sequenc of subset si(v ) ⊆ v such that for each edg (v, v ) ∈ e, v, v ∈ si(v ) for some i, and furthermor, for each v ∈ v , if v ∈ si(v ) and v ∈ sj(v ) for j > i, then v ∈ sk(v ) for all i ≤ k ≤ j. the path decomposit ha width k if all set si(v ) have cardin at most k + 1. the pathwidth of g is the minimum width of ani path decomposit of g. 107 pathwidth is a restrict of treewidth (in which on would seek a tree whose vertic were the set si(v ), and the set  contain some vertex would have to form a subtre). for ani constant k it can be decid in polynomi time whether a graph ha  pathwidth (or treewidth) k. furthermor mani graph-theoret  problem seem easier to solv in polynomi time, when restrict to fix treewidth, or pathwidth, graph, see [1] for an overview. note that a path ha pathwidth 1 and a cycl ha pathwidth 2. 7.2 ppad-complet we review some basic definit from the comput  complex theori of search problem. a search problem associ ani input (here, a graphic game) with a set of solut (here, the nash equilibria of the input game), where the descript length of ani solut should be polynomi bound as a function of the descript length of it input. in a total search problem, there is a guarante that at least on solut exist for ani input. nash"s theorem assur us that the problem of find nash equilibria is total. a reduct from search problem s to problem s is a  mechan that show that ani polynomi-time algorithm for s impli a polynomi-time algorithm for s. it consist of function f and g, comput in polynomi time, where f map input of s to input of s , and g map solut of s to solut of s, in such a wai that if is is an input to s, and ss is a solut to f(is), then g(ss ) is a solut to is. observ that total search problem do not allow the abov  reduct from problem such as circuit sat (where the input is a boolean circuit, and solut ar input vector that make the  output true) due to the fact that circuit sat and other np-complet problem have input with empti solut set. instead, recent work on the comput complex of find a nash  equilibrium [7, 4, 5, 2, 3] ha relat it to the follow problem. definit 4. end of the line. input: boolean circuit s and p, each have n input and n output bit, where p(0n ) = 0n and s(0n ) = 0n . solut: x ∈ {0, 1}n such that s(x) = x, or altern x ∈ {0, 1}n such that p(s(x)) = x. s and p can be thought of as stand for successor and  predecessor. observ that by comput si (0n ) (for i = 0, 1, 2, . . .) and compar with p(si+1 (0n )), we must eventu find a  solut to end of the line. end of the line character the complex class ppad (stand for pariti argument on a graph, direct version), introduc in papadimitri [11], and ani search problem s is ppad-complet if end of the line reduc to s. other ppad-complet problem includ the search for a ham sandwich hyperplan, and find market equilibria in an exchang economi (see [11] for more detail descript of these  problem). 3-graphic nash is the problem of find a nash  equilibrium for a graphic game whose graph ha degre 3. daskalaki et al. [4] show ppad-complet of 3-graphic nash by a  reduct from 3-dimension brouwer, introduc in [4] and defin as follow. definit 5. 3-dimension brouwer. input: a circuit c have 3n input bit and 2 output bit. the input bit defin a cubelet of the unit cube, consist of the 3 coordin of it point, given to n bit of precis. the output repres on of four colour assign by c to a cubelet. c is restrict so as to assign colour 1 to cubelet adjac to the (y, z)-plane, colour 2 to remain cubelet adjac to the (x, z)-plane, colour 3 to  remain cubelet on the (x, y)-plane, and colour 0 to all other cubelet on the surfac of the unit cube. a solut is a panchromat vertex, a vertex adjac to cubelet that have 4 distinct colour. the reason why a solut is guarante to exist, is that an  associ brouwer function φ can be construct, i.e. a continu function from the unit cube to itself, such that panchromat  vertic correspond to fixpoint of φ. brouwer"s fixpoint theorem promis the exist of a fixpoint. the proof of theorem 4 us a modif of the reduct of [4] from 3-dimension brouwer to 3-graphic nash. to prove the theorem, we begin with some preliminari result as follow. each player ha 2 action, denot 0 and 1. for a player at vertex v let p[v ] denot the probabl that the player plai 1. lemma 5. [7] there exist a graphic game gshift of fix size have vertic v , v where p[v ] is the fraction part of 2p[v ]. corollari 1. there exist a graphic game gn−shift of size Θ(n) of constant pathwidth, have vertic v , vn where p[vn] is the fraction part of 2n .p[v ]. proof. make a chain of n copi of gshift in lemma 5. each subset of vertic in the path decomposit is the vertic in a copi of gshift. let in(x) denot the n-th bit of the binari expans of x, where we interpret 1 as true and 0 as fals. the follow us gadget from [7, 4]. corollari 2. there exist k such that for all n, and for all n1, n2, n3 ≤ n, there exist a graphic game of size o(n) with pathwidth k, have vertic v1, v2, v3 where p[v3] = p[v1] + 2−n3 (in1 p[v1] ∧ in2 p[v2]). proof of theorem 4. let c be the boolean circuit  describ an instanc of 3-dimension brouwer. let g1, . . . , gp(n) be the gate of c index in such a wai that the input(s) to ani gate ar the output(s) of lower-index gate. g1, . . . , g3n will be the 3n input to c. all player in the graphic game g construct in [4] have 2 action denot 0 and 1. the probabl that v plai 1 is denot p[v ]. g ha 3 player vx, vy and vz for which p[vx], p[vy] and p[vz] repres the coordin of a point in the unit cube. g is design to incentiv vx, vy and vz to adjust their probabl in direct given by a brouwer function which is itself specifi by the circuit c. in a nash equilibrium, p[vx], p[vy] and p[vz] repres coordin of a fixpoint of a function that belong to the class of function repres by 3-dimension brouwer. for 1 ≤ i ≤ p(n) we introduc a vertex v (i) c such that for 1 ≤ j ≤ i, ij(p[v (i) c ]) is the output of gate gj; for i < j ≤ p(n), ij(p[v (i) c ]) is 0. construct v (i) c from v (i−1) c us corollari 2. let g(i) be the graphic game that doe thi. let s1(g(i) ), . . . , sn(g(i) ) be a length n path decomposit of g(i) , where v (i−1) c ∈ s1(g(i) ) and v (i) c ∈ sn(g(i) ). then, a path decomposit of ∪1≤i≤p(n)g(i) is obtain by  take the union of the separ path decomposit, togeth with sn(g(i−1) ) ∪ s1(g(i) ) for 2 ≤ i ≤ p(n). let gc be the abov graphic game that simul c. gc ha 3n input, consist of the first n bit of the binari expans of p[vx], p[vy] and p[vz]. similarli to [4], the output of gc affect vx, vy and vz as follow. colour 0 incentiv vx, vy and vz 108 to adjust their probabl p[vx], p[vy] and p[vz] in the  direct (−1, −1, −1); colour 2 incentiv them to move in direct (1, 0, 0); colour 2, direct (0, 1, 0); colour 3, direct (0, 0, 1). we need to ensur that at point at the boundari of adjac cubelet, the chang of direct will be approxim the  averag of direct of surround point. that wai, all four  color/direct must be nearbi so that thei can cancel each other out (and we ar at a panchromat vertex). thi is achiev us the same trick as [4], in which we make a constant number m of copi of gc, which differ in that each copi add a tini displac  vector to it copi of p[vx], p[vy] and p[vz] (which ar deriv from the origin us the addit gadget of [7]). us the addit and multipl gadget of [7] we averag the direct and add a small multipl of thi averag to (p[vx], p[vy], p[vz]). at a nash equilibrium the output of each copi will cancel each other out. the pathwidth of the whole game is at most m time the pathwidth gc. 8. open problem the most import problem left open by thi paper is whether it is possibl to find a nash equilibrium of a graphic game on a bound-degre tree in polynomi time. our construct show that ani two-pass algorithm that explicitli store breakpoint  polici need exponenti time and space. howev, it doe not  preclud the exist of an algorithm that is base on a similar idea, but, instead of comput the entir breakpoint polici for each  vertex, us a small number of addit pass through the graph to decid which (polynomi-size) part of each breakpoint  polici should be comput. in particular, such an algorithm mai be base on the approxim algorithm of [8], where the valu of is chosen adapt. anoth intrigu question is relat to the fact that the graph for which we construct an exponenti-size breakpoint polici ha pathwidth 2, while our posit result ar for a path, i.e., a graph of pathwidth 1. it is not clear if for ani bound-degre graph of pathwidth 1 the run time of (the breakpoint  policybas version of) our algorithm will be polynomi. in particular, it is instruct to consid a caterpillar graph, i.e., the graph that can be obtain from tn by delet the vertic s1, . . . , sn. for thi graph, the best respons polici of a vertex vk in the spine of the caterpillar is obtain by combin the best respons  polici of it predecessor on the spine vk−1 and it other child tk; sinc the latter is a leaf, it best respons polici is either trivial (i.e., [0, 1]2 , [0, 1]×{0}, or [0, 1]×{1}) or consist of two  horizont segment and on vertic segment of the form {α}×[0, 1] that connect them. assum for conveni that b(vk, tk) = [0, α]×{0} ∪ {α}×[0, 1] ∪ [α, 1]×{1}, and f is the indiffer function for vk, we observ that the best respons polici for vk consist of 5 compon: ˆf(0), ˆf(1), and three compon that correspond to [0, α]×{0}, {α}×[0, 1], and [α, 1]×{1}. henc, on can think of construct b(vk+1, vk) as the  follow process: turn b(vk, vk−1) by π/2, cut it along the (now horizont) line vk = α, appli a fraction linear transform to the horizont coordin of both part, and reconnect them us the imag of the segment {α}×[0, 1] under f. thi impli that the problem of bound the size of the best respons polici (or,  altern, the breakpoint polici), can be view as a gener of the follow comput geometri problem, which we  believ mai be of independ interest: problem 1. given a collect of axi-parallel segment in r2 , consid the follow oper: pick an axi-parallel line li (either vertic or horizont), cut the plane along thi line, and shift on of the result two part by an arbitrari amount δi; as a result, some segment will be split into two part. reconnect these part, i.e., for each segment of the form [a, b] × {c} that wa  transform into [a, t] × {c + δi} and [t, b] × {c}, introduc a segment {t}×[c, c+δi]. is it possibl to start with the segment [0, 1] and  after n oper obtain a set that cannot be repres as a union of poli(n) line segment? if ye, can it be the case that in thi set, there is no path with a polynomi number of turn that connect the endpoint of the origin segment? it turn out that in gener, the answer to the first question is posit, i.e., after n step, it is possibl to obtain a set that consist of Θ(cn ) segment for some c > 0. thi impli that even for a caterpillar, the best respons polici can be exponenti larg. howev, in our exampl (which is omit from thi version of the paper due to space constraint), there exist a polynomi-size path through the best respons polici, i.e., it doe not prove that the breakpoint polici is necessarili exponenti in size. if on can prove that thi is alwai the case, it mai be possibl to adapt thi proof to show that there can be an exponenti gap between the size of best respons polici and breakpoint polici. 9. refer [1] h. bodlaend and t. klok. effici and construct algorithm for the pathwidth and treewidth of graph. journal of algorithm, 21:358-402, 1996. [2] x. chen and x. deng. 3-nash is ppad-complet. technic report tr-05-134, electron colloquium in comput complex, 2005. [3] x. chen and x. deng. settl the complex of 2-player nash equilibrium. technic report tr-05-140, electron colloquium in comput complex, 2005. [4] c. daskalaki, p. goldberg, and c. papadimitri. the complex of comput a nash equilibrium. in proceed of the 38th acm symposium on theori of comput, 2006. [5] c. daskalaki and c. papadimitri. three-player game ar hard. technic report tr-05-139, electron colloquium in comput complex, 2005. [6] e. elkind, l. goldberg, and p. goldberg. nash equilibria in graphic game on tree revisit. technic report tr-06-005, electron colloquium in comput complex, 2006. [7] p. goldberg and c. papadimitri. reduc among equilibrium problem. in proceed of the 38th acm symposium on theori of comput, 2006. [8] m. kearn, m. littman, and s. singh. graphic model for game theori. in proceed of the 17th confer on uncertainti in artifici intellig, 2001. [9] m. littman, m. kearn, and s. singh. an effici exact algorithm for singli connect graphic game. in proceed of the 15th annual confer on neural inform process system, 2001. [10] l. ortiz and m. kearn. nash propag for loopi graphic game. in proceed of the 17th annual confer on neural inform process system, 2003. [11] c. papadimitri. on the complex of the pariti argument and other ineffici proof of exist. j. comput. syst. sci., 48(3):498-532, 1994. 109 